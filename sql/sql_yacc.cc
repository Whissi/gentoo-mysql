/* A Bison parser, made by GNU Bison 3.0.4.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.0.4"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs


/* Copy the first part of user declarations.  */
#line 31 "sql_yacc.yy" /* yacc.c:339  */

/*
Note: YYTHD is passed as an argument to yyparse(), and subsequently to yylex().
*/
#define YYP (YYTHD->m_parser_state)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL (YYLIP->query_charset)
#define YYMEM_ROOT (YYTHD->mem_root)

#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select()

#include <limits>
#include <type_traits>                       // for std::remove_reference
#include <utility>

#include "my_alloc.h"
#include "my_dbug.h"
#include "myisam.h"
#include "myisammrg.h"
#include "mysql/plugin.h"
#include "sql/auth/auth_acls.h"
#include "sql/auth/auth_common.h"
#include "sql/binlog.h"                          // for MAX_LOG_UNIQUE_FN_EXT
#include "sql/dd/info_schema/show.h"             // build_show_...
#include "sql/dd/types/abstract_table.h"         // TT_BASE_TABLE
#include "sql/derror.h"
#include "sql/event_parse_data.h"
                                             // used in RESET_MASTER parsing check
#include "sql/gis/srid.h"                    // gis::srid_t
#include "sql/item_cmpfunc.h"
#include "sql/item_create.h"
#include "sql/item_geofunc.h"
#include "sql/item_json_func.h"
#include "sql/item_regexp_func.h"
#include "sql/json_dom.h"
#include "sql/key_spec.h"
#include "sql/keycaches.h"
#include "sql/lex_symbol.h"
#include "sql/lex_token.h"
#include "sql/log_event.h"
#include "sql/opt_explain_json.h"
#include "sql/opt_explain_traditional.h"
#include "sql/parser_yystype.h"
#include "sql/protocol.h"
#include "sql/resourcegroups/resource_group_mgr.h" // resource_group_support
#include "sql/resourcegroups/resource_group_sql_cmd.h" // Sql_cmd_*_resource_group etc.
#include "sql/rpl_filter.h"
#include "sql/rpl_msr.h"       /* multisource replication */
#include "sql/rpl_slave.h"
#include "sql/rpl_slave.h"                       // Sql_cmd_change_repl_filter
#include "sql/set_var.h"
#include "sql/sp.h"
#include "sql/sp_head.h"
#include "sql/sp_instr.h"
#include "sql/sp_pcontext.h"
#include "sql/sp_rcontext.h"
#include "sql/sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql/sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql/sql_backup_lock.h"                   // Sql_cmd_lock_instance,
                                               // Sql_cmd_unlock_instance
#include "sql/sql_base.h"                        // find_temporary_table
#include "sql/sql_class.h"      /* Key_part_spec, enum_filetype */
#include "sql/sql_cmd_srs.h"
#include "sql/sql_component.h"
#include "sql/sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql/sql_handler.h"                       // Sql_cmd_handler_*
#include "sql/sql_import.h"                        // Sql_cmd_import_table
#include "sql/sql_parse.h"                        /* comp_*_creator */
#include "sql/sql_partition.h"                    /* mem_alloc_error */
#include "sql/sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql/sql_plugin.h"                      // plugin_is_ready
#include "sql/sql_profile.h"
#include "sql/sql_select.h"                        // Sql_cmd_select...
#include "sql/sql_servers.h"
#include "sql/sql_show_status.h"                 // build_show_session_status, ...
#include "sql/sql_signal.h"
#include "sql/sql_table.h"                        /* primary_key_name */
#include "sql/sql_tablespace.h"                  // Sql_cmd_alter_tablespace
#include "sql/sql_trigger.h"                     // Sql_cmd_create_trigger
#include "sql/sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql/table_function.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

/// The maximum number of histogram buckets.
static const int MAX_NUMBER_OF_HISTOGRAM_BUCKETS= 1024;

/// The default number of histogram buckets when the user does not specify it
/// explicitly. A value of 100 is chosen because the gain in accuracy above this
/// point seems to be generally low.
static const int DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS= 100;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F,G,H)           \
  {                                           \
    ulong val= *(H);                          \
    if (my_yyoverflow((B), (D), (F), &val))   \
    {                                         \
      yyerror(NULL, YYTHD, NULL, (const char*) (A));\
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(H)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT YYABORT

#define MYSQL_YYABORT_ERROR(...)              \
  do                                          \
  {                                           \
    my_error(__VA_ARGS__);                    \
    MYSQL_YYABORT;                            \
  } while(0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    YYTHD->syntax_error();              \
    MYSQL_YYABORT;                      \
  }

#define NEW_PTN new(YYMEM_ROOT)


/**
  Parse_tree_node::contextualize() function call wrapper
*/
#define CONTEXTUALIZE(x)                                \
  do                                                    \
  {                                                     \
    std::remove_reference<decltype(*x)>::type::context_t pc(YYTHD, Select); \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->contextualize(&pc)))    \
      MYSQL_YYABORT;                                                    \
  } while(0)


/**
  Item::itemize() function call wrapper
*/
#define ITEMIZE(x, y)                                                   \
  do                                                                    \
  {                                                                     \
    Parse_context pc(YYTHD, Select);                                    \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->itemize(&pc, (y))))     \
      MYSQL_YYABORT;                                                    \
  } while(0)

/**
  Parse_tree_root::make_cmd() wrapper to raise postponed error message on OOM

  @note x may be NULL because of OOM error.
*/
#define MAKE_CMD(x)                                    \
  do                                                   \
  {                                                    \
    if (YYTHD->is_error() || Lex->make_sql_cmd(x))     \
      MYSQL_YYABORT;                                   \
  } while(0)


#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error or an out-of-memory
  condition occurs, then the parser function MYSQLparse()
  returns 1 to the caller.

  This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros..

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup.
  In semantic actions, please use syntax_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

static
void MYSQLerror(YYLTYPE *location, THD *thd, Parse_tree_root **, const char *s)
{
  if (strcmp(s, "syntax error") == 0) {
    thd->syntax_error_at(*location);
  } else if (strcmp(s, "memory exhausted") == 0) {
    my_error(ER_DA_OOM, MYF(0));
  } else {
    // Find omitted error messages in the generated file (sql_yacc.cc) and fix:
    DBUG_ASSERT(false);
    my_error(ER_UNKNOWN_ERROR, MYF(0));
  }
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(const LEX_STRING &name)
{
  if (find_native_function_builder(name) != nullptr)
    return true;

  if (is_lex_native_function(&name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

static void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_CSTR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

static bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

static void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static void init_index_hints(List<Index_hint> *hints, index_hint_type type,
                             index_clause_map clause)
{
  List_iterator<Index_hint> it(*hints);
  Index_hint *hint;
  while ((hint= it++))
  {
    hint->type= type;
    hint->clause= clause;
  }
}

bool my_yyoverflow(short **a, YYSTYPE **b, YYLTYPE **c, ulong *yystacksize);

#include "sql/parse_tree_column_attrs.h"
#include "sql/parse_tree_handler.h"
#include "sql/parse_tree_items.h"
#include "sql/parse_tree_nodes.h"
#include "sql/parse_tree_partitions.h"

void warn_about_deprecated_national(THD *thd)
{
  if (native_strcasecmp(national_charset_info->csname, "utf8") == 0)
    push_warning(thd, ER_DEPRECATED_NATIONAL);
}

void warn_about_deprecated_binary(THD *thd)
{
  push_deprecated_warn(thd, "BINARY as attribute of a type",
  "a CHARACTER SET clause with _bin collation");
}


#line 476 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:339  */

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.h".  */
#ifndef YY_MYSQL_MNT_WORKSPACE_PERCONA_SERVER_8_0_SOURCE_TARBALLS_TEST_PERCONA_SERVER_SQL_SQL_YACC_H_INCLUDED
# define YY_MYSQL_MNT_WORKSPACE_PERCONA_SERVER_8_0_SOURCE_TARBALLS_TEST_PERCONA_SERVER_SQL_SQL_YACC_H_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    ABORT_SYM = 258,
    ACCESSIBLE_SYM = 259,
    ACCOUNT_SYM = 260,
    ACTION = 261,
    ADD = 262,
    ADDDATE_SYM = 263,
    AFTER_SYM = 264,
    AGAINST = 265,
    AGGREGATE_SYM = 266,
    ALGORITHM_SYM = 267,
    ALL = 268,
    ALTER = 269,
    ALWAYS_SYM = 270,
    OBSOLETE_TOKEN_271 = 271,
    ANALYZE_SYM = 272,
    AND_AND_SYM = 273,
    AND_SYM = 274,
    ANY_SYM = 275,
    AS = 276,
    ASC = 277,
    ASCII_SYM = 278,
    ASENSITIVE_SYM = 279,
    AT_SYM = 280,
    AUTOEXTEND_SIZE_SYM = 281,
    AUTO_INC = 282,
    AVG_ROW_LENGTH = 283,
    AVG_SYM = 284,
    BACKUP_SYM = 285,
    BEFORE_SYM = 286,
    BEGIN_SYM = 287,
    BETWEEN_SYM = 288,
    BIGINT_SYM = 289,
    BINARY_SYM = 290,
    BINLOG_SYM = 291,
    BIN_NUM = 292,
    BIT_AND_SYM = 293,
    BIT_OR_SYM = 294,
    BIT_SYM = 295,
    BIT_XOR_SYM = 296,
    BLOB_SYM = 297,
    BLOCK_SYM = 298,
    BOOLEAN_SYM = 299,
    BOOL_SYM = 300,
    BOTH = 301,
    BTREE_SYM = 302,
    BY = 303,
    BYTE_SYM = 304,
    CACHE_SYM = 305,
    CALL_SYM = 306,
    CASCADE = 307,
    CASCADED = 308,
    CASE_SYM = 309,
    CAST_SYM = 310,
    CATALOG_NAME_SYM = 311,
    CHAIN_SYM = 312,
    CHANGE = 313,
    CHANGED = 314,
    CHANNEL_SYM = 315,
    CHARSET = 316,
    CHAR_SYM = 317,
    CHECKSUM_SYM = 318,
    CHECK_SYM = 319,
    CIPHER_SYM = 320,
    CLASS_ORIGIN_SYM = 321,
    CLIENT_SYM = 322,
    CLOSE_SYM = 323,
    COALESCE = 324,
    CODE_SYM = 325,
    COLLATE_SYM = 326,
    COLLATION_SYM = 327,
    COLUMNS = 328,
    COLUMN_SYM = 329,
    COLUMN_FORMAT_SYM = 330,
    COLUMN_NAME_SYM = 331,
    COMMENT_SYM = 332,
    COMMITTED_SYM = 333,
    COMMIT_SYM = 334,
    COMPACT_SYM = 335,
    COMPLETION_SYM = 336,
    COMPRESSED_SYM = 337,
    COMPRESSION_SYM = 338,
    ENCRYPTION_SYM = 339,
    CONCURRENT = 340,
    CONDITION_SYM = 341,
    CONNECTION_SYM = 342,
    CONSISTENT_SYM = 343,
    CONSTRAINT = 344,
    CONSTRAINT_CATALOG_SYM = 345,
    CONSTRAINT_NAME_SYM = 346,
    CONSTRAINT_SCHEMA_SYM = 347,
    CONTAINS_SYM = 348,
    CONTEXT_SYM = 349,
    CONTINUE_SYM = 350,
    CONVERT_SYM = 351,
    COUNT_SYM = 352,
    CPU_SYM = 353,
    CREATE = 354,
    CROSS = 355,
    CUBE_SYM = 356,
    CURDATE = 357,
    CURRENT_SYM = 358,
    CURRENT_USER = 359,
    CURSOR_SYM = 360,
    CURSOR_NAME_SYM = 361,
    CURTIME = 362,
    DATABASE = 363,
    DATABASES = 364,
    DATAFILE_SYM = 365,
    DATA_SYM = 366,
    DATETIME_SYM = 367,
    DATE_ADD_INTERVAL = 368,
    DATE_SUB_INTERVAL = 369,
    DATE_SYM = 370,
    DAY_HOUR_SYM = 371,
    DAY_MICROSECOND_SYM = 372,
    DAY_MINUTE_SYM = 373,
    DAY_SECOND_SYM = 374,
    DAY_SYM = 375,
    DEALLOCATE_SYM = 376,
    DECIMAL_NUM = 377,
    DECIMAL_SYM = 378,
    DECLARE_SYM = 379,
    DEFAULT_SYM = 380,
    DEFAULT_AUTH_SYM = 381,
    DEFINER_SYM = 382,
    DELAYED_SYM = 383,
    DELAY_KEY_WRITE_SYM = 384,
    DELETE_SYM = 385,
    DESC = 386,
    DESCRIBE = 387,
    OBSOLETE_TOKEN_388 = 388,
    DETERMINISTIC_SYM = 389,
    DIAGNOSTICS_SYM = 390,
    DIRECTORY_SYM = 391,
    DISABLE_SYM = 392,
    DISCARD_SYM = 393,
    DISK_SYM = 394,
    DISTINCT = 395,
    DIV_SYM = 396,
    DOUBLE_SYM = 397,
    DO_SYM = 398,
    DROP = 399,
    DUAL_SYM = 400,
    DUMPFILE = 401,
    DUPLICATE_SYM = 402,
    DYNAMIC_SYM = 403,
    EACH_SYM = 404,
    ELSE = 405,
    ELSEIF_SYM = 406,
    ENABLE_SYM = 407,
    ENCLOSED = 408,
    END = 409,
    ENDS_SYM = 410,
    END_OF_INPUT = 411,
    ENGINES_SYM = 412,
    ENGINE_SYM = 413,
    ENUM_SYM = 414,
    EQ = 415,
    EQUAL_SYM = 416,
    ERROR_SYM = 417,
    ERRORS = 418,
    ESCAPED = 419,
    ESCAPE_SYM = 420,
    EVENTS_SYM = 421,
    EVENT_SYM = 422,
    EVERY_SYM = 423,
    EXCHANGE_SYM = 424,
    EXECUTE_SYM = 425,
    EXISTS = 426,
    EXIT_SYM = 427,
    EXPANSION_SYM = 428,
    EXPIRE_SYM = 429,
    EXPORT_SYM = 430,
    EXTENDED_SYM = 431,
    EXTENT_SIZE_SYM = 432,
    EXTRACT_SYM = 433,
    FALSE_SYM = 434,
    FAST_SYM = 435,
    FAULTS_SYM = 436,
    FETCH_SYM = 437,
    FILE_SYM = 438,
    FILE_BLOCK_SIZE_SYM = 439,
    FILTER_SYM = 440,
    FIRST_SYM = 441,
    FIXED_SYM = 442,
    FLOAT_NUM = 443,
    FLOAT_SYM = 444,
    FLUSH_SYM = 445,
    FOLLOWS_SYM = 446,
    FORCE_SYM = 447,
    FOREIGN = 448,
    FOR_SYM = 449,
    FORMAT_SYM = 450,
    FOUND_SYM = 451,
    FROM = 452,
    FULL = 453,
    FULLTEXT_SYM = 454,
    FUNCTION_SYM = 455,
    GE = 456,
    GENERAL = 457,
    GENERATED = 458,
    GROUP_REPLICATION = 459,
    GEOMETRYCOLLECTION_SYM = 460,
    GEOMETRY_SYM = 461,
    GET_FORMAT = 462,
    GET_SYM = 463,
    GLOBAL_SYM = 464,
    GRANT = 465,
    GRANTS = 466,
    GROUP_SYM = 467,
    GROUP_CONCAT_SYM = 468,
    GT_SYM = 469,
    HANDLER_SYM = 470,
    HASH_SYM = 471,
    HAVING = 472,
    HELP_SYM = 473,
    HEX_NUM = 474,
    HIGH_PRIORITY = 475,
    HOST_SYM = 476,
    HOSTS_SYM = 477,
    HOUR_MICROSECOND_SYM = 478,
    HOUR_MINUTE_SYM = 479,
    HOUR_SECOND_SYM = 480,
    HOUR_SYM = 481,
    IDENT = 482,
    IDENTIFIED_SYM = 483,
    IDENT_QUOTED = 484,
    IF = 485,
    IGNORE_SYM = 486,
    IGNORE_SERVER_IDS_SYM = 487,
    IMPORT = 488,
    INDEXES = 489,
    INDEX_SYM = 490,
    INFILE = 491,
    INITIAL_SIZE_SYM = 492,
    INNER_SYM = 493,
    INOUT_SYM = 494,
    INSENSITIVE_SYM = 495,
    INSERT_SYM = 496,
    INSERT_METHOD = 497,
    INSTANCE_SYM = 498,
    INSTALL_SYM = 499,
    INTERVAL_SYM = 500,
    INTO = 501,
    INT_SYM = 502,
    INVOKER_SYM = 503,
    IN_SYM = 504,
    IO_AFTER_GTIDS = 505,
    IO_BEFORE_GTIDS = 506,
    IO_SYM = 507,
    IPC_SYM = 508,
    IS = 509,
    ISOLATION = 510,
    ISSUER_SYM = 511,
    ITERATE_SYM = 512,
    JOIN_SYM = 513,
    JSON_SEPARATOR_SYM = 514,
    JSON_SYM = 515,
    KEYS = 516,
    KEY_BLOCK_SIZE = 517,
    KEY_SYM = 518,
    KILL_SYM = 519,
    LANGUAGE_SYM = 520,
    LAST_SYM = 521,
    LE = 522,
    LEADING = 523,
    LEAVES = 524,
    LEAVE_SYM = 525,
    LEFT = 526,
    LESS_SYM = 527,
    LEVEL_SYM = 528,
    LEX_HOSTNAME = 529,
    LIKE = 530,
    LIMIT = 531,
    LINEAR_SYM = 532,
    LINES = 533,
    LINESTRING_SYM = 534,
    LIST_SYM = 535,
    LOAD = 536,
    LOCAL_SYM = 537,
    OBSOLETE_TOKEN_538 = 538,
    LOCKS_SYM = 539,
    LOCK_SYM = 540,
    LOGFILE_SYM = 541,
    LOGS_SYM = 542,
    LONGBLOB_SYM = 543,
    LONGTEXT_SYM = 544,
    LONG_NUM = 545,
    LONG_SYM = 546,
    LOOP_SYM = 547,
    LOW_PRIORITY = 548,
    LT = 549,
    MASTER_AUTO_POSITION_SYM = 550,
    MASTER_BIND_SYM = 551,
    MASTER_CONNECT_RETRY_SYM = 552,
    MASTER_DELAY_SYM = 553,
    MASTER_HOST_SYM = 554,
    MASTER_LOG_FILE_SYM = 555,
    MASTER_LOG_POS_SYM = 556,
    MASTER_PASSWORD_SYM = 557,
    MASTER_PORT_SYM = 558,
    MASTER_RETRY_COUNT_SYM = 559,
    MASTER_SERVER_ID_SYM = 560,
    MASTER_SSL_CAPATH_SYM = 561,
    MASTER_TLS_VERSION_SYM = 562,
    MASTER_SSL_CA_SYM = 563,
    MASTER_SSL_CERT_SYM = 564,
    MASTER_SSL_CIPHER_SYM = 565,
    MASTER_SSL_CRL_SYM = 566,
    MASTER_SSL_CRLPATH_SYM = 567,
    MASTER_SSL_KEY_SYM = 568,
    MASTER_SSL_SYM = 569,
    MASTER_SSL_VERIFY_SERVER_CERT_SYM = 570,
    MASTER_SYM = 571,
    MASTER_USER_SYM = 572,
    MASTER_HEARTBEAT_PERIOD_SYM = 573,
    MATCH = 574,
    MAX_CONNECTIONS_PER_HOUR = 575,
    MAX_QUERIES_PER_HOUR = 576,
    MAX_ROWS = 577,
    MAX_SIZE_SYM = 578,
    MAX_SYM = 579,
    MAX_UPDATES_PER_HOUR = 580,
    MAX_USER_CONNECTIONS_SYM = 581,
    MAX_VALUE_SYM = 582,
    MEDIUMBLOB_SYM = 583,
    MEDIUMINT_SYM = 584,
    MEDIUMTEXT_SYM = 585,
    MEDIUM_SYM = 586,
    MEMORY_SYM = 587,
    MERGE_SYM = 588,
    MESSAGE_TEXT_SYM = 589,
    MICROSECOND_SYM = 590,
    MIGRATE_SYM = 591,
    MINUTE_MICROSECOND_SYM = 592,
    MINUTE_SECOND_SYM = 593,
    MINUTE_SYM = 594,
    MIN_ROWS = 595,
    MIN_SYM = 596,
    MODE_SYM = 597,
    MODIFIES_SYM = 598,
    MODIFY_SYM = 599,
    MOD_SYM = 600,
    MONTH_SYM = 601,
    MULTILINESTRING_SYM = 602,
    MULTIPOINT_SYM = 603,
    MULTIPOLYGON_SYM = 604,
    MUTEX_SYM = 605,
    MYSQL_ERRNO_SYM = 606,
    NAMES_SYM = 607,
    NAME_SYM = 608,
    NATIONAL_SYM = 609,
    NATURAL = 610,
    NCHAR_STRING = 611,
    NCHAR_SYM = 612,
    NDBCLUSTER_SYM = 613,
    NE = 614,
    NEG = 615,
    NEVER_SYM = 616,
    NEW_SYM = 617,
    NEXT_SYM = 618,
    NODEGROUP_SYM = 619,
    NONE_SYM = 620,
    NOT2_SYM = 621,
    NOT_SYM = 622,
    NOW_SYM = 623,
    NO_SYM = 624,
    NO_WAIT_SYM = 625,
    NO_WRITE_TO_BINLOG = 626,
    NULL_SYM = 627,
    NUM = 628,
    NUMBER_SYM = 629,
    NUMERIC_SYM = 630,
    NVARCHAR_SYM = 631,
    OFFSET_SYM = 632,
    ON_SYM = 633,
    ONE_SYM = 634,
    ONLY_SYM = 635,
    OPEN_SYM = 636,
    OPTIMIZE = 637,
    OPTIMIZER_COSTS_SYM = 638,
    OPTIONS_SYM = 639,
    OPTION = 640,
    OPTIONALLY = 641,
    OR2_SYM = 642,
    ORDER_SYM = 643,
    OR_OR_SYM = 644,
    OR_SYM = 645,
    OUTER_SYM = 646,
    OUTFILE = 647,
    OUT_SYM = 648,
    OWNER_SYM = 649,
    PACK_KEYS_SYM = 650,
    PAGE_SYM = 651,
    PARAM_MARKER = 652,
    PARSER_SYM = 653,
    OBSOLETE_TOKEN_654 = 654,
    PARTIAL = 655,
    PARTITION_SYM = 656,
    PARTITIONS_SYM = 657,
    PARTITIONING_SYM = 658,
    PASSWORD = 659,
    PHASE_SYM = 660,
    PLUGIN_DIR_SYM = 661,
    PLUGIN_SYM = 662,
    PLUGINS_SYM = 663,
    POINT_SYM = 664,
    POLYGON_SYM = 665,
    PORT_SYM = 666,
    POSITION_SYM = 667,
    PRECEDES_SYM = 668,
    PRECISION = 669,
    PREPARE_SYM = 670,
    PRESERVE_SYM = 671,
    PREV_SYM = 672,
    PRIMARY_SYM = 673,
    PRIVILEGES = 674,
    PROCEDURE_SYM = 675,
    PROCESS = 676,
    PROCESSLIST_SYM = 677,
    PROFILE_SYM = 678,
    PROFILES_SYM = 679,
    PROXY_SYM = 680,
    PURGE = 681,
    QUARTER_SYM = 682,
    QUERY_SYM = 683,
    QUICK = 684,
    RANGE_SYM = 685,
    READS_SYM = 686,
    READ_ONLY_SYM = 687,
    READ_SYM = 688,
    READ_WRITE_SYM = 689,
    REAL_SYM = 690,
    REBUILD_SYM = 691,
    RECOVER_SYM = 692,
    OBSOLETE_TOKEN_693 = 693,
    REDO_BUFFER_SIZE_SYM = 694,
    REDUNDANT_SYM = 695,
    REFERENCES = 696,
    REGEXP = 697,
    RELAY = 698,
    RELAYLOG_SYM = 699,
    RELAY_LOG_FILE_SYM = 700,
    RELAY_LOG_POS_SYM = 701,
    RELAY_THREAD = 702,
    RELEASE_SYM = 703,
    RELOAD = 704,
    REMOVE_SYM = 705,
    RENAME = 706,
    REORGANIZE_SYM = 707,
    REPAIR = 708,
    REPEATABLE_SYM = 709,
    REPEAT_SYM = 710,
    REPLACE_SYM = 711,
    REPLICATION = 712,
    REPLICATE_DO_DB = 713,
    REPLICATE_IGNORE_DB = 714,
    REPLICATE_DO_TABLE = 715,
    REPLICATE_IGNORE_TABLE = 716,
    REPLICATE_WILD_DO_TABLE = 717,
    REPLICATE_WILD_IGNORE_TABLE = 718,
    REPLICATE_REWRITE_DB = 719,
    REQUIRE_SYM = 720,
    RESET_SYM = 721,
    RESIGNAL_SYM = 722,
    RESOURCES = 723,
    RESTORE_SYM = 724,
    RESTRICT = 725,
    RESUME_SYM = 726,
    RETURNED_SQLSTATE_SYM = 727,
    RETURNS_SYM = 728,
    RETURN_SYM = 729,
    REVERSE_SYM = 730,
    REVOKE = 731,
    RIGHT = 732,
    ROLLBACK_SYM = 733,
    ROLLUP_SYM = 734,
    ROTATE_SYM = 735,
    ROUTINE_SYM = 736,
    ROWS_SYM = 737,
    ROW_FORMAT_SYM = 738,
    ROW_SYM = 739,
    ROW_COUNT_SYM = 740,
    RTREE_SYM = 741,
    SAVEPOINT_SYM = 742,
    SCHEDULE_SYM = 743,
    SCHEMA_NAME_SYM = 744,
    SECOND_MICROSECOND_SYM = 745,
    SECOND_SYM = 746,
    SECURITY_SYM = 747,
    SELECT_SYM = 748,
    SENSITIVE_SYM = 749,
    SEPARATOR_SYM = 750,
    SERIALIZABLE_SYM = 751,
    SERIAL_SYM = 752,
    SESSION_SYM = 753,
    SERVER_SYM = 754,
    OBSOLETE_TOKEN_755 = 755,
    SET_SYM = 756,
    SET_VAR = 757,
    SHARE_SYM = 758,
    SHIFT_LEFT = 759,
    SHIFT_RIGHT = 760,
    SHOW = 761,
    SHUTDOWN = 762,
    SIGNAL_SYM = 763,
    SIGNED_SYM = 764,
    SIMPLE_SYM = 765,
    SLAVE = 766,
    SLOW = 767,
    SMALLINT_SYM = 768,
    SNAPSHOT_SYM = 769,
    SOCKET_SYM = 770,
    SONAME_SYM = 771,
    SOUNDS_SYM = 772,
    SOURCE_SYM = 773,
    SPATIAL_SYM = 774,
    SPECIFIC_SYM = 775,
    SQLEXCEPTION_SYM = 776,
    SQLSTATE_SYM = 777,
    SQLWARNING_SYM = 778,
    SQL_AFTER_GTIDS = 779,
    SQL_AFTER_MTS_GAPS = 780,
    SQL_BEFORE_GTIDS = 781,
    SQL_BIG_RESULT = 782,
    SQL_BUFFER_RESULT = 783,
    OBSOLETE_TOKEN_784 = 784,
    SQL_CALC_FOUND_ROWS = 785,
    SQL_NO_CACHE_SYM = 786,
    SQL_SMALL_RESULT = 787,
    SQL_SYM = 788,
    SQL_THREAD = 789,
    SSL_SYM = 790,
    STACKED_SYM = 791,
    STARTING = 792,
    STARTS_SYM = 793,
    START_SYM = 794,
    STATS_AUTO_RECALC_SYM = 795,
    STATS_PERSISTENT_SYM = 796,
    STATS_SAMPLE_PAGES_SYM = 797,
    STATUS_SYM = 798,
    STDDEV_SAMP_SYM = 799,
    STD_SYM = 800,
    STOP_SYM = 801,
    STORAGE_SYM = 802,
    STORED_SYM = 803,
    STRAIGHT_JOIN = 804,
    STRING_SYM = 805,
    SUBCLASS_ORIGIN_SYM = 806,
    SUBDATE_SYM = 807,
    SUBJECT_SYM = 808,
    SUBPARTITIONS_SYM = 809,
    SUBPARTITION_SYM = 810,
    SUBSTRING = 811,
    SUM_SYM = 812,
    SUPER_SYM = 813,
    SUSPEND_SYM = 814,
    SWAPS_SYM = 815,
    SWITCHES_SYM = 816,
    SYSDATE = 817,
    TABLES = 818,
    TABLESPACE_SYM = 819,
    OBSOLETE_TOKEN_820 = 820,
    TABLE_SYM = 821,
    TABLE_CHECKSUM_SYM = 822,
    TABLE_NAME_SYM = 823,
    TEMPORARY = 824,
    TEMPTABLE_SYM = 825,
    TERMINATED = 826,
    TEXT_STRING = 827,
    TEXT_SYM = 828,
    THAN_SYM = 829,
    THEN_SYM = 830,
    TIMESTAMP_SYM = 831,
    TIMESTAMP_ADD = 832,
    TIMESTAMP_DIFF = 833,
    TIME_SYM = 834,
    TINYBLOB_SYM = 835,
    TINYINT_SYM = 836,
    TINYTEXT_SYN = 837,
    TO_SYM = 838,
    TRAILING = 839,
    TRANSACTION_SYM = 840,
    TRIGGERS_SYM = 841,
    TRIGGER_SYM = 842,
    TRIM = 843,
    TRUE_SYM = 844,
    TRUNCATE_SYM = 845,
    TYPES_SYM = 846,
    TYPE_SYM = 847,
    OBSOLETE_TOKEN_848 = 848,
    ULONGLONG_NUM = 849,
    UNCOMMITTED_SYM = 850,
    UNDEFINED_SYM = 851,
    UNDERSCORE_CHARSET = 852,
    UNDOFILE_SYM = 853,
    UNDO_BUFFER_SIZE_SYM = 854,
    UNDO_SYM = 855,
    UNICODE_SYM = 856,
    UNINSTALL_SYM = 857,
    UNION_SYM = 858,
    UNIQUE_SYM = 859,
    UNKNOWN_SYM = 860,
    UNLOCK_SYM = 861,
    UNSIGNED_SYM = 862,
    UNTIL_SYM = 863,
    UPDATE_SYM = 864,
    UPGRADE_SYM = 865,
    USAGE = 866,
    USER = 867,
    USE_FRM = 868,
    USE_SYM = 869,
    USING = 870,
    UTC_DATE_SYM = 871,
    UTC_TIMESTAMP_SYM = 872,
    UTC_TIME_SYM = 873,
    VALIDATION_SYM = 874,
    VALUES = 875,
    VALUE_SYM = 876,
    VARBINARY_SYM = 877,
    VARCHAR_SYM = 878,
    VARIABLES = 879,
    VARIANCE_SYM = 880,
    VARYING = 881,
    VAR_SAMP_SYM = 882,
    VIEW_SYM = 883,
    VIRTUAL_SYM = 884,
    WAIT_SYM = 885,
    WARNINGS = 886,
    WEEK_SYM = 887,
    WEIGHT_STRING_SYM = 888,
    WHEN_SYM = 889,
    WHERE = 890,
    WHILE_SYM = 891,
    WITH = 892,
    OBSOLETE_TOKEN_893 = 893,
    WITH_ROLLUP_SYM = 894,
    WITHOUT_SYM = 895,
    WORK_SYM = 896,
    WRAPPER_SYM = 897,
    WRITE_SYM = 898,
    X509_SYM = 899,
    XA_SYM = 900,
    XID_SYM = 901,
    XML_SYM = 902,
    XOR = 903,
    YEAR_MONTH_SYM = 904,
    YEAR_SYM = 905,
    ZEROFILL_SYM = 906,
    JSON_UNQUOTED_SEPARATOR_SYM = 907,
    PERSIST_SYM = 908,
    ROLE_SYM = 909,
    ADMIN_SYM = 910,
    INVISIBLE_SYM = 911,
    VISIBLE_SYM = 912,
    EXCEPT_SYM = 913,
    COMPONENT_SYM = 914,
    RECURSIVE_SYM = 915,
    GRAMMAR_SELECTOR_EXPR = 916,
    GRAMMAR_SELECTOR_GCOL = 917,
    GRAMMAR_SELECTOR_PART = 918,
    GRAMMAR_SELECTOR_CTE = 919,
    JSON_OBJECTAGG = 920,
    JSON_ARRAYAGG = 921,
    OF_SYM = 922,
    SKIP_SYM = 923,
    LOCKED_SYM = 924,
    NOWAIT_SYM = 925,
    GROUPING_SYM = 926,
    PERSIST_ONLY_SYM = 927,
    HISTOGRAM_SYM = 928,
    BUCKETS_SYM = 929,
    OBSOLETE_TOKEN_930 = 930,
    CLONE_SYM = 931,
    CUME_DIST_SYM = 932,
    DENSE_RANK_SYM = 933,
    EXCLUDE_SYM = 934,
    FIRST_VALUE_SYM = 935,
    FOLLOWING_SYM = 936,
    GROUPS_SYM = 937,
    LAG_SYM = 938,
    LAST_VALUE_SYM = 939,
    LEAD_SYM = 940,
    NTH_VALUE_SYM = 941,
    NTILE_SYM = 942,
    NULLS_SYM = 943,
    OTHERS_SYM = 944,
    OVER_SYM = 945,
    PERCENT_RANK_SYM = 946,
    PRECEDING_SYM = 947,
    RANK_SYM = 948,
    RESPECT_SYM = 949,
    ROW_NUMBER_SYM = 950,
    TIES_SYM = 951,
    UNBOUNDED_SYM = 952,
    WINDOW_SYM = 953,
    EMPTY_SYM = 954,
    JSON_TABLE_SYM = 955,
    NESTED_SYM = 956,
    ORDINALITY_SYM = 957,
    PATH_SYM = 958,
    HISTORY_SYM = 959,
    REUSE_SYM = 960,
    SRID_SYM = 961,
    THREAD_PRIORITY_SYM = 962,
    RESOURCE_SYM = 963,
    SYSTEM_SYM = 964,
    VCPU_SYM = 965,
    MASTER_PUBLIC_KEY_PATH_SYM = 966,
    GET_MASTER_PUBLIC_KEY_SYM = 967,
    RESTART_SYM = 968,
    DEFINITION_SYM = 969,
    DESCRIPTION_SYM = 970,
    ORGANIZATION_SYM = 971,
    REFERENCE_SYM = 972,
    ACTIVE_SYM = 973,
    INACTIVE_SYM = 974,
    LATERAL_SYM = 975,
    ARRAY_SYM = 976,
    MEMBER_SYM = 977,
    OPTIONAL_SYM = 978,
    SECONDARY_SYM = 979,
    SECONDARY_ENGINE_SYM = 980,
    SECONDARY_LOAD_SYM = 981,
    SECONDARY_UNLOAD_SYM = 982,
    RETAIN_SYM = 983,
    OLD_SYM = 984,
    ENFORCED_SYM = 985,
    OJ_SYM = 986,
    NETWORK_NAMESPACE_SYM = 987,
    RANDOM_SYM = 988,
    MASTER_COMPRESSION_ALGORITHM_SYM = 989,
    MASTER_ZSTD_COMPRESSION_LEVEL_SYM = 990,
    PRIVILEGE_CHECKS_USER_SYM = 991,
    MASTER_TLS_CIPHERSUITES_SYM = 992,
    REQUIRE_ROW_FORMAT_SYM = 993,
    PASSWORD_LOCK_TIME_SYM = 994,
    FAILED_LOGIN_ATTEMPTS_SYM = 995,
    CHANGED_PAGE_BITMAPS_SYM = 996,
    CLIENT_STATS_SYM = 997,
    CLUSTERING_SYM = 998,
    COMPRESSION_DICTIONARY_SYM = 999,
    INDEX_STATS_SYM = 1000,
    TABLE_STATS_SYM = 1001,
    THREAD_STATS_SYM = 1002,
    USER_STATS_SYM = 1003,
    ENCRYPTION_KEY_ID_SYM = 1004,
    EFFECTIVE_SYM = 1005,
    KEYWORD_USED_AS_IDENT = 1006,
    KEYWORD_USED_AS_KEYWORD = 1007,
    CONDITIONLESS_JOIN = 1008,
    SUBQUERY_AS_EXPR = 1009,
    EMPTY_FROM_CLAUSE = 1010
  };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACCOUNT_SYM 260
#define ACTION 261
#define ADD 262
#define ADDDATE_SYM 263
#define AFTER_SYM 264
#define AGAINST 265
#define AGGREGATE_SYM 266
#define ALGORITHM_SYM 267
#define ALL 268
#define ALTER 269
#define ALWAYS_SYM 270
#define OBSOLETE_TOKEN_271 271
#define ANALYZE_SYM 272
#define AND_AND_SYM 273
#define AND_SYM 274
#define ANY_SYM 275
#define AS 276
#define ASC 277
#define ASCII_SYM 278
#define ASENSITIVE_SYM 279
#define AT_SYM 280
#define AUTOEXTEND_SIZE_SYM 281
#define AUTO_INC 282
#define AVG_ROW_LENGTH 283
#define AVG_SYM 284
#define BACKUP_SYM 285
#define BEFORE_SYM 286
#define BEGIN_SYM 287
#define BETWEEN_SYM 288
#define BIGINT_SYM 289
#define BINARY_SYM 290
#define BINLOG_SYM 291
#define BIN_NUM 292
#define BIT_AND_SYM 293
#define BIT_OR_SYM 294
#define BIT_SYM 295
#define BIT_XOR_SYM 296
#define BLOB_SYM 297
#define BLOCK_SYM 298
#define BOOLEAN_SYM 299
#define BOOL_SYM 300
#define BOTH 301
#define BTREE_SYM 302
#define BY 303
#define BYTE_SYM 304
#define CACHE_SYM 305
#define CALL_SYM 306
#define CASCADE 307
#define CASCADED 308
#define CASE_SYM 309
#define CAST_SYM 310
#define CATALOG_NAME_SYM 311
#define CHAIN_SYM 312
#define CHANGE 313
#define CHANGED 314
#define CHANNEL_SYM 315
#define CHARSET 316
#define CHAR_SYM 317
#define CHECKSUM_SYM 318
#define CHECK_SYM 319
#define CIPHER_SYM 320
#define CLASS_ORIGIN_SYM 321
#define CLIENT_SYM 322
#define CLOSE_SYM 323
#define COALESCE 324
#define CODE_SYM 325
#define COLLATE_SYM 326
#define COLLATION_SYM 327
#define COLUMNS 328
#define COLUMN_SYM 329
#define COLUMN_FORMAT_SYM 330
#define COLUMN_NAME_SYM 331
#define COMMENT_SYM 332
#define COMMITTED_SYM 333
#define COMMIT_SYM 334
#define COMPACT_SYM 335
#define COMPLETION_SYM 336
#define COMPRESSED_SYM 337
#define COMPRESSION_SYM 338
#define ENCRYPTION_SYM 339
#define CONCURRENT 340
#define CONDITION_SYM 341
#define CONNECTION_SYM 342
#define CONSISTENT_SYM 343
#define CONSTRAINT 344
#define CONSTRAINT_CATALOG_SYM 345
#define CONSTRAINT_NAME_SYM 346
#define CONSTRAINT_SCHEMA_SYM 347
#define CONTAINS_SYM 348
#define CONTEXT_SYM 349
#define CONTINUE_SYM 350
#define CONVERT_SYM 351
#define COUNT_SYM 352
#define CPU_SYM 353
#define CREATE 354
#define CROSS 355
#define CUBE_SYM 356
#define CURDATE 357
#define CURRENT_SYM 358
#define CURRENT_USER 359
#define CURSOR_SYM 360
#define CURSOR_NAME_SYM 361
#define CURTIME 362
#define DATABASE 363
#define DATABASES 364
#define DATAFILE_SYM 365
#define DATA_SYM 366
#define DATETIME_SYM 367
#define DATE_ADD_INTERVAL 368
#define DATE_SUB_INTERVAL 369
#define DATE_SYM 370
#define DAY_HOUR_SYM 371
#define DAY_MICROSECOND_SYM 372
#define DAY_MINUTE_SYM 373
#define DAY_SECOND_SYM 374
#define DAY_SYM 375
#define DEALLOCATE_SYM 376
#define DECIMAL_NUM 377
#define DECIMAL_SYM 378
#define DECLARE_SYM 379
#define DEFAULT_SYM 380
#define DEFAULT_AUTH_SYM 381
#define DEFINER_SYM 382
#define DELAYED_SYM 383
#define DELAY_KEY_WRITE_SYM 384
#define DELETE_SYM 385
#define DESC 386
#define DESCRIBE 387
#define OBSOLETE_TOKEN_388 388
#define DETERMINISTIC_SYM 389
#define DIAGNOSTICS_SYM 390
#define DIRECTORY_SYM 391
#define DISABLE_SYM 392
#define DISCARD_SYM 393
#define DISK_SYM 394
#define DISTINCT 395
#define DIV_SYM 396
#define DOUBLE_SYM 397
#define DO_SYM 398
#define DROP 399
#define DUAL_SYM 400
#define DUMPFILE 401
#define DUPLICATE_SYM 402
#define DYNAMIC_SYM 403
#define EACH_SYM 404
#define ELSE 405
#define ELSEIF_SYM 406
#define ENABLE_SYM 407
#define ENCLOSED 408
#define END 409
#define ENDS_SYM 410
#define END_OF_INPUT 411
#define ENGINES_SYM 412
#define ENGINE_SYM 413
#define ENUM_SYM 414
#define EQ 415
#define EQUAL_SYM 416
#define ERROR_SYM 417
#define ERRORS 418
#define ESCAPED 419
#define ESCAPE_SYM 420
#define EVENTS_SYM 421
#define EVENT_SYM 422
#define EVERY_SYM 423
#define EXCHANGE_SYM 424
#define EXECUTE_SYM 425
#define EXISTS 426
#define EXIT_SYM 427
#define EXPANSION_SYM 428
#define EXPIRE_SYM 429
#define EXPORT_SYM 430
#define EXTENDED_SYM 431
#define EXTENT_SIZE_SYM 432
#define EXTRACT_SYM 433
#define FALSE_SYM 434
#define FAST_SYM 435
#define FAULTS_SYM 436
#define FETCH_SYM 437
#define FILE_SYM 438
#define FILE_BLOCK_SIZE_SYM 439
#define FILTER_SYM 440
#define FIRST_SYM 441
#define FIXED_SYM 442
#define FLOAT_NUM 443
#define FLOAT_SYM 444
#define FLUSH_SYM 445
#define FOLLOWS_SYM 446
#define FORCE_SYM 447
#define FOREIGN 448
#define FOR_SYM 449
#define FORMAT_SYM 450
#define FOUND_SYM 451
#define FROM 452
#define FULL 453
#define FULLTEXT_SYM 454
#define FUNCTION_SYM 455
#define GE 456
#define GENERAL 457
#define GENERATED 458
#define GROUP_REPLICATION 459
#define GEOMETRYCOLLECTION_SYM 460
#define GEOMETRY_SYM 461
#define GET_FORMAT 462
#define GET_SYM 463
#define GLOBAL_SYM 464
#define GRANT 465
#define GRANTS 466
#define GROUP_SYM 467
#define GROUP_CONCAT_SYM 468
#define GT_SYM 469
#define HANDLER_SYM 470
#define HASH_SYM 471
#define HAVING 472
#define HELP_SYM 473
#define HEX_NUM 474
#define HIGH_PRIORITY 475
#define HOST_SYM 476
#define HOSTS_SYM 477
#define HOUR_MICROSECOND_SYM 478
#define HOUR_MINUTE_SYM 479
#define HOUR_SECOND_SYM 480
#define HOUR_SYM 481
#define IDENT 482
#define IDENTIFIED_SYM 483
#define IDENT_QUOTED 484
#define IF 485
#define IGNORE_SYM 486
#define IGNORE_SERVER_IDS_SYM 487
#define IMPORT 488
#define INDEXES 489
#define INDEX_SYM 490
#define INFILE 491
#define INITIAL_SIZE_SYM 492
#define INNER_SYM 493
#define INOUT_SYM 494
#define INSENSITIVE_SYM 495
#define INSERT_SYM 496
#define INSERT_METHOD 497
#define INSTANCE_SYM 498
#define INSTALL_SYM 499
#define INTERVAL_SYM 500
#define INTO 501
#define INT_SYM 502
#define INVOKER_SYM 503
#define IN_SYM 504
#define IO_AFTER_GTIDS 505
#define IO_BEFORE_GTIDS 506
#define IO_SYM 507
#define IPC_SYM 508
#define IS 509
#define ISOLATION 510
#define ISSUER_SYM 511
#define ITERATE_SYM 512
#define JOIN_SYM 513
#define JSON_SEPARATOR_SYM 514
#define JSON_SYM 515
#define KEYS 516
#define KEY_BLOCK_SIZE 517
#define KEY_SYM 518
#define KILL_SYM 519
#define LANGUAGE_SYM 520
#define LAST_SYM 521
#define LE 522
#define LEADING 523
#define LEAVES 524
#define LEAVE_SYM 525
#define LEFT 526
#define LESS_SYM 527
#define LEVEL_SYM 528
#define LEX_HOSTNAME 529
#define LIKE 530
#define LIMIT 531
#define LINEAR_SYM 532
#define LINES 533
#define LINESTRING_SYM 534
#define LIST_SYM 535
#define LOAD 536
#define LOCAL_SYM 537
#define OBSOLETE_TOKEN_538 538
#define LOCKS_SYM 539
#define LOCK_SYM 540
#define LOGFILE_SYM 541
#define LOGS_SYM 542
#define LONGBLOB_SYM 543
#define LONGTEXT_SYM 544
#define LONG_NUM 545
#define LONG_SYM 546
#define LOOP_SYM 547
#define LOW_PRIORITY 548
#define LT 549
#define MASTER_AUTO_POSITION_SYM 550
#define MASTER_BIND_SYM 551
#define MASTER_CONNECT_RETRY_SYM 552
#define MASTER_DELAY_SYM 553
#define MASTER_HOST_SYM 554
#define MASTER_LOG_FILE_SYM 555
#define MASTER_LOG_POS_SYM 556
#define MASTER_PASSWORD_SYM 557
#define MASTER_PORT_SYM 558
#define MASTER_RETRY_COUNT_SYM 559
#define MASTER_SERVER_ID_SYM 560
#define MASTER_SSL_CAPATH_SYM 561
#define MASTER_TLS_VERSION_SYM 562
#define MASTER_SSL_CA_SYM 563
#define MASTER_SSL_CERT_SYM 564
#define MASTER_SSL_CIPHER_SYM 565
#define MASTER_SSL_CRL_SYM 566
#define MASTER_SSL_CRLPATH_SYM 567
#define MASTER_SSL_KEY_SYM 568
#define MASTER_SSL_SYM 569
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 570
#define MASTER_SYM 571
#define MASTER_USER_SYM 572
#define MASTER_HEARTBEAT_PERIOD_SYM 573
#define MATCH 574
#define MAX_CONNECTIONS_PER_HOUR 575
#define MAX_QUERIES_PER_HOUR 576
#define MAX_ROWS 577
#define MAX_SIZE_SYM 578
#define MAX_SYM 579
#define MAX_UPDATES_PER_HOUR 580
#define MAX_USER_CONNECTIONS_SYM 581
#define MAX_VALUE_SYM 582
#define MEDIUMBLOB_SYM 583
#define MEDIUMINT_SYM 584
#define MEDIUMTEXT_SYM 585
#define MEDIUM_SYM 586
#define MEMORY_SYM 587
#define MERGE_SYM 588
#define MESSAGE_TEXT_SYM 589
#define MICROSECOND_SYM 590
#define MIGRATE_SYM 591
#define MINUTE_MICROSECOND_SYM 592
#define MINUTE_SECOND_SYM 593
#define MINUTE_SYM 594
#define MIN_ROWS 595
#define MIN_SYM 596
#define MODE_SYM 597
#define MODIFIES_SYM 598
#define MODIFY_SYM 599
#define MOD_SYM 600
#define MONTH_SYM 601
#define MULTILINESTRING_SYM 602
#define MULTIPOINT_SYM 603
#define MULTIPOLYGON_SYM 604
#define MUTEX_SYM 605
#define MYSQL_ERRNO_SYM 606
#define NAMES_SYM 607
#define NAME_SYM 608
#define NATIONAL_SYM 609
#define NATURAL 610
#define NCHAR_STRING 611
#define NCHAR_SYM 612
#define NDBCLUSTER_SYM 613
#define NE 614
#define NEG 615
#define NEVER_SYM 616
#define NEW_SYM 617
#define NEXT_SYM 618
#define NODEGROUP_SYM 619
#define NONE_SYM 620
#define NOT2_SYM 621
#define NOT_SYM 622
#define NOW_SYM 623
#define NO_SYM 624
#define NO_WAIT_SYM 625
#define NO_WRITE_TO_BINLOG 626
#define NULL_SYM 627
#define NUM 628
#define NUMBER_SYM 629
#define NUMERIC_SYM 630
#define NVARCHAR_SYM 631
#define OFFSET_SYM 632
#define ON_SYM 633
#define ONE_SYM 634
#define ONLY_SYM 635
#define OPEN_SYM 636
#define OPTIMIZE 637
#define OPTIMIZER_COSTS_SYM 638
#define OPTIONS_SYM 639
#define OPTION 640
#define OPTIONALLY 641
#define OR2_SYM 642
#define ORDER_SYM 643
#define OR_OR_SYM 644
#define OR_SYM 645
#define OUTER_SYM 646
#define OUTFILE 647
#define OUT_SYM 648
#define OWNER_SYM 649
#define PACK_KEYS_SYM 650
#define PAGE_SYM 651
#define PARAM_MARKER 652
#define PARSER_SYM 653
#define OBSOLETE_TOKEN_654 654
#define PARTIAL 655
#define PARTITION_SYM 656
#define PARTITIONS_SYM 657
#define PARTITIONING_SYM 658
#define PASSWORD 659
#define PHASE_SYM 660
#define PLUGIN_DIR_SYM 661
#define PLUGIN_SYM 662
#define PLUGINS_SYM 663
#define POINT_SYM 664
#define POLYGON_SYM 665
#define PORT_SYM 666
#define POSITION_SYM 667
#define PRECEDES_SYM 668
#define PRECISION 669
#define PREPARE_SYM 670
#define PRESERVE_SYM 671
#define PREV_SYM 672
#define PRIMARY_SYM 673
#define PRIVILEGES 674
#define PROCEDURE_SYM 675
#define PROCESS 676
#define PROCESSLIST_SYM 677
#define PROFILE_SYM 678
#define PROFILES_SYM 679
#define PROXY_SYM 680
#define PURGE 681
#define QUARTER_SYM 682
#define QUERY_SYM 683
#define QUICK 684
#define RANGE_SYM 685
#define READS_SYM 686
#define READ_ONLY_SYM 687
#define READ_SYM 688
#define READ_WRITE_SYM 689
#define REAL_SYM 690
#define REBUILD_SYM 691
#define RECOVER_SYM 692
#define OBSOLETE_TOKEN_693 693
#define REDO_BUFFER_SIZE_SYM 694
#define REDUNDANT_SYM 695
#define REFERENCES 696
#define REGEXP 697
#define RELAY 698
#define RELAYLOG_SYM 699
#define RELAY_LOG_FILE_SYM 700
#define RELAY_LOG_POS_SYM 701
#define RELAY_THREAD 702
#define RELEASE_SYM 703
#define RELOAD 704
#define REMOVE_SYM 705
#define RENAME 706
#define REORGANIZE_SYM 707
#define REPAIR 708
#define REPEATABLE_SYM 709
#define REPEAT_SYM 710
#define REPLACE_SYM 711
#define REPLICATION 712
#define REPLICATE_DO_DB 713
#define REPLICATE_IGNORE_DB 714
#define REPLICATE_DO_TABLE 715
#define REPLICATE_IGNORE_TABLE 716
#define REPLICATE_WILD_DO_TABLE 717
#define REPLICATE_WILD_IGNORE_TABLE 718
#define REPLICATE_REWRITE_DB 719
#define REQUIRE_SYM 720
#define RESET_SYM 721
#define RESIGNAL_SYM 722
#define RESOURCES 723
#define RESTORE_SYM 724
#define RESTRICT 725
#define RESUME_SYM 726
#define RETURNED_SQLSTATE_SYM 727
#define RETURNS_SYM 728
#define RETURN_SYM 729
#define REVERSE_SYM 730
#define REVOKE 731
#define RIGHT 732
#define ROLLBACK_SYM 733
#define ROLLUP_SYM 734
#define ROTATE_SYM 735
#define ROUTINE_SYM 736
#define ROWS_SYM 737
#define ROW_FORMAT_SYM 738
#define ROW_SYM 739
#define ROW_COUNT_SYM 740
#define RTREE_SYM 741
#define SAVEPOINT_SYM 742
#define SCHEDULE_SYM 743
#define SCHEMA_NAME_SYM 744
#define SECOND_MICROSECOND_SYM 745
#define SECOND_SYM 746
#define SECURITY_SYM 747
#define SELECT_SYM 748
#define SENSITIVE_SYM 749
#define SEPARATOR_SYM 750
#define SERIALIZABLE_SYM 751
#define SERIAL_SYM 752
#define SESSION_SYM 753
#define SERVER_SYM 754
#define OBSOLETE_TOKEN_755 755
#define SET_SYM 756
#define SET_VAR 757
#define SHARE_SYM 758
#define SHIFT_LEFT 759
#define SHIFT_RIGHT 760
#define SHOW 761
#define SHUTDOWN 762
#define SIGNAL_SYM 763
#define SIGNED_SYM 764
#define SIMPLE_SYM 765
#define SLAVE 766
#define SLOW 767
#define SMALLINT_SYM 768
#define SNAPSHOT_SYM 769
#define SOCKET_SYM 770
#define SONAME_SYM 771
#define SOUNDS_SYM 772
#define SOURCE_SYM 773
#define SPATIAL_SYM 774
#define SPECIFIC_SYM 775
#define SQLEXCEPTION_SYM 776
#define SQLSTATE_SYM 777
#define SQLWARNING_SYM 778
#define SQL_AFTER_GTIDS 779
#define SQL_AFTER_MTS_GAPS 780
#define SQL_BEFORE_GTIDS 781
#define SQL_BIG_RESULT 782
#define SQL_BUFFER_RESULT 783
#define OBSOLETE_TOKEN_784 784
#define SQL_CALC_FOUND_ROWS 785
#define SQL_NO_CACHE_SYM 786
#define SQL_SMALL_RESULT 787
#define SQL_SYM 788
#define SQL_THREAD 789
#define SSL_SYM 790
#define STACKED_SYM 791
#define STARTING 792
#define STARTS_SYM 793
#define START_SYM 794
#define STATS_AUTO_RECALC_SYM 795
#define STATS_PERSISTENT_SYM 796
#define STATS_SAMPLE_PAGES_SYM 797
#define STATUS_SYM 798
#define STDDEV_SAMP_SYM 799
#define STD_SYM 800
#define STOP_SYM 801
#define STORAGE_SYM 802
#define STORED_SYM 803
#define STRAIGHT_JOIN 804
#define STRING_SYM 805
#define SUBCLASS_ORIGIN_SYM 806
#define SUBDATE_SYM 807
#define SUBJECT_SYM 808
#define SUBPARTITIONS_SYM 809
#define SUBPARTITION_SYM 810
#define SUBSTRING 811
#define SUM_SYM 812
#define SUPER_SYM 813
#define SUSPEND_SYM 814
#define SWAPS_SYM 815
#define SWITCHES_SYM 816
#define SYSDATE 817
#define TABLES 818
#define TABLESPACE_SYM 819
#define OBSOLETE_TOKEN_820 820
#define TABLE_SYM 821
#define TABLE_CHECKSUM_SYM 822
#define TABLE_NAME_SYM 823
#define TEMPORARY 824
#define TEMPTABLE_SYM 825
#define TERMINATED 826
#define TEXT_STRING 827
#define TEXT_SYM 828
#define THAN_SYM 829
#define THEN_SYM 830
#define TIMESTAMP_SYM 831
#define TIMESTAMP_ADD 832
#define TIMESTAMP_DIFF 833
#define TIME_SYM 834
#define TINYBLOB_SYM 835
#define TINYINT_SYM 836
#define TINYTEXT_SYN 837
#define TO_SYM 838
#define TRAILING 839
#define TRANSACTION_SYM 840
#define TRIGGERS_SYM 841
#define TRIGGER_SYM 842
#define TRIM 843
#define TRUE_SYM 844
#define TRUNCATE_SYM 845
#define TYPES_SYM 846
#define TYPE_SYM 847
#define OBSOLETE_TOKEN_848 848
#define ULONGLONG_NUM 849
#define UNCOMMITTED_SYM 850
#define UNDEFINED_SYM 851
#define UNDERSCORE_CHARSET 852
#define UNDOFILE_SYM 853
#define UNDO_BUFFER_SIZE_SYM 854
#define UNDO_SYM 855
#define UNICODE_SYM 856
#define UNINSTALL_SYM 857
#define UNION_SYM 858
#define UNIQUE_SYM 859
#define UNKNOWN_SYM 860
#define UNLOCK_SYM 861
#define UNSIGNED_SYM 862
#define UNTIL_SYM 863
#define UPDATE_SYM 864
#define UPGRADE_SYM 865
#define USAGE 866
#define USER 867
#define USE_FRM 868
#define USE_SYM 869
#define USING 870
#define UTC_DATE_SYM 871
#define UTC_TIMESTAMP_SYM 872
#define UTC_TIME_SYM 873
#define VALIDATION_SYM 874
#define VALUES 875
#define VALUE_SYM 876
#define VARBINARY_SYM 877
#define VARCHAR_SYM 878
#define VARIABLES 879
#define VARIANCE_SYM 880
#define VARYING 881
#define VAR_SAMP_SYM 882
#define VIEW_SYM 883
#define VIRTUAL_SYM 884
#define WAIT_SYM 885
#define WARNINGS 886
#define WEEK_SYM 887
#define WEIGHT_STRING_SYM 888
#define WHEN_SYM 889
#define WHERE 890
#define WHILE_SYM 891
#define WITH 892
#define OBSOLETE_TOKEN_893 893
#define WITH_ROLLUP_SYM 894
#define WITHOUT_SYM 895
#define WORK_SYM 896
#define WRAPPER_SYM 897
#define WRITE_SYM 898
#define X509_SYM 899
#define XA_SYM 900
#define XID_SYM 901
#define XML_SYM 902
#define XOR 903
#define YEAR_MONTH_SYM 904
#define YEAR_SYM 905
#define ZEROFILL_SYM 906
#define JSON_UNQUOTED_SEPARATOR_SYM 907
#define PERSIST_SYM 908
#define ROLE_SYM 909
#define ADMIN_SYM 910
#define INVISIBLE_SYM 911
#define VISIBLE_SYM 912
#define EXCEPT_SYM 913
#define COMPONENT_SYM 914
#define RECURSIVE_SYM 915
#define GRAMMAR_SELECTOR_EXPR 916
#define GRAMMAR_SELECTOR_GCOL 917
#define GRAMMAR_SELECTOR_PART 918
#define GRAMMAR_SELECTOR_CTE 919
#define JSON_OBJECTAGG 920
#define JSON_ARRAYAGG 921
#define OF_SYM 922
#define SKIP_SYM 923
#define LOCKED_SYM 924
#define NOWAIT_SYM 925
#define GROUPING_SYM 926
#define PERSIST_ONLY_SYM 927
#define HISTOGRAM_SYM 928
#define BUCKETS_SYM 929
#define OBSOLETE_TOKEN_930 930
#define CLONE_SYM 931
#define CUME_DIST_SYM 932
#define DENSE_RANK_SYM 933
#define EXCLUDE_SYM 934
#define FIRST_VALUE_SYM 935
#define FOLLOWING_SYM 936
#define GROUPS_SYM 937
#define LAG_SYM 938
#define LAST_VALUE_SYM 939
#define LEAD_SYM 940
#define NTH_VALUE_SYM 941
#define NTILE_SYM 942
#define NULLS_SYM 943
#define OTHERS_SYM 944
#define OVER_SYM 945
#define PERCENT_RANK_SYM 946
#define PRECEDING_SYM 947
#define RANK_SYM 948
#define RESPECT_SYM 949
#define ROW_NUMBER_SYM 950
#define TIES_SYM 951
#define UNBOUNDED_SYM 952
#define WINDOW_SYM 953
#define EMPTY_SYM 954
#define JSON_TABLE_SYM 955
#define NESTED_SYM 956
#define ORDINALITY_SYM 957
#define PATH_SYM 958
#define HISTORY_SYM 959
#define REUSE_SYM 960
#define SRID_SYM 961
#define THREAD_PRIORITY_SYM 962
#define RESOURCE_SYM 963
#define SYSTEM_SYM 964
#define VCPU_SYM 965
#define MASTER_PUBLIC_KEY_PATH_SYM 966
#define GET_MASTER_PUBLIC_KEY_SYM 967
#define RESTART_SYM 968
#define DEFINITION_SYM 969
#define DESCRIPTION_SYM 970
#define ORGANIZATION_SYM 971
#define REFERENCE_SYM 972
#define ACTIVE_SYM 973
#define INACTIVE_SYM 974
#define LATERAL_SYM 975
#define ARRAY_SYM 976
#define MEMBER_SYM 977
#define OPTIONAL_SYM 978
#define SECONDARY_SYM 979
#define SECONDARY_ENGINE_SYM 980
#define SECONDARY_LOAD_SYM 981
#define SECONDARY_UNLOAD_SYM 982
#define RETAIN_SYM 983
#define OLD_SYM 984
#define ENFORCED_SYM 985
#define OJ_SYM 986
#define NETWORK_NAMESPACE_SYM 987
#define RANDOM_SYM 988
#define MASTER_COMPRESSION_ALGORITHM_SYM 989
#define MASTER_ZSTD_COMPRESSION_LEVEL_SYM 990
#define PRIVILEGE_CHECKS_USER_SYM 991
#define MASTER_TLS_CIPHERSUITES_SYM 992
#define REQUIRE_ROW_FORMAT_SYM 993
#define PASSWORD_LOCK_TIME_SYM 994
#define FAILED_LOGIN_ATTEMPTS_SYM 995
#define CHANGED_PAGE_BITMAPS_SYM 996
#define CLIENT_STATS_SYM 997
#define CLUSTERING_SYM 998
#define COMPRESSION_DICTIONARY_SYM 999
#define INDEX_STATS_SYM 1000
#define TABLE_STATS_SYM 1001
#define THREAD_STATS_SYM 1002
#define USER_STATS_SYM 1003
#define ENCRYPTION_KEY_ID_SYM 1004
#define EFFECTIVE_SYM 1005
#define KEYWORD_USED_AS_IDENT 1006
#define KEYWORD_USED_AS_KEYWORD 1007
#define CONDITIONLESS_JOIN 1008
#define SUBQUERY_AS_EXPR 1009
#define EMPTY_FROM_CLAUSE 1010

/* Value type.  */

/* Location type.  */
#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE YYLTYPE;
struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
};
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif



int MYSQLparse (class THD *YYTHD, class Parse_tree_root **parse_tree);

#endif /* !YY_MYSQL_MNT_WORKSPACE_PERCONA_SERVER_8_0_SOURCE_TARBALLS_TEST_PERCONA_SERVER_SQL_SQL_YACC_H_INCLUDED  */

/* Copy the second part of user declarations.  */

#line 2045 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:358  */

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif


#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
             && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYSIZE_T yynewbytes;                                            \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / sizeof (*yyptr);                          \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  1011
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   84223

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  775
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  919
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3017
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  5284

/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
   by yylex, with out-of-bounds checking.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   1010

#define YYTRANSLATE(YYX)                                                \
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, without out-of-bounds checking.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   772,     2,     2,     2,   760,   755,     2,
     764,   765,   758,   757,   769,   756,   770,   759,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   771,   767,
       2,     2,     2,     2,   768,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   761,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   773,   754,   774,   762,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   763,
     766
};

#if YYDEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  1996,  1996,  1997,  2002,  2012,  2030,  2037,  2050,  2049,
    2074,  2081,  2083,  2087,  2088,  2093,  2094,  2095,  2096,  2097,
    2098,  2099,  2100,  2101,  2102,  2103,  2104,  2105,  2106,  2107,
    2108,  2109,  2110,  2111,  2112,  2113,  2114,  2115,  2116,  2117,
    2118,  2119,  2120,  2121,  2122,  2123,  2124,  2125,  2126,  2127,
    2128,  2129,  2130,  2131,  2132,  2133,  2134,  2135,  2136,  2137,
    2138,  2139,  2140,  2141,  2142,  2143,  2144,  2145,  2146,  2147,
    2148,  2149,  2150,  2151,  2152,  2153,  2154,  2155,  2156,  2157,
    2158,  2159,  2160,  2161,  2162,  2163,  2164,  2165,  2166,  2167,
    2168,  2169,  2170,  2171,  2172,  2173,  2174,  2175,  2176,  2177,
    2178,  2179,  2180,  2181,  2182,  2183,  2187,  2197,  2198,  2202,
    2222,  2229,  2240,  2239,  2250,  2252,  2256,  2257,  2261,  2274,
    2273,  2293,  2292,  2306,  2305,  2320,  2321,  2324,  2331,  2338,
    2345,  2352,  2359,  2367,  2376,  2382,  2389,  2396,  2404,  2413,
    2419,  2425,  2433,  2441,  2447,  2454,  2461,  2469,  2481,  2487,
    2494,  2501,  2509,  2519,  2520,  2524,  2528,  2532,  2536,  2540,
    2550,  2554,  2558,  2563,  2574,  2579,  2583,  2587,  2591,  2592,
    2596,  2600,  2604,  2609,  2613,  2617,  2621,  2627,  2661,  2665,
    2669,  2673,  2679,  2680,  2690,  2693,  2695,  2696,  2700,  2706,
    2712,  2721,  2726,  2734,  2738,  2754,  2758,  2769,  2773,  2788,
    2798,  2808,  2813,  2821,  2828,  2841,  2840,  2855,  2857,  2869,
    2889,  2908,  2928,  2942,  2956,  2961,  2970,  2975,  2987,  2999,
    3013,  3029,  3033,  3040,  3049,  3057,  3071,  3073,  3094,  3095,
    3099,  3103,  3107,  3111,  3115,  3120,  3124,  3132,  3131,  3163,
    3162,  3171,  3180,  3181,  3187,  3193,  3203,  3209,  3217,  3219,
    3228,  3229,  3233,  3239,  3248,  3249,  3257,  3257,  3315,  3316,
    3317,  3318,  3319,  3320,  3321,  3322,  3323,  3324,  3325,  3326,
    3327,  3331,  3345,  3364,  3365,  3369,  3370,  3375,  3377,  3379,
    3381,  3383,  3385,  3387,  3393,  3394,  3395,  3399,  3403,  3410,
    3417,  3418,  3425,  3427,  3431,  3432,  3436,  3487,  3489,  3493,
    3494,  3498,  3548,  3549,  3550,  3551,  3555,  3556,  3560,  3561,
    3566,  3569,  3593,  3692,  3710,  3709,  3788,  3784,  3860,  3861,
    3866,  3868,  3873,  3896,  3907,  3911,  3933,  3934,  3938,  3942,
    3955,  3961,  3967,  3976,  3989,  4015,  4021,  4022,  4028,  4029,
    4034,  4040,  4053,  4055,  4075,  4081,  4083,  4085,  4087,  4089,
    4091,  4093,  4095,  4097,  4099,  4101,  4103,  4108,  4122,  4139,
    4140,  4142,  4147,  4153,  4162,  4168,  4177,  4185,  4213,  4221,
    4223,  4232,  4237,  4243,  4252,  4260,  4262,  4264,  4266,  4268,
    4270,  4272,  4274,  4276,  4278,  4280,  4282,  4284,  4289,  4309,
    4333,  4337,  4345,  4346,  4347,  4348,  4349,  4350,  4351,  4352,
    4353,  4354,  4355,  4356,  4357,  4362,  4361,  4372,  4372,  4432,
    4431,  4488,  4488,  4510,  4567,  4614,  4638,  4637,  4662,  4684,
    4686,  4687,  4691,  4709,  4730,  4738,  4776,  4730,  4804,  4806,
    4807,  4811,  4812,  4817,  4827,  4816,  4879,  4878,  4892,  4893,
    4897,  4898,  4903,  4911,  4902,  4961,  4969,  4960,  5015,  5028,
    5033,  5032,  5070,  5071,  5076,  5075,  5109,  5109,  5128,  5127,
    5175,  5190,  5198,  5189,  5256,  5264,  5253,  5306,  5308,  5313,
    5315,  5317,  5332,  5333,  5340,  5341,  5348,  5349,  5353,  5359,
    5368,  5369,  5370,  5371,  5372,  5373,  5374,  5375,  5376,  5377,
    5378,  5382,  5383,  5387,  5393,  5402,  5403,  5404,  5405,  5406,
    5407,  5408,  5412,  5413,  5417,  5423,  5432,  5436,  5437,  5441,
    5447,  5456,  5457,  5458,  5459,  5460,  5461,  5462,  5466,  5467,
    5471,  5477,  5486,  5487,  5488,  5492,  5496,  5497,  5501,  5505,
    5512,  5519,  5526,  5533,  5540,  5547,  5554,  5561,  5568,  5575,
    5579,  5586,  5593,  5600,  5601,  5676,  5682,  5686,  5691,  5696,
    5702,  5710,  5720,  5721,  5735,  5743,  5747,  5751,  5755,  5759,
    5763,  5770,  5771,  5776,  5777,  5795,  5796,  5808,  5809,  5814,
    5823,  5824,  5829,  5835,  5845,  5846,  5858,  5859,  5863,  5869,
    5878,  5887,  5890,  5895,  5903,  5904,  5908,  5912,  5919,  5926,
    5936,  5935,  5953,  5959,  5968,  5969,  5974,  5975,  5979,  5985,
    5994,  6001,  6002,  6006,  6012,  6021,  6023,  6025,  6027,  6029,
    6031,  6033,  6035,  6044,  6045,  6049,  6050,  6054,  6059,  6064,
    6079,  6080,  6084,  6090,  6099,  6105,  6113,  6115,  6119,  6123,
    6127,  6131,  6135,  6139,  6143,  6147,  6151,  6155,  6159,  6163,
    6167,  6171,  6175,  6179,  6196,  6200,  6204,  6208,  6212,  6216,
    6220,  6224,  6228,  6232,  6236,  6240,  6244,  6248,  6252,  6256,
    6263,  6277,  6281,  6285,  6289,  6293,  6294,  6295,  6296,  6297,
    6298,  6302,  6303,  6304,  6308,  6309,  6310,  6311,  6315,  6321,
    6330,  6331,  6335,  6342,  6343,  6351,  6357,  6363,  6368,  6385,
    6393,  6401,  6405,  6406,  6410,  6411,  6415,  6416,  6420,  6424,
    6428,  6449,  6451,  6455,  6456,  6457,  6461,  6465,  6469,  6473,
    6477,  6481,  6485,  6489,  6494,  6499,  6508,  6517,  6521,  6525,
    6530,  6539,  6543,  6566,  6570,  6574,  6578,  6582,  6586,  6590,
    6591,  6595,  6599,  6603,  6608,  6613,  6618,  6623,  6628,  6632,
    6636,  6641,  6645,  6652,  6654,  6656,  6658,  6660,  6662,  6664,
    6666,  6671,  6672,  6676,  6677,  6681,  6682,  6683,  6684,  6685,
    6689,  6690,  6691,  6692,  6693,  6697,  6702,  6706,  6708,  6712,
    6713,  6714,  6715,  6720,  6724,  6733,  6737,  6742,  6746,  6755,
    6756,  6760,  6761,  6762,  6770,  6771,  6775,  6779,  6783,  6784,
    6785,  6794,  6795,  6796,  6797,  6800,  6801,  6806,  6810,  6814,
    6815,  6819,  6838,  6857,  6861,  6865,  6869,  6873,  6877,  6881,
    6885,  6889,  6893,  6897,  6901,  6905,  6909,  6913,  6917,  6921,
    6925,  6929,  6938,  6943,  6959,  6960,  6967,  6968,  6969,  6973,
    6974,  6975,  6979,  6985,  6989,  6993,  6994,  6998,  7007,  7011,
    7012,  7016,  7025,  7029,  7030,  7034,  7040,  7044,  7045,  7049,
    7050,  7055,  7056,  7060,  7067,  7075,  7081,  7091,  7095,  7100,
    7105,  7110,  7117,  7123,  7134,  7135,  7143,  7142,  7154,  7156,
    7160,  7175,  7176,  7180,  7187,  7197,  7198,  7199,  7200,  7205,
    7209,  7214,  7219,  7225,  7234,  7235,  7236,  7237,  7238,  7242,
    7243,  7248,  7249,  7253,  7254,  7258,  7259,  7260,  7264,  7265,
    7269,  7273,  7277,  7281,  7285,  7289,  7293,  7297,  7303,  7304,
    7308,  7314,  7323,  7324,  7338,  7339,  7343,  7349,  7358,  7362,
    7363,  7367,  7373,  7382,  7383,  7388,  7389,  7393,  7417,  7418,
    7419,  7423,  7424,  7428,  7429,  7433,  7434,  7438,  7439,  7440,
    7444,  7450,  7460,  7466,  7481,  7487,  7497,  7498,  7507,  7508,
    7512,  7513,  7517,  7523,  7535,  7546,  7561,  7560,  7581,  7580,
    7602,  7601,  7623,  7622,  7641,  7635,  7658,  7657,  7693,  7715,
    7734,  7754,  7762,  7784,  7808,  7819,  7821,  7836,  7850,  7856,
    7868,  7880,  7894,  7895,  7899,  7909,  7918,  7919,  7923,  7924,
    7928,  7934,  7940,  7948,  7963,  7971,  7979,  7986,  7993,  8000,
    8007,  8013,  8019,  8025,  8037,  8049,  8058,  8059,  8063,  8064,
    8068,  8074,  8080,  8086,  8095,  8109,  8110,  8111,  8112,  8116,
    8117,  8129,  8130,  8134,  8135,  8139,  8140,  8155,  8160,  8168,
    8172,  8180,  8184,  8189,  8190,  8199,  8203,  8214,  8218,  8222,
    8226,  8230,  8235,  8240,  8245,  8250,  8257,  8261,  8265,  8269,
    8274,  8279,  8284,  8289,  8293,  8300,  8301,  8305,  8309,  8316,
    8317,  8325,  8332,  8337,  8341,  8346,  8357,  8358,  8366,  8370,
    8374,  8378,  8382,  8386,  8391,  8395,  8399,  8403,  8407,  8411,
    8415,  8419,  8423,  8427,  8431,  8435,  8439,  8443,  8447,  8451,
    8455,  8459,  8465,  8469,  8476,  8481,  8486,  8494,  8495,  8500,
    8505,  8511,  8520,  8524,  8528,  8545,  8549,  8553,  8569,  8571,
    8575,  8576,  8580,  8581,  8582,  8586,  8587,  8588,  8592,  8593,
    8594,  8595,  8599,  8604,  8612,  8613,  8623,  8639,  8637,  8659,
    8676,  8679,  8686,  8690,  8697,  8701,  8708,  8712,  8719,  8724,
    8727,  8734,  8737,  8744,  8747,  8754,  8757,  8765,  8768,  8775,
    8779,  8786,  8790,  8798,  8802,  8827,  8828,  8829,  8834,  8839,
    8846,  8860,  8861,  8862,  8866,  8875,  8876,  8880,  8881,  8889,
    8890,  8891,  8895,  8905,  8906,  8925,  8930,  8937,  8947,  8955,
    8963,  8964,  8968,  8969,  8977,  8979,  8981,  8983,  8985,  8987,
    8992,  8999,  9000,  9001,  9006,  9005,  9011,  9018,  9023,  9031,
    9032,  9036,  9049,  9053,  9062,  9068,  9077,  9084,  9085,  9089,
    9094,  9101,  9107,  9116,  9123,  9130,  9131,  9141,  9142,  9146,
    9150,  9154,  9158,  9194,  9198,  9202,  9206,  9245,  9251,  9258,
    9264,  9271,  9276,  9282,  9290,  9294,  9298,  9302,  9306,  9314,
    9315,  9316,  9323,  9328,  9332,  9344,  9365,  9388,  9389,  9393,
    9397,  9398,  9402,  9408,  9417,  9424,  9436,  9439,  9443,  9448,
    9452,  9456,  9465,  9471,  9480,  9484,  9488,  9495,  9496,  9500,
    9504,  9505,  9509,  9510,  9514,  9520,  9526,  9536,  9537,  9545,
    9546,  9547,  9548,  9549,  9553,  9554,  9559,  9565,  9570,  9576,
    9580,  9584,  9588,  9592,  9596,  9600,  9604,  9608,  9612,  9616,
    9620,  9633,  9637,  9641,  9646,  9650,  9657,  9661,  9668,  9672,
    9676,  9680,  9688,  9692,  9696,  9701,  9706,  9714,  9722,  9726,
    9727,  9731,  9735,  9739,  9743,  9747,  9751,  9755,  9759,  9763,
    9767,  9771,  9775,  9779,  9783,  9787,  9791,  9792,  9796,  9797,
    9804,  9805,  9809,  9810,  9814,  9815,  9816,  9817,  9818,  9819,
    9820,  9824,  9825,  9829,  9830,  9831,  9832,  9833,  9834,  9838,
    9839,  9840,  9841,  9842,  9843,  9847,  9851,  9855,  9859,  9863,
    9867,  9868,  9872,  9876,  9880,  9884,  9888,  9892,  9896,  9900,
    9904,  9908,  9912,  9916,  9921,  9928,  9939,  9940,  9950,  9954,
    9958,  9962,  9966,  9970,  9974,  9978,  9982,  9986,  9990,  9994,
    9998, 10002, 10006, 10010, 10014, 10018, 10023, 10028, 10033, 10037,
   10041, 10045, 10049, 10054, 10058, 10077, 10081, 10085, 10089, 10093,
   10098, 10103, 10107, 10111, 10116, 10120, 10124, 10128, 10132, 10136,
   10140, 10144, 10149, 10153, 10157, 10161, 10165, 10177, 10181, 10185,
   10189, 10193, 10197, 10201, 10205, 10209, 10213, 10217, 10221, 10225,
   10229, 10233, 10237, 10241, 10245, 10249, 10253, 10257, 10261, 10265,
   10269, 10275, 10281, 10287, 10293, 10299, 10303, 10321, 10325, 10332,
   10334, 10347, 10348, 10352, 10353, 10357, 10358, 10362, 10368, 10377,
   10384, 10385, 10389, 10393, 10397, 10401, 10405, 10415, 10425, 10429,
   10433, 10437, 10441, 10450, 10454, 10458, 10462, 10466, 10470, 10474,
   10478, 10482, 10486, 10496, 10500, 10504, 10508, 10512, 10516, 10520,
   10531, 10542, 10546, 10550, 10563, 10567, 10572, 10581, 10584, 10592,
   10595, 10599, 10608, 10611, 10615, 10623, 10626, 10633, 10640, 10644,
   10651, 10658, 10665, 10686, 10689, 10697, 10700, 10708, 10711, 10719,
   10722, 10731, 10736, 10743, 10747, 10751, 10755, 10759, 10766, 10773,
   10777, 10781, 10785, 10789, 10797, 10800, 10804, 10808, 10812, 10818,
   10819, 10820, 10824, 10831, 10835, 10842, 10846, 10853, 10854, 10859,
   10864, 10868, 10869, 10873, 10878, 10888, 10895, 10902, 10921, 10929,
   10936, 10943, 10950, 10957, 10964, 10971, 10978, 10985, 10992, 11000,
   11010, 11011, 11015, 11021, 11030, 11031, 11035, 11041, 11050, 11051,
   11055, 11056, 11060, 11068, 11077, 11078, 11079, 11092, 11093, 11174,
   11178, 11183, 11187, 11191, 11201, 11208, 11209, 11210, 11214, 11215,
   11216, 11217, 11220, 11221, 11224, 11226, 11229, 11231, 11239, 11240,
   11244, 11273, 11274, 11275, 11276, 11278, 11280, 11284, 11285, 11294,
   11295, 11299, 11306, 11307, 11311, 11324, 11335, 11351, 11358, 11364,
   11373, 11377, 11387, 11394, 11397, 11405, 11409, 11414, 11419, 11424,
   11432, 11435, 11438, 11442, 11446, 11454, 11457, 11458, 11459, 11463,
   11464, 11468, 11474, 11483, 11484, 11492, 11493, 11497, 11502, 11508,
   11512, 11518, 11527, 11533, 11541, 11545, 11554, 11566, 11567, 11568,
   11569, 11570, 11571, 11572, 11573, 11574, 11575, 11576, 11577, 11581,
   11582, 11583, 11584, 11585, 11586, 11587, 11588, 11589, 11593, 11594,
   11595, 11596, 11599, 11601, 11605, 11606, 11609, 11611, 11615, 11616,
   11620, 11624, 11625, 11632, 11636, 11643, 11648, 11657, 11674, 11682,
   11689, 11695, 11705, 11708, 11715, 11721, 11730, 11744, 11745, 11752,
   11757, 11768, 11769, 11784, 11789, 11799, 11806, 11807, 11811, 11818,
   11823, 11833, 11834, 11838, 11839, 11843, 11844, 11848, 11855, 11861,
   11867, 11876, 11880, 11884, 11888, 11892, 11899, 11900, 11904, 11905,
   11906, 11907, 11908, 11909, 11913, 11914, 11915, 11916, 11917, 11921,
   11922, 11923, 11924, 11925, 11929, 11930, 11931, 11932, 11933, 11937,
   11942, 11943, 11947, 11953, 11962, 11966, 11973, 11980, 11986, 11990,
   11998, 12011, 12027, 12036, 12046, 12069, 12104, 12111, 12126, 12136,
   12151, 12160, 12171, 12191, 12213, 12236, 12241, 12250, 12257, 12264,
   12270, 12279, 12285, 12294, 12295, 12299, 12300, 12304, 12305, 12309,
   12315, 12324, 12325, 12332, 12352, 12372, 12390, 12403, 12420, 12436,
   12437, 12438, 12447, 12451, 12452, 12463, 12465, 12469, 12474, 12479,
   12487, 12492, 12497, 12505, 12511, 12520, 12527, 12528, 12532, 12536,
   12537, 12541, 12546, 12556, 12561, 12570, 12571, 12574, 12576, 12580,
   12584, 12589, 12594, 12598, 12604, 12613, 12614, 12622, 12626, 12640,
   12644, 12653, 12670, 12671, 12675, 12682, 12694, 12702, 12703, 12709,
   12722, 12732, 12745, 12747, 12751, 12752, 12756, 12757, 12758, 12762,
   12768, 12770, 12773, 12775, 12778, 12779, 12782, 12786, 12790, 12794,
   12798, 12802, 12806, 12810, 12814, 12822, 12825, 12839, 12838, 12849,
   12858, 12864, 12876, 12887, 12898, 12913, 12920, 12928, 12930, 12953,
   12957, 12962, 12961, 12972, 12971, 12981, 12999, 13006, 13014, 13022,
   13030, 13038, 13046, 13056, 13078, 13083, 13105, 13114, 13123, 13129,
   13134, 13139, 13144, 13149, 13154, 13159, 13165, 13174, 13182, 13186,
   13190, 13197, 13204, 13211, 13218, 13225, 13232, 13239, 13245, 13255,
   13265, 13270, 13275, 13280, 13289, 13291, 13293, 13298, 13299, 13302,
   13304, 13308, 13309, 13313, 13314, 13318, 13319, 13323, 13324, 13325,
   13326, 13330, 13331, 13335, 13336, 13340, 13341, 13345, 13346, 13347,
   13352, 13359, 13366, 13367, 13368, 13369, 13370, 13371, 13378, 13379,
   13384, 13387, 13401, 13408, 13409, 13414, 13422, 13421, 13434, 13433,
   13447, 13451, 13452, 13465, 13464, 13487, 13488, 13493, 13495, 13497,
   13499, 13501, 13503, 13505, 13507, 13509, 13511, 13513, 13515, 13517,
   13519, 13521, 13523, 13525, 13527, 13532, 13533, 13538, 13537, 13544,
   13554, 13555, 13560, 13565, 13574, 13574, 13577, 13576, 13593, 13598,
   13599, 13603, 13604, 13619, 13618, 13629, 13630, 13640, 13644, 13658,
   13670, 13671, 13672, 13678, 13689, 13728, 13729, 13733, 13734, 13738,
   13739, 13740, 13744, 13745, 13749, 13750, 13754, 13755, 13759, 13764,
   13768, 13773, 13779, 13784, 13792, 13793, 13797, 13802, 13806, 13811,
   13819, 13820, 13824, 13825, 13829, 13830, 13834, 13835, 13836, 13840,
   13846, 13855, 13856, 13863, 13864, 13868, 13876, 13896, 13917, 13922,
   13928, 13933, 13941, 13948, 13955, 13965, 13984, 13985, 13986, 13997,
   13998, 13999, 14000, 14012, 14016, 14020, 14024, 14028, 14032, 14039,
   14043, 14047, 14051, 14055, 14063, 14067, 14071, 14085, 14086, 14090,
   14094, 14103, 14110, 14117, 14121, 14125, 14129, 14133, 14137, 14146,
   14152, 14165, 14171, 14182, 14183, 14213, 14226, 14239, 14255, 14271,
   14288, 14292, 14293, 14300, 14316, 14317, 14328, 14329, 14339, 14340,
   14351, 14352, 14362, 14363, 14364, 14368, 14369, 14370, 14374, 14379,
   14387, 14391, 14405, 14410, 14418, 14442, 14443, 14444, 14445, 14446,
   14453, 14454, 14455, 14462, 14463, 14464, 14465, 14466, 14467, 14468,
   14469, 14470, 14471, 14472, 14473, 14474, 14475, 14476, 14477, 14478,
   14479, 14480, 14481, 14482, 14483, 14484, 14485, 14486, 14487, 14488,
   14489, 14490, 14491, 14492, 14493, 14494, 14495, 14496, 14497, 14512,
   14513, 14514, 14521, 14522, 14523, 14524, 14525, 14526, 14527, 14528,
   14529, 14537, 14538, 14539, 14540, 14541, 14542, 14543, 14544, 14545,
   14546, 14547, 14548, 14549, 14550, 14551, 14552, 14553, 14554, 14555,
   14556, 14557, 14558, 14559, 14560, 14561, 14562, 14563, 14564, 14565,
   14566, 14567, 14568, 14569, 14570, 14571, 14572, 14573, 14574, 14575,
   14576, 14577, 14578, 14579, 14580, 14581, 14582, 14583, 14584, 14585,
   14586, 14587, 14588, 14589, 14590, 14591, 14592, 14593, 14594, 14595,
   14596, 14597, 14598, 14599, 14600, 14601, 14602, 14603, 14604, 14605,
   14606, 14607, 14608, 14609, 14610, 14611, 14612, 14613, 14614, 14615,
   14616, 14617, 14618, 14619, 14620, 14621, 14622, 14623, 14624, 14625,
   14626, 14627, 14628, 14629, 14630, 14631, 14632, 14633, 14634, 14635,
   14636, 14637, 14638, 14639, 14640, 14641, 14642, 14643, 14644, 14645,
   14646, 14647, 14648, 14649, 14650, 14651, 14652, 14653, 14654, 14655,
   14656, 14657, 14658, 14659, 14660, 14661, 14662, 14663, 14664, 14665,
   14666, 14667, 14668, 14669, 14670, 14671, 14672, 14673, 14674, 14675,
   14676, 14677, 14678, 14679, 14680, 14681, 14682, 14683, 14684, 14685,
   14686, 14687, 14688, 14689, 14690, 14691, 14692, 14693, 14694, 14695,
   14696, 14697, 14698, 14699, 14700, 14701, 14702, 14703, 14704, 14705,
   14706, 14707, 14708, 14709, 14710, 14711, 14712, 14713, 14714, 14715,
   14716, 14717, 14718, 14719, 14720, 14721, 14722, 14723, 14724, 14725,
   14726, 14727, 14728, 14729, 14730, 14731, 14732, 14733, 14734, 14735,
   14736, 14737, 14738, 14739, 14740, 14741, 14742, 14743, 14744, 14745,
   14746, 14747, 14748, 14749, 14750, 14751, 14752, 14753, 14754, 14755,
   14756, 14757, 14758, 14759, 14760, 14761, 14762, 14763, 14764, 14765,
   14766, 14767, 14768, 14769, 14770, 14771, 14772, 14773, 14774, 14775,
   14776, 14777, 14778, 14779, 14780, 14781, 14782, 14783, 14784, 14785,
   14786, 14787, 14788, 14789, 14790, 14791, 14792, 14793, 14794, 14795,
   14796, 14797, 14798, 14799, 14800, 14801, 14802, 14803, 14804, 14805,
   14806, 14807, 14808, 14809, 14810, 14811, 14812, 14813, 14814, 14815,
   14816, 14817, 14818, 14819, 14820, 14821, 14822, 14823, 14824, 14825,
   14826, 14827, 14828, 14829, 14830, 14831, 14832, 14833, 14834, 14835,
   14836, 14837, 14838, 14839, 14840, 14841, 14842, 14843, 14844, 14845,
   14846, 14847, 14848, 14849, 14850, 14851, 14852, 14853, 14854, 14855,
   14856, 14857, 14858, 14859, 14860, 14861, 14862, 14863, 14864, 14865,
   14866, 14867, 14868, 14869, 14870, 14871, 14872, 14873, 14874, 14875,
   14876, 14877, 14878, 14879, 14880, 14881, 14882, 14883, 14884, 14885,
   14886, 14887, 14888, 14889, 14890, 14891, 14892, 14893, 14894, 14895,
   14896, 14897, 14898, 14899, 14900, 14901, 14902, 14903, 14904, 14905,
   14906, 14907, 14908, 14909, 14910, 14911, 14912, 14913, 14914, 14915,
   14916, 14917, 14929, 14930, 14931, 14943, 14944, 14945, 14946, 14955,
   14956, 14957, 14958, 14959, 14970, 14979, 14983, 14987, 14991, 14998,
   15006, 15014, 15026, 15030, 15035, 15040, 15045, 15050, 15055, 15063,
   15064, 15068, 15072, 15079, 15085, 15094, 15099, 15106, 15116, 15117,
   15122, 15126, 15134, 15138, 15142, 15143, 15144, 15145, 15146, 15150,
   15151, 15152, 15153, 15157, 15158, 15159, 15160, 15164, 15165, 15166,
   15167, 15168, 15169, 15174, 15182, 15188, 15192, 15197, 15201, 15208,
   15212, 15219, 15223, 15227, 15234, 15238, 15245, 15252, 15253, 15257,
   15264, 15265, 15269, 15270, 15274, 15275, 15276, 15277, 15281, 15282,
   15283, 15287, 15291, 15295, 15299, 15303, 15312, 15323, 15328, 15327,
   15333, 15343, 15344, 15348, 15349, 15353, 15381, 15382, 15383, 15388,
   15392, 15403, 15410, 15418, 15426, 15433, 15440, 15456, 15468, 15487,
   15491, 15495, 15504, 15515, 15531, 15532, 15536, 15537, 15538, 15539,
   15543, 15544, 15545, 15546, 15547, 15553, 15558, 15574, 15573, 15592,
   15597, 15608, 15613, 15630, 15629, 15646, 15659, 15660, 15661, 15662,
   15665, 15667, 15671, 15677, 15686, 15693, 15695, 15697, 15699, 15701,
   15703, 15705, 15707, 15709, 15711, 15713, 15715, 15717, 15719, 15721,
   15723, 15725, 15730, 15732, 15746, 15748, 15750, 15752, 15754, 15756,
   15758, 15760, 15762, 15764, 15766, 15768, 15770, 15772, 15777, 15778,
   15781, 15783, 15787, 15788, 15792, 15802, 15812, 15825, 15839, 15851,
   15863, 15875, 15895, 15901, 15910, 15916, 15925, 15926, 15930, 15931,
   15934, 15945, 15956, 15967, 15980, 15994, 16006, 16017, 16031, 16049,
   16060, 16071, 16085, 16096, 16110, 16125, 16138, 16149, 16154, 16162,
   16167, 16175, 16176, 16180, 16186, 16194, 16196, 16200, 16204, 16208,
   16215, 16216, 16221, 16222, 16226, 16227, 16231, 16236, 16238, 16243,
   16244, 16252, 16251, 16261, 16262, 16267, 16268, 16269, 16274, 16275,
   16276, 16280, 16281, 16285, 16297, 16306, 16316, 16325, 16339, 16340,
   16341, 16345, 16349, 16353, 16360, 16361, 16362, 16363, 16364, 16365,
   16366, 16372, 16383, 16392, 16394, 16396, 16401, 16402, 16403, 16404,
   16405, 16409, 16410, 16411, 16412, 16413, 16414, 16424, 16425, 16430,
   16443, 16456, 16458, 16460, 16465, 16470, 16472, 16474, 16480, 16481,
   16483, 16489, 16488, 16528, 16579, 16580, 16581, 16582, 16592, 16594,
   16600, 16605, 16623, 16613, 16690, 16708, 16732, 16756, 16762, 16803,
   16729, 16870, 16890, 16895, 16903, 16868, 16924, 16929, 16934, 16939,
   16944, 16949, 16957, 16958, 16961, 16970, 16980, 16998, 16999, 17003,
   17004, 17005, 17009, 17010, 17015, 17016, 17018, 17023, 17029, 17038,
   17044, 17053, 17059, 17068, 17085, 17094, 17117, 17121, 17129, 17132,
   17136, 17143, 17144, 17149, 17155, 17159, 17166, 17176, 17183, 17196,
   17197, 17201, 17202, 17210, 17211, 17216, 17224, 17225
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM",
  "ACCOUNT_SYM", "ACTION", "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST",
  "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER", "ALWAYS_SYM",
  "OBSOLETE_TOKEN_271", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "ANY_SYM",
  "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM",
  "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM", "BETWEEN_SYM", "BIGINT_SYM",
  "BINARY_SYM", "BINLOG_SYM", "BIN_NUM", "BIT_AND_SYM", "BIT_OR_SYM",
  "BIT_SYM", "BIT_XOR_SYM", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM",
  "BOOL_SYM", "BOTH", "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM",
  "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGE", "CHANGED", "CHANNEL_SYM",
  "CHARSET", "CHAR_SYM", "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM",
  "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM",
  "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COLUMN_FORMAT_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "COMPRESSION_SYM", "ENCRYPTION_SYM", "CONCURRENT", "CONDITION_SYM",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT",
  "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM",
  "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CPU_SYM", "CREATE", "CROSS", "CUBE_SYM", "CURDATE",
  "CURRENT_SYM", "CURRENT_USER", "CURSOR_SYM", "CURSOR_NAME_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATAFILE_SYM", "DATA_SYM",
  "DATETIME_SYM", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DATE_SYM",
  "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM",
  "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT_SYM", "DEFAULT_AUTH_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "OBSOLETE_TOKEN_388", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD_SYM",
  "DISK_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP",
  "DUAL_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM_SYM", "EQ",
  "EQUAL_SYM", "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM",
  "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM",
  "EXISTS", "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM",
  "EXTENDED_SYM", "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FETCH_SYM", "FILE_SYM", "FILE_BLOCK_SIZE_SYM",
  "FILTER_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "GE", "GENERAL", "GENERATED", "GROUP_REPLICATION",
  "GEOMETRYCOLLECTION_SYM", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM", "GROUP_CONCAT_SYM",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT",
  "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE",
  "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT_SYM", "INSERT_METHOD", "INSTANCE_SYM", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM",
  "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "JSON_SEPARATOR_SYM", "JSON_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM",
  "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES",
  "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE",
  "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING_SYM", "LIST_SYM", "LOAD",
  "LOCAL_SYM", "OBSOLETE_TOKEN_538", "LOCKS_SYM", "LOCK_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "LONGBLOB_SYM", "LONGTEXT_SYM", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM",
  "MASTER_BIND_SYM", "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM",
  "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM",
  "MASTER_TLS_VERSION_SYM", "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM",
  "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM",
  "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB_SYM", "MEDIUMINT_SYM", "MEDIUMTEXT_SYM", "MEDIUM_SYM",
  "MEMORY_SYM", "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM",
  "MIGRATE_SYM", "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM",
  "MINUTE_SYM", "MIN_ROWS", "MIN_SYM", "MODE_SYM", "MODIFIES_SYM",
  "MODIFY_SYM", "MOD_SYM", "MONTH_SYM", "MULTILINESTRING_SYM",
  "MULTIPOINT_SYM", "MULTIPOLYGON_SYM", "MUTEX_SYM", "MYSQL_ERRNO_SYM",
  "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM", "NATURAL", "NCHAR_STRING",
  "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG", "NEVER_SYM", "NEW_SYM",
  "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM", "NOT_SYM",
  "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG", "NULL_SYM",
  "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM", "OFFSET_SYM",
  "ON_SYM", "ONE_SYM", "ONLY_SYM", "OPEN_SYM", "OPTIMIZE",
  "OPTIMIZER_COSTS_SYM", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER_SYM", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "OBSOLETE_TOKEN_654", "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD", "PHASE_SYM", "PLUGIN_DIR_SYM",
  "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON_SYM", "PORT_SYM",
  "POSITION_SYM", "PRECEDES_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM",
  "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL_SYM", "REBUILD_SYM",
  "RECOVER_SYM", "OBSOLETE_TOKEN_693", "REDO_BUFFER_SIZE_SYM",
  "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM",
  "RELOAD", "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR",
  "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE_SYM", "REPLICATION",
  "REPLICATE_DO_DB", "REPLICATE_IGNORE_DB", "REPLICATE_DO_TABLE",
  "REPLICATE_IGNORE_TABLE", "REPLICATE_WILD_DO_TABLE",
  "REPLICATE_WILD_IGNORE_TABLE", "REPLICATE_REWRITE_DB", "REQUIRE_SYM",
  "RESET_SYM", "RESIGNAL_SYM", "RESOURCES", "RESTORE_SYM", "RESTRICT",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM",
  "REVERSE_SYM", "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM",
  "ROTATE_SYM", "ROUTINE_SYM", "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM",
  "ROW_COUNT_SYM", "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM",
  "SCHEMA_NAME_SYM", "SECOND_MICROSECOND_SYM", "SECOND_SYM",
  "SECURITY_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERIALIZABLE_SYM", "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM",
  "OBSOLETE_TOKEN_755", "SET_SYM", "SET_VAR", "SHARE_SYM", "SHIFT_LEFT",
  "SHIFT_RIGHT", "SHOW", "SHUTDOWN", "SIGNAL_SYM", "SIGNED_SYM",
  "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT_SYM", "SNAPSHOT_SYM",
  "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SPATIAL_SYM",
  "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM",
  "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS", "SQL_BEFORE_GTIDS",
  "SQL_BIG_RESULT", "SQL_BUFFER_RESULT", "OBSOLETE_TOKEN_784",
  "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM",
  "SQL_THREAD", "SSL_SYM", "STACKED_SYM", "STARTING", "STARTS_SYM",
  "START_SYM", "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM", "STDDEV_SAMP_SYM", "STD_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRAIGHT_JOIN", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUBSTRING", "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM",
  "SWAPS_SYM", "SWITCHES_SYM", "SYSDATE", "TABLES", "TABLESPACE_SYM",
  "OBSOLETE_TOKEN_820", "TABLE_SYM", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TERMINATED",
  "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM", "TIMESTAMP_SYM",
  "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB_SYM",
  "TINYINT_SYM", "TINYTEXT_SYN", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "OBSOLETE_TOKEN_848", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED_SYM",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALIDATION_SYM", "VALUES", "VALUE_SYM", "VARBINARY_SYM", "VARCHAR_SYM",
  "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM",
  "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "OBSOLETE_TOKEN_893",
  "WITH_ROLLUP_SYM", "WITHOUT_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XID_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL_SYM", "JSON_UNQUOTED_SEPARATOR_SYM", "PERSIST_SYM",
  "ROLE_SYM", "ADMIN_SYM", "INVISIBLE_SYM", "VISIBLE_SYM", "EXCEPT_SYM",
  "COMPONENT_SYM", "RECURSIVE_SYM", "GRAMMAR_SELECTOR_EXPR",
  "GRAMMAR_SELECTOR_GCOL", "GRAMMAR_SELECTOR_PART", "GRAMMAR_SELECTOR_CTE",
  "JSON_OBJECTAGG", "JSON_ARRAYAGG", "OF_SYM", "SKIP_SYM", "LOCKED_SYM",
  "NOWAIT_SYM", "GROUPING_SYM", "PERSIST_ONLY_SYM", "HISTOGRAM_SYM",
  "BUCKETS_SYM", "OBSOLETE_TOKEN_930", "CLONE_SYM", "CUME_DIST_SYM",
  "DENSE_RANK_SYM", "EXCLUDE_SYM", "FIRST_VALUE_SYM", "FOLLOWING_SYM",
  "GROUPS_SYM", "LAG_SYM", "LAST_VALUE_SYM", "LEAD_SYM", "NTH_VALUE_SYM",
  "NTILE_SYM", "NULLS_SYM", "OTHERS_SYM", "OVER_SYM", "PERCENT_RANK_SYM",
  "PRECEDING_SYM", "RANK_SYM", "RESPECT_SYM", "ROW_NUMBER_SYM", "TIES_SYM",
  "UNBOUNDED_SYM", "WINDOW_SYM", "EMPTY_SYM", "JSON_TABLE_SYM",
  "NESTED_SYM", "ORDINALITY_SYM", "PATH_SYM", "HISTORY_SYM", "REUSE_SYM",
  "SRID_SYM", "THREAD_PRIORITY_SYM", "RESOURCE_SYM", "SYSTEM_SYM",
  "VCPU_SYM", "MASTER_PUBLIC_KEY_PATH_SYM", "GET_MASTER_PUBLIC_KEY_SYM",
  "RESTART_SYM", "DEFINITION_SYM", "DESCRIPTION_SYM", "ORGANIZATION_SYM",
  "REFERENCE_SYM", "ACTIVE_SYM", "INACTIVE_SYM", "LATERAL_SYM",
  "ARRAY_SYM", "MEMBER_SYM", "OPTIONAL_SYM", "SECONDARY_SYM",
  "SECONDARY_ENGINE_SYM", "SECONDARY_LOAD_SYM", "SECONDARY_UNLOAD_SYM",
  "RETAIN_SYM", "OLD_SYM", "ENFORCED_SYM", "OJ_SYM",
  "NETWORK_NAMESPACE_SYM", "RANDOM_SYM",
  "MASTER_COMPRESSION_ALGORITHM_SYM", "MASTER_ZSTD_COMPRESSION_LEVEL_SYM",
  "PRIVILEGE_CHECKS_USER_SYM", "MASTER_TLS_CIPHERSUITES_SYM",
  "REQUIRE_ROW_FORMAT_SYM", "PASSWORD_LOCK_TIME_SYM",
  "FAILED_LOGIN_ATTEMPTS_SYM", "CHANGED_PAGE_BITMAPS_SYM",
  "CLIENT_STATS_SYM", "CLUSTERING_SYM", "COMPRESSION_DICTIONARY_SYM",
  "INDEX_STATS_SYM", "TABLE_STATS_SYM", "THREAD_STATS_SYM",
  "USER_STATS_SYM", "ENCRYPTION_KEY_ID_SYM", "EFFECTIVE_SYM",
  "KEYWORD_USED_AS_IDENT", "KEYWORD_USED_AS_KEYWORD", "CONDITIONLESS_JOIN",
  "'|'", "'&'", "'-'", "'+'", "'*'", "'/'", "'%'", "'^'", "'~'",
  "SUBQUERY_AS_EXPR", "'('", "')'", "EMPTY_FROM_CLAUSE", "';'", "'@'",
  "','", "'.'", "':'", "'!'", "'{'", "'}'", "$accept", "start_entry",
  "sql_statement", "$@1", "opt_end_of_input", "simple_statement_or_begin",
  "simple_statement", "deallocate", "deallocate_or_drop", "prepare",
  "prepare_src", "execute", "$@2", "execute_using", "execute_var_list",
  "execute_var_ident", "help", "$@3", "change", "$@4", "$@5",
  "filter_defs", "filter_def", "opt_filter_db_list", "filter_db_list",
  "filter_db_ident", "opt_filter_db_pair_list", "filter_db_pair_list",
  "opt_filter_table_list", "filter_table_list", "filter_table_ident",
  "opt_filter_string_list", "filter_string_list", "filter_string",
  "master_defs", "master_def", "ignore_server_id_list", "ignore_server_id",
  "privilege_check_def", "master_tls_ciphersuites_def", "master_file_def",
  "opt_channel", "create_table_stmt", "create_role_stmt",
  "create_resource_group_stmt", "create", "$@6", "create_srs_stmt",
  "srs_attributes", "default_role_clause", "create_index_stmt",
  "create_compression_dictionary_allowed_expr", "server_options_list",
  "server_option", "event_tail", "$@7", "ev_schedule_time", "$@8",
  "opt_ev_status", "ev_starts", "ev_ends", "opt_ev_on_completion",
  "ev_on_completion", "opt_ev_comment", "ev_sql_stmt", "$@9",
  "ev_sql_stmt_inner", "sp_name", "sp_a_chistics", "sp_c_chistics",
  "sp_chistic", "sp_c_chistic", "sp_suid", "call_stmt",
  "opt_paren_expr_list", "sp_fdparam_list", "sp_fdparams", "sp_fdparam",
  "sp_pdparam_list", "sp_pdparams", "sp_pdparam", "sp_opt_inout",
  "sp_proc_stmts", "sp_proc_stmts1", "sp_decls", "sp_decl", "$@10", "$@11",
  "sp_handler_type", "sp_hcond_list", "sp_hcond_element", "sp_cond",
  "sqlstate", "opt_value", "sp_hcond", "signal_stmt", "signal_value",
  "opt_signal_value", "opt_set_signal_information",
  "signal_information_item_list", "signal_allowed_expr",
  "signal_condition_information_item_name", "resignal_stmt",
  "get_diagnostics", "which_area", "diagnostics_information",
  "statement_information", "statement_information_item",
  "simple_target_specification", "statement_information_item_name",
  "condition_number", "condition_information",
  "condition_information_item", "condition_information_item_name",
  "sp_decl_idents", "sp_opt_default", "sp_proc_stmt", "sp_proc_stmt_if",
  "$@12", "sp_proc_stmt_statement", "$@13", "sp_proc_stmt_return", "$@14",
  "sp_proc_stmt_unlabeled", "$@15", "sp_proc_stmt_leave",
  "sp_proc_stmt_iterate", "sp_proc_stmt_open", "sp_proc_stmt_fetch",
  "$@16", "sp_proc_stmt_close", "sp_opt_fetch_noise", "sp_fetch_list",
  "sp_if", "$@17", "$@18", "$@19", "sp_elseifs", "case_stmt_specification",
  "simple_case_stmt", "$@20", "$@21", "searched_case_stmt", "$@22",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@23", "$@24", "searched_when_clause", "$@25",
  "$@26", "else_clause_opt", "sp_labeled_control", "$@27", "sp_opt_label",
  "sp_labeled_block", "$@28", "sp_unlabeled_block", "$@29",
  "sp_block_content", "$@30", "sp_unlabeled_control", "$@31", "$@32",
  "$@33", "$@34", "trg_action_time", "trg_event", "opt_ts_datafile_name",
  "opt_logfile_group_name", "opt_tablespace_options",
  "tablespace_option_list", "tablespace_option",
  "opt_alter_tablespace_options", "alter_tablespace_option_list",
  "alter_tablespace_option", "opt_undo_tablespace_options",
  "undo_tablespace_option_list", "undo_tablespace_option",
  "opt_logfile_group_options", "logfile_group_option_list",
  "logfile_group_option", "opt_alter_logfile_group_options",
  "alter_logfile_group_option_list", "alter_logfile_group_option",
  "ts_datafile", "undo_tablespace_state", "lg_undofile",
  "ts_option_initial_size", "ts_option_autoextend_size",
  "ts_option_max_size", "ts_option_extent_size",
  "ts_option_undo_buffer_size", "ts_option_redo_buffer_size",
  "ts_option_nodegroup", "ts_option_comment", "ts_option_engine",
  "ts_option_file_block_size", "ts_option_wait", "ts_option_encryption",
  "ts_option_encryption_key_id", "size_number",
  "opt_create_table_options_etc", "opt_create_partitioning_etc",
  "opt_duplicate_as_qe", "as_create_query_expression", "partition_clause",
  "part_type_def", "opt_linear", "opt_key_algo", "opt_num_parts",
  "opt_sub_part", "opt_name_list", "name_list", "opt_num_subparts",
  "opt_part_defs", "part_def_list", "part_definition", "opt_part_values",
  "part_func_max", "part_values_in", "part_value_list",
  "part_value_item_list_paren", "$@35", "part_value_item_list",
  "part_value_item", "opt_sub_partition", "sub_part_list",
  "sub_part_definition", "opt_part_options", "part_option_list",
  "part_option", "opt_create_database_options", "create_database_options",
  "create_database_option", "opt_if_not_exists",
  "create_table_options_space_separated", "create_table_options",
  "opt_comma", "create_table_option", "ternary_option", "default_charset",
  "default_collation", "default_encryption", "row_types",
  "merge_insert_types", "udf_type", "table_element_list", "table_element",
  "column_def", "opt_references", "table_constraint_def",
  "check_constraint", "opt_constraint_name", "opt_not",
  "opt_constraint_enforcement", "constraint_enforcement", "field_def",
  "opt_generated_always", "opt_stored_attribute", "type", "spatial_type",
  "nchar", "varchar", "nvarchar", "int_type", "real_type", "opt_PRECISION",
  "numeric_type", "standard_float_options", "float_options", "precision",
  "type_datetime_precision", "func_datetime_precision", "field_options",
  "field_opt_list", "field_option", "field_length", "opt_field_length",
  "opt_precision", "opt_column_attribute_list", "column_attribute_list",
  "column_attribute", "opt_with_compression_dictionary", "column_format",
  "storage_media", "now", "now_or_signed_literal", "character_set",
  "charset_name", "opt_load_data_charset", "old_or_new_charset_name",
  "old_or_new_charset_name_or_default", "collation_name", "opt_collate",
  "opt_default", "ascii", "unicode", "opt_charset_with_opt_binary",
  "opt_bin_mod", "ws_num_codepoints", "$@36", "opt_primary", "references",
  "opt_ref_list", "reference_list", "opt_match_clause",
  "opt_on_update_delete", "delete_option", "constraint_key_type",
  "key_or_index", "opt_key_or_index", "keys_or_index",
  "opt_unique_combo_clustering", "unique_combo_clustering",
  "opt_fulltext_index_options", "fulltext_index_options",
  "fulltext_index_option", "opt_spatial_index_options",
  "spatial_index_options", "spatial_index_option", "opt_index_options",
  "index_options", "index_option", "common_index_option",
  "opt_index_name_and_type", "opt_index_type_clause", "index_type_clause",
  "visibility", "index_type", "key_list", "key_part",
  "key_list_with_expression", "key_part_with_expression", "opt_ident",
  "opt_component", "string_list", "alter_table_stmt",
  "alter_database_stmt", "$@37", "alter_procedure_stmt", "$@38",
  "alter_function_stmt", "$@39", "alter_view_stmt", "$@40", "$@41",
  "alter_event_stmt", "$@42", "alter_logfile_stmt",
  "alter_tablespace_stmt", "alter_undo_tablespace_stmt",
  "alter_server_stmt", "alter_user_stmt", "opt_replace_password",
  "alter_resource_group_stmt", "alter_user_command",
  "opt_account_lock_password_expire_options",
  "opt_account_lock_password_expire_option_list",
  "opt_account_lock_password_expire_option", "connect_options",
  "connect_option_list", "connect_option", "user_func",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "opt_alter_table_actions",
  "standalone_alter_table_action", "alter_table_partition_options",
  "opt_alter_command_list", "standalone_alter_commands",
  "opt_with_validation", "with_validation", "all_or_alt_part_name_list",
  "alter_list", "alter_commands_modifier_list", "alter_list_item",
  "alter_commands_modifier", "opt_index_lock_and_algorithm",
  "alter_algorithm_option", "alter_algorithm_option_value",
  "alter_lock_option", "alter_lock_option_value", "opt_column",
  "opt_ignore", "opt_restrict", "opt_place", "opt_to", "group_replication",
  "slave", "slave_start", "start_slave_opts", "$@43", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "slave_connection_opts",
  "slave_user_name_opt", "slave_user_pass_opt", "slave_plugin_auth_opt",
  "slave_plugin_dir_opt", "opt_slave_thread_option_list",
  "slave_thread_option_list", "slave_thread_option", "slave_until",
  "slave_until_opts", "checksum", "opt_checksum_type", "repair_table_stmt",
  "opt_mi_repair_types", "mi_repair_types", "mi_repair_type",
  "analyze_table_stmt", "opt_num_buckets", "opt_histogram",
  "binlog_base64_event", "check_table_stmt", "opt_mi_check_types",
  "mi_check_types", "mi_check_type", "optimize_table_stmt",
  "opt_no_write_to_binlog", "rename", "$@44", "rename_list",
  "table_to_table_list", "table_to_table", "keycache_stmt",
  "keycache_list", "assign_to_keycache", "key_cache_name", "preload_stmt",
  "preload_list", "preload_keys", "adm_partition", "opt_cache_key_list",
  "opt_ignore_leaves", "select_stmt", "select_stmt_with_into",
  "query_expression", "query_expression_body", "query_expression_parens",
  "query_primary", "query_specification", "opt_from_clause", "from_clause",
  "from_tables", "table_reference_list", "table_value_constructor",
  "explicit_table", "select_options", "select_option_list",
  "select_option", "locking_clause_list", "locking_clause",
  "lock_strength", "table_locking_list", "opt_locked_row_action",
  "locked_row_action", "select_item_list", "select_item", "select_alias",
  "optional_braces", "expr", "bool_pri", "predicate", "opt_of", "bit_expr",
  "or", "and", "not", "not2", "comp_op", "all_or_any", "simple_expr",
  "opt_array_cast", "function_call_keyword", "function_call_nonkeyword",
  "function_call_conflict", "geometry_function", "function_call_generic",
  "fulltext_options", "opt_natural_language_mode", "opt_query_expansion",
  "opt_udf_expr_list", "udf_expr_list", "udf_expr",
  "set_function_specification", "sum_expr", "window_func_call",
  "opt_lead_lag_info", "opt_ll_default", "opt_null_treatment",
  "opt_from_first_last", "opt_windowing_clause", "windowing_clause",
  "window_name_or_spec", "window_name", "window_spec",
  "window_spec_details", "opt_existing_window_name",
  "opt_partition_clause", "opt_window_order_by_clause",
  "opt_window_frame_clause", "window_frame_extent", "window_frame_start",
  "window_frame_between", "window_frame_bound",
  "opt_window_frame_exclusion", "window_frame_units", "grouping_operation",
  "variable", "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "gorder_list", "in_sum_expr", "cast_type",
  "opt_expr_list", "expr_list", "ident_list_arg", "ident_list", "opt_expr",
  "opt_else", "when_list", "table_reference", "esc_table_reference",
  "joined_table", "natural_join_type", "inner_join_type",
  "outer_join_type", "opt_inner", "opt_outer", "opt_use_partition",
  "use_partition", "table_factor", "table_reference_list_parens",
  "single_table_parens", "single_table", "joined_table_parens",
  "derived_table", "table_function", "columns_clause", "columns_list",
  "jt_column", "jt_column_type", "opt_on_empty_or_error", "opt_on_empty",
  "opt_on_error", "jt_on_response", "index_hint_clause", "index_hint_type",
  "index_hint_definition", "index_hints_list", "opt_index_hints_list",
  "opt_key_definition", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "ident_string_list", "interval",
  "interval_time_stamp", "date_time_type", "opt_as", "opt_table_alias",
  "opt_all", "opt_where_clause", "where_clause", "opt_having_clause",
  "with_clause", "with_list", "common_table_expr",
  "opt_derived_column_list", "simple_ident_list", "opt_window_clause",
  "window_definition_list", "window_definition", "opt_group_clause",
  "group_list", "olap_opt", "alter_order_list", "alter_order_item",
  "opt_order_clause", "order_clause", "order_list",
  "opt_ordering_direction", "ordering_direction", "opt_limit_clause",
  "limit_clause", "limit_options", "limit_option", "opt_simple_limit",
  "ulong_num", "real_ulong_num", "ulonglong_num", "real_ulonglong_num",
  "dec_num_error", "dec_num", "select_var_list", "select_var_ident",
  "into_clause", "into_destination", "do_stmt", "drop_table_stmt",
  "drop_index_stmt", "drop_database_stmt", "drop_function_stmt",
  "drop_resource_group_stmt", "drop_procedure_stmt", "drop_user_stmt",
  "drop_view_stmt", "drop_event_stmt", "drop_trigger_stmt",
  "drop_tablespace_stmt", "drop_undo_tablespace_stmt", "drop_logfile_stmt",
  "drop_server_stmt", "drop_srs_stmt", "drop_role_stmt", "table_list",
  "table_alias_ref_list", "if_exists", "opt_temporary",
  "opt_drop_ts_options", "drop_ts_option_list", "drop_ts_option",
  "insert_stmt", "replace_stmt", "insert_lock_option",
  "replace_lock_option", "opt_INTO", "insert_from_constructor",
  "insert_query_expression", "fields", "insert_values",
  "query_expression_or_parens", "value_or_values", "values_list",
  "values_row_list", "equal", "opt_equal", "row_value",
  "row_value_explicit", "opt_values", "values", "expr_or_default",
  "opt_values_reference", "opt_insert_update_list", "update_stmt",
  "opt_with_clause", "update_list", "update_elem", "opt_low_priority",
  "delete_stmt", "opt_wild", "opt_delete_options", "opt_delete_option",
  "truncate_stmt", "opt_table", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_profile_args", "show", "$@45", "show_param", "$@46",
  "$@47", "show_engine_param", "master_or_binary", "opt_storage", "opt_db",
  "opt_full", "opt_extended", "opt_show_cmd_type", "from_or_in",
  "binlog_in", "binlog_from", "opt_wild_or_where", "describe_stmt",
  "explain_stmt", "explainable_stmt", "describe_command",
  "opt_explain_format_type", "opt_describe_column", "flush", "$@48",
  "flush_options", "$@49", "opt_flush_lock", "$@50", "flush_options_list",
  "flush_option", "opt_table_list", "reset", "$@51", "reset_options",
  "opt_if_exists_ident", "reset_option", "$@52", "$@53",
  "slave_reset_options", "master_reset_options", "purge", "$@54",
  "purge_options", "purge_option", "kill", "kill_option", "use",
  "load_stmt", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "duplicate", "opt_field_term", "field_term_list",
  "field_term", "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "literal", "NUM_literal", "temporal_literal", "insert_ident",
  "table_wild", "order_expr", "grouping_expr", "simple_ident",
  "simple_ident_nospvar", "simple_ident_q", "table_ident",
  "table_ident_opt_wild", "IDENT_sys", "TEXT_STRING_sys_nonewline",
  "filter_wild_db_table_string", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "TEXT_STRING_password", "TEXT_STRING_hash",
  "TEXT_STRING_validated", "ident", "role_ident", "label_ident",
  "lvalue_ident", "ident_or_text", "role_ident_or_text",
  "user_ident_or_text", "user", "role", "schema", "ident_keyword",
  "ident_keywords_ambiguous_1_roles_and_labels",
  "ident_keywords_ambiguous_2_labels", "label_keyword",
  "ident_keywords_ambiguous_3_roles", "ident_keywords_unambiguous",
  "role_keyword", "lvalue_keyword",
  "ident_keywords_ambiguous_4_system_variables", "set",
  "start_option_value_list", "set_role_stmt", "opt_except_role_list",
  "set_resource_group_stmt", "thread_id_list", "thread_id_list_options",
  "start_option_value_list_following_option_type",
  "option_value_list_continued", "option_value_list", "option_value",
  "option_type", "opt_var_type", "opt_var_ident_type",
  "opt_set_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "internal_variable_name",
  "transaction_characteristics", "transaction_access_mode",
  "opt_transaction_access_mode", "isolation_level", "opt_isolation_level",
  "transaction_access_mode_types", "isolation_types",
  "set_expr_or_default", "lock", "lock_variant", "$@55", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock",
  "unlock_variant", "shutdown_stmt", "restart_server_stmt",
  "alter_instance_stmt", "alter_instance_action", "handler_stmt",
  "handler_scan_function", "handler_rkey_function", "handler_rkey_mode",
  "revoke", "$@56", "grant", "$@57", "opt_acl_type", "opt_privileges",
  "role_or_privilege_list", "role_or_privilege", "opt_with_admin_option",
  "opt_and", "require_list", "require_list_element", "grant_ident",
  "user_list", "role_list", "opt_retain_current_password",
  "opt_discard_old_password", "create_user", "alter_user",
  "create_user_list", "alter_user_list", "opt_column_list", "column_list",
  "require_clause", "grant_options", "opt_grant_option", "opt_with_roles",
  "opt_grant_as", "begin_stmt", "$@58", "opt_work", "opt_chain",
  "opt_release", "opt_savepoint", "commit", "rollback", "savepoint",
  "release", "union_option", "row_subquery", "table_subquery", "subquery",
  "query_spec_option", "init_lex_create_info",
  "view_or_trigger_or_sp_or_event", "definer_tail", "no_definer_tail",
  "definer_opt", "no_definer", "definer", "view_replace_or_algorithm",
  "view_replace", "view_algorithm", "view_suid", "view_tail", "$@59",
  "view_select", "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@60", "udf_tail",
  "sf_tail", "$@61", "$@62", "$@63", "$@64", "sp_tail", "$@65", "$@66",
  "$@67", "$@68", "xa", "opt_convert_xid", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "install",
  "uninstall", "TEXT_STRING_sys_list", "import_stmt", "clone_stmt",
  "opt_datadir_ssl", "opt_ssl", "resource_group_types",
  "opt_resource_group_vcpu_list", "vcpu_range_spec_list",
  "vcpu_num_or_range", "signed_num", "opt_resource_group_priority",
  "opt_resource_group_enable_disable", "opt_force", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   886,   887,   888,   889,   890,   891,   892,   893,   894,
     895,   896,   897,   898,   899,   900,   901,   902,   903,   904,
     905,   906,   907,   908,   909,   910,   911,   912,   913,   914,
     915,   916,   917,   918,   919,   920,   921,   922,   923,   924,
     925,   926,   927,   928,   929,   930,   931,   932,   933,   934,
     935,   936,   937,   938,   939,   940,   941,   942,   943,   944,
     945,   946,   947,   948,   949,   950,   951,   952,   953,   954,
     955,   956,   957,   958,   959,   960,   961,   962,   963,   964,
     965,   966,   967,   968,   969,   970,   971,   972,   973,   974,
     975,   976,   977,   978,   979,   980,   981,   982,   983,   984,
     985,   986,   987,   988,   989,   990,   991,   992,   993,   994,
     995,   996,   997,   998,   999,  1000,  1001,  1002,  1003,  1004,
    1005,  1006,  1007,  1008,   124,    38,    45,    43,    42,    47,
      37,    94,   126,  1009,    40,    41,  1010,    59,    64,    44,
      46,    58,    33,   123,   125
};
# endif

#define YYPACT_NINF -4525

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-4525)))

#define YYTABLE_NINF -2821

#define yytable_value_is_error(Yytable_value) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
    7743,  3495,   186, -4525,     1,   967, 67936,   124,  1427,  1427,
     594,  2984, -4525, -4525, -4525, 12347,  3426, -4525, 67936,   186,
     423, 45556, 67936, -4525,   706,  1575,    14,  1217,   324,   152,
     186, 67936, -4525,   994,  1733,   186,   301,   720, 60476, 46302,
     594, 67936,  2197, 28373, -4525, -4525, 60476,   947,   182, 67936,
     920,  1020,  1114, 67936,  1142, 61222,  1589, 21575,  2321,  1334,
    1027,   242, -4525,  2115,  1842, -4525,  1720, -4525, -4525,  1480,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, 53016, -4525, -4525,  1319,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525,  2237,    16,  1356, -4525, -4525, -4525, -4525,  1504,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
     191, -4525, -4525, -4525, -4525, -4525, 61968, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525,  1851, 67936,  1904, 67936,    61,  1895,
   67936, 58984, 67936, 67936,  1597,  1960,  1966,  2081, -4525, -4525,
    2084, -4525, -4525,  1427,   594, -4525, -4525, 67936, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525,  1498, -4525,  1514, -4525, -4525, -4525,
   -4525, -4525, -4525,  1719,  2112, -4525, -4525, 67936, 67936, -4525,
    2324,  2093,  2185,  2147,  1935, 58984,   114, 67936, -4525,  1894,
      -2,  2093,  2093,  2270,  1116,  2093,  2238, -4525,  1923, -4525,
   -4525, -4525,  2084,  2509, -4525,  1764,  1779,  1785, 21575, -4525,
    1816,  1832,  1839, 16192,  1857,  1866,  1880,  1883,  1889,  1891,
    1896,  1902,  1902,  1912,  1919,  1938,  1957,   -95,  1985, -4525,
    1987,  1027,  1993, -4525, -4525,  1998,  2029,  2034,  2036, -4525,
    2047,  2056,  2068, 16961,  2076,  2079, -4525, 38817,  2097,  2108,
    2122,  2136,  2146,  2157,  2159,  2164,  2167, -4525, -4525, 16192,
    1912, -4525, -4525, -4525,  2169,  2172,  2194,  2196,  2223,  2234,
    2244,  2247,  2264,  2296,  2307,  2327,  2346,  2365,  2372,  2373,
    1912, -4525,   789,  2391,  2394,   985,  2398, -4525,  2410, -4525,
     196,  2411,  1902,  1912,  1912,  2427,  2428,  2429,  2430,  2435,
    2436,  2441,  2450,  2460,  2477,  2485,  2488,  2499,  2504,  2505,
    2507,  2521,  2524,  2533,  2545, 21575, 21575, -4525, 21575, 10809,
   29119, -4525, 67936, -4525, -4525,  1813, -4525, 48540,  4277, -4525,
    3054, 21575,   325, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525,  1961, -4525, -4525, -4525, -4525, -4525,   367,
   -4525,  2553,  1888, -4525, -4525,  1960,  1960,  1960, 67936,  2415,
    1960,  1960,  1952, 67936,  1960,  2222,  1960,  1960,  1960,  2596,
    1960,  1427, -4525, -4525, -4525, -4525,  2694,  2469,  2413,  2695,
   -4525,  2336, -4525, -4525, -4525,  2615, -4525,  2555, -4525,  2355,
   -4525,  2625,  2555, -4525,   253,  2555,   234, -4525, -4525, -4525,
    2555, -4525, -4525, -4525, -4525,  1717, -4525, -4525, -4525, -4525,
     868, -4525,  2677,   202, 58984,  2828, -4525, -4525, -4525,  2847,
   67936,     1, -4525, -4525, 16192, -4525,  2894, -4525,   354,  2899,
    3021, -4525, -4525,  1427,  3032,   154, 67936, 53762, -4525,  1427,
   -4525, -4525,  2990, -4525,    80,     6,  2665, -4525, -4525,  2832,
   -4525,  2469,  2956,    70,   288, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, 12347,  2197, -4525, -4525,    62,
    2844,   912, -4525, -4525, 49286,  1079, -4525,   996, -4525, 71666,
   -4525,  3134, 29865, 50778, -4525,  2578, -4525, -4525, -4525, -4525,
   -4525, -4525, 70174,  2584,  1094,  7748,  2832, -4525,  1659,   717,
   -4525,  1659, -4525,  2585, -4525, 67936, 67936,     1, -4525, -4525,
   -4525, -4525,  2590,  2592, -4525, 67936,  2593, -4525,  2599, -4525,
     443,   443,   443,  3268,   443, -4525,   443,  2947,  2597,  2607,
    3324,  3217,  2285,  3222, -4525,  3182,  3272,  2628,   104,   886,
    1504, -4525, -4525,  2630, 67936,  1902, -4525,  2637,   350, -4525,
   -4525,  2626, -4525,  2156, -4525,   779,  3020, -4525,  2791,    -4,
   27627,  3156,  2237, -4525,  1011,  3359,   442,  3136, -4525, 51524,
     442,  3136, -4525,    16,  1356,  1608,  3117, -4525,  3254,  1246,
   54508,  1426, -4525, -4525, 53762, -4525, 67936, 58984, -4525, 67936,
   -4525,  3040,  2931,  8441, 67936,  3259, -4525, 67936, 67936,  2901,
   -4525, 67936, -4525,    68, -4525,  1714, 16192, -4525, 67936, -4525,
   -4525,    71, -4525,   172,  1185,   132,  2272, 67936, 67936, 67936,
    2917,  3246, 67936,  2731,  3434, 67936, -4525,  3179, 53762, 74650,
   67936, -4525,  3187, 67936, 67936,  2093,  1171,  1627, -4525, -4525,
   16192, 16192,   448,  3383,  3458,  3458,  3458,  2053,  2838, 16192,
   16192, 16192, 16192, 16192, 16192,   471,  2711, -4525, -4525,   303,
   -4525,  2714, 16192, 16192, -4525, 16192, 16192, 67936, -4525,  4204,
   16192, 16192,   612,  3341, 16192, 16192, 16192, 10809,  5105, 16192,
   16192, 67936,  3472,  2718, -4525,  2715,  1715, 16192, 16192,  1840,
   16192, 16192, 16192, 16192, 16192, -4525, -4525, 16192, 16192, 21575,
   16192, 16192, 16192, 16192, 16192, 16192,  2723, 16192,  3458,  3458,
   16192, 16192,  1958, -4525, -4525, 16192,  3654,  3654, -4525, 16192,
   11578, 16192, -4525, -4525, -4525,  2726, -4525, -4525, -4525, 67936,
    3458,  3458, 16192, 16192, 16192,  3458,  3458, 16192,  2727,  2728,
   16192, 16192, 16192, 16192, 16192, 21575,  2729,  2730,  2732,  3383,
    3383,  3383,   664,    86,   886,   216,   976, -4525,  3000, 16192,
   16192, -4525, -4525, 62714, -4525, -4525, -4525, 16192, -4525, 16192,
   16192, -4525, -4525, -4525, -4525, -4525, -4525,  2735, -4525, -4525,
   -4525, 17730, 21575, 21575,  2742, 21575, 21575, -4525, -4525, 21575,
   21575, 21575,  3236,  2845, 21575, 21575, 22344, 23113, 21575, 21575,
   21575, 21575,  1371,  3383, 58984, 21575, -4525, -4525,  1961,  1961,
   16192, 41801, 67936, 67936, 67936,  3135, 67936, 67936, 58984,  2805,
    1102, 67936, 67936, 53762, 67936, 74650, 67936, 67936,  1960,  2900,
    4213, 32103, -4525, -4525, -4525, -4525, -4525,  2954, -4525, -4525,
   -4525, -4525, -4525, 67936, -4525, -4525, 53762, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, 58984, -4525,   176, 53762, 47048,   169,
   -4525, 68682, 67936, -4525,     1, -4525,  2990,  3003, -4525,  2753,
    2053,  3476, -4525, -4525,  3245,  3498,  3499, 67936, 67936,   626,
   -4525, -4525,  3500,  3243, -4525, -4525,  2764,  2952, 67936, 67936,
   -4525, 67936, 67936, -4525, -4525, -4525, -4525,  2767, -4525, -4525,
    1961,  4707, -4525,  2770, 53762, 53762,   176,  3055,   132,   214,
   -4525, -4525, 73158, 67936, -4525, -4525, -4525, -4525,  3470, 16192,
   -4525, 53762,  2816,  2979,  3281,   840, -4525,  2787,  2794, -4525,
    2909, -4525, -4525,  2802, -4525,  2811, 67936,  1563,  1094, -4525,
   -4525, -4525, -4525, -4525, 67936,  2812,   996, -4525,  2584,  1094,
   30611, -4525, 10040,  3415, -4525,   906,  2821,  3190,   906, 55254,
    3136,   307,   219,   235,   364, -4525,  3392, -4525,  3046,  3027,
   -4525, -4525,   452,  3084, -4525,  3429, -4525,   952, -4525,  3049,
    3136,   906,   906,   906,   906,   906,  3386,   906, -4525,  3311,
    3443,    24,  2044,   381,  1633, -4525, -4525, -4525, -4525,  2842,
   -4525,   850,  3520, -4525,  2843, -4525,  3419, -4525, -4525,  2753,
   18499,  1142,  2593, 67936, 67936,  3593, -4525, -4525,  2846, -4525,
    3239,  3060, -4525,  2974, -4525, -4525,  1390, -4525, 67936, 16192,
    1986, -4525, -4525, 53762,  3487, -4525, -4525,   281, -4525,  3469,
   -4525, -4525,  2869,  2906,  3588, 58984,  2987,  2916,   155, -4525,
    1050, 53762,  3009,  3488,  3489,  3491,  3492,  3496, -4525,  3497,
   -4525,  2890,  3504, -4525,  3256, -4525, -4525,  2451,  3096,  3096,
   58984,  2902, -4525, -4525, -4525,  3172, -4525, -4525,  1011, 16192,
   -4525, -4525,  1504, -4525, -4525, -4525, -4525, -4525, -4525,   -13,
   -4525, -4525,  1504, -4525,  3136,  3136, -4525, -4525, -4525, -4525,
   63460,  1608,  2847, 58984,  3585, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525,  3551, -4525, -4525,
    3309,  3363,  3674, -4525,  2918,  3573,  1094,  1094,  3573,  1094,
    1094, -4525,  3101, -4525,  1094,    83, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525,  3527,  3848,  1094,  2037,  3285,  1094,
    1094,  3614,  1094,  3289,  3296,  1094,  1094,  1094,  1094,  3116,
    3575, -4525,  1094,  3448,  1270,  4429,  3453,  1094,  3325, -4525,
    1295,  3594,  1094,  1094,  1094,  1094,  1094,  3614,  3328,  3685,
    1094,  1094,  3333,  1562,  3344,  3346,  1094,  1094,  1094,  1094,
    1055,  1094,  1094,  3356,  1094,  3139,  3145,  1094, -4525, -4525,
    1094,  5276, -4525, -4525, -4525,  2465, -4525, -4525,   117, -4525,
   -4525,  2996,  3002, -4525, -4525, -4525, -4525,  3277, -4525,  3063,
   -4525,  3287,  3155, -4525,  2901,   142, 64206, 67936, -4525, -4525,
    3024,  3031,   313, -4525,  2053,  3019,  3018, -4525,  5617,  3169,
   -4525, -4525, 67936, -4525, -4525, -4525, -4525,  3181, -4525, -4525,
   -4525, -4525,  2304, -4525,  3739,  3350, -4525, -4525,  3628, -4525,
    3422,  3796,  3088,  3695,  3438,  2093,  3573,  3193,  3810, -4525,
    3591, -4525,    75,  2811,  3228, -4525,  3057,  1699, 67936,  3623,
    2093, 67936, 67936, 67936, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, 67936, -4525, -4525, -4525, -4525, -4525, -4525,  2901,   222,
     687, -4525,  3458,  3059, 16192,  3061,  3064,  3065, 16192,   159,
    1922,  1340,  1610,  1826,  1448,   164, 16192,  3066, 13116, -4525,
    3067, -4525, -4525,   269,   294,  1543,  1555,  3069, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,  3631, -4525,
     300,  3075, -4525, -4525, -4525, -4525,  3056, -4525, 16192,  1574,
     338,   501,   256,  3087,   553,  1903,  1925,  3085, 67936, 67936,
    3458,  3089,  1576,  1642,  3458,  3091,   619,  1696,  1954,  1973,
    1974,   680,  2000,  3960,  1735,   771,   777,  1760,   802,   942,
   -4525,  1781,  3092,  3095,   949,   265,  3458,  3097,   276,  3094,
    3099,  1812, 13885, 14654, 15423,  1379,  1123, -4525,  3104, -4525,
    2715,  3107,  3108,   278,   197,  1818,  3106,  3112,  2015,  3163,
    3163,  1822,  1168,  1846,  1168,  1178,   157,  3163,  3163,  3163,
     122, -4525, 16192,  3109,  3118,  3122, 58984, 16192,   178, -4525,
   -4525, -4525,  2691,   258, -4525, -4525, -4525, -4525, -4525,  1285,
   -4525,  3114, -4525,  1027,  2110,  3125, 10809, -4525,  1394,  3125,
    3651,  2262,  2262, 21575, -4525,  3130,  2963,  1151, 16961,  1639,
   16961,  1639,  3125,  3125,  3125, -4525, 21575,  3140, 21575, 21575,
   -4525,  3383, -4525, -4525, 48540,  3142,  3141, -4525, -4525,  1705,
   -4525, -4525,  3143, 67936,  1102, -4525, -4525,  1960, -4525, -4525,
   -4525,   221, -4525, -4525,   528, -4525,  3147,   161,  2811,  3713,
   -4525, 67936,  3149, -4525,  3624,  3632,  3634,  3636, -4525, -4525,
   -4525, -4525,  3637, -4525,  3639, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525,  3158, -4525, 67936, 26881, 58984, -4525,  3159,
   -4525,  3758, -4525,  3553, -4525, -4525,  2038,  3349, -4525, -4525,
   -4525, -4525, 42552,  1279, -4525, -4525, 67936, -4525,   237,   264,
    4309,  3298, -4525,  2753, 67936,     1,     1, 67936, -4525,  3703,
   -4525, -4525,   203,  3175, -4525,  3177, 58984, -4525, -4525,  3200,
     247, 53762, 53762,  3185, -4525,  3358,   215,  3547, -4525,  3367,
    3945,     6, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525,  3194,  3799,  3752,  3595,  3769,
    3147, 42552, -4525, 67936, -4525, 24633,  3298, -4525,  3775,  3394,
    3395,  -156, -4525, 56000, -4525,  2053,   146,  3519, -4525,  3519,
    1892, -4525, -4525,  3725, -4525,  3565, -4525, 74650, -4525, 58984,
   74650,  3805,  3231,  3232,  3233,  3234,  3235, 70920, 16192, -4525,
   -4525, -4525, 10040,  3247, -4525, 70920, -4525, -4525, 21575,  1987,
   -4525, -4525,  2264, -4525,  2053, -4525,  3759,  1961, 16192, -4525,
   -4525,  3262,  2093, 67936, 67936, 67936, 67936, 67936, 53762, 67936,
   -4525,  1680,  1680, -4525, -4525, -4525,   906, 67936, -4525, 67936,
     906, 53762, -4525,   307, 67936,   906, -4525,  3760,  3456, -4525,
   -4525, -4525,  3833, -4525, -4525,  3827,  3258, -4525,  3759, -4525,
    3419,   307, -4525, -4525, -4525, -4525, -4525, -4525,  3829, -4525,
   -4525, -4525, -4525,   307, -4525, -4525, -4525,   307,   307,   307,
     906,   906,  1659, -4525, -4525,  3515,   717,  3970, -4525,  1987,
    2053,  3266,  3264, -4525, -4525, -4525,  2048, -4525,  1027,   443,
    3629, -4525,  3852, -4525, -4525, -4525, -4525, -4525,  1748,  1863,
   -4525,   119,   173,  3643,   286,  3278,  1094, -4525, -4525, -4525,
   -4525,  3644,  -141, -4525, 73904,  3646,  1137, 58984,  3480,  3484,
   -4525, -4525,  3490, -4525, -4525,   467,  1105, -4525,  2371,   175,
       1,  1411,     1,  3210,     1,     1,  1793,     1,  3419,  3905,
    3941, 67936,  3400, -4525,  1769, -4525, -4525, -4525, -4525,  2706,
   -4525, 31357,  3728,  1344,  3305, -4525, -4525, -4525, 51524, 51524,
   -4525, -4525, -4525, -4525, 67936,    72, -4525,  3307, -4525, 25384,
   -4525,  3477,   206, -4525, -4525, -4525, -4525,  2431,  2375,  3601,
    3819,  3486,  2375,  1752,     1,   446, -4525,  2335,     1,   446,
    2335,  2335, 67936,  3477, -4525,  1488,  1094, -4525, 67936,   313,
     186,   313, -4525,   239, 67936, 39563, 64952, 67936, 67936, 67936,
   67936,   186,  1411,  3210, 67936,  3210, 65698,   186,     1,     1,
       1,     1,  2706,  1094,  3210, -4525, 65698, -4525, 67936, 67936,
    3822, 67936,  3825, 67936, 67936, -4525, 58984, 67936, 65698, -4525,
    1094,  1607,  3210, 66444,  1411,  1411, 67936,   186, 67936,  1585,
       1,   186, -4525, 67936, -4525, -4525, 67936, 67936,   186,   186,
    3322,  1585,  1585,  2880, -4525, -4525, 67936,  3210, 65698,  3330,
   -4525, -4525, 56746,  3477, -4525,  1094,  1094,  3689, -4525, -4525,
    9255,  9120,  2022,  1094,  3389,  3721,  1671, 67936, -4525,  3427,
    3432, -4525, -4525, -4525, -4525, -4525,   313, 65698, 67190,  3853,
   -4525, 16192,  3946,  3952,  3953,  3956,  3957,  3958,  3961,  3964,
    3965,  3971,  3972,  3976,  3978,  3980,  3982,  3983,  3984,  3986,
    3990,  3991,  3998,  4002,  4004,  4005,  4006,  4008,  4009,  4011,
    4012,    79, -4525, -4525,  4015,  4016,  4018,  4019,  4021,  4022,
    4023,    96, -4525, -4525, -4525, -4525, -4525, -4525, -4525,   250,
   67936,  3486,  3411,  3510, 67936,  3200, -4525,  3844,  3463,  3573,
     223,  3530, 53762,  3720,  1094,   872,  1118,  1118,  3808, -4525,
    4076, 67936, 67936,  3424,   -75, -4525,   502, -4525, 19268, -4525,
    3425,  3163,  2053,  3163,  3163,  3163,   609, 16192, 16192,  4038,
    4079, -4525, 57492, -4525, -4525, -4525, 57492,  4079,  2054,  3163,
    3428, -4525,  3950,  3951, -4525, -4525, -4525, 16192, 16192, -4525,
   16192,   375, -4525, 16192, 16192, 16192, 16192, 16192, -4525, -4525,
   21575, -4525,  3430,  3433,  3163, -4525, -4525,  3439,  3163, 16192,
   -4525, -4525, -4525, -4525, 16192, -4525, 16192, -4525, 16192, 16192,
   -4525, 16192, 16192, -4525,  3163,  3163, 20037, 16192, 16192,  3442,
    3163, -4525, 16192, 16192, 16192, -4525, 16192,  1595, 16192,  2176,
   16192,  2857, 16192, -4525, 16192, -4525,  3163,  3163, -4525, 16192,
     474, -4525,  3210, -4525,  3458,  3163, -4525, 40309, -4525, -4525,
     306,  2983,  3451,   306,  3452, 21575,  3163, -4525, -4525, -4525,
    2057, -4525, -4525, -4525,  3450,  2053, -4525, -4525, -4525, -4525,
   -4525, -4525, 21575,   326, 21575,  3651, 21575,  5105,  5105,  2703,
   10809, -4525,  1605,  3651, -4525, -4525, 16192, 16192, 43303, 67936,
     373, -4525,  3200,  1351, -4525,   141, -4525, -4525, 53762, -4525,
   -4525, -4525, -4525, -4525,   161, 58984,  3444, -4525, -4525, -4525,
   -4525, -4525,  3419, -4525,  3223,  3177, -4525,  3625,  3650,  3652,
   -4525, 33595, -4525, -4525, -4525, -4525, 33595,  1412,   176, -4525,
   67936, 53762,  3460,  3461,  3467,  3635,  3568, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,  3298,  3462,
    3136, -4525,  3547, -4525, -4525,  3459, -4525,  1714,  3096,   884,
   67936, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, 16192,     1, -4525,  3657, -4525, 67936, 67936, -4525, -4525,
   -4525, -4525,   204, -4525,  3481,  3073, -4525,  3200, -4525, -4525,
    3419, -4525,  4707, 26881,  3823,   176, 53762,  4036, -4525, -4525,
    3482,  1027, 23882,  3511, -4525,  3483,  2403, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525,  3547,  2972,  4035,  3298, 74650,
   74650, 74650, -4525, -4525, -4525,  3518,  2979,  2979,  3525,  3525,
     207,  3821, -4525, -4525, -4525, -4525,  2811, -4525, -4525,  3477,
   -4525, -4525, -4525, -4525, -4525,  1094,  2053, -4525, 30611, -4525,
       1,  4058, -4525,  2053,  3505, 67936, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525,  3656,   906, -4525, -4525, -4525, -4525, -4525,  3837,
    3136,  3084,  4058, -4525,   906, 53762,   906, 67936, 67936,   906,
   -4525, -4525, -4525,  4072, -4525,     1, -4525, 18499, -4525, 67936,
   -4525,  3506, -4525,  3937, 67936,  4118,  3512, 21575,  3513, 21575,
    3477,  3724,  3516,  4269,  3210,  3096, -4525,  3519,  3878, -4525,
   -4525,  2811, -4525,  3832,  3879,  3525,  2179, -4525, -4525, -4525,
   -4525,   991,  3210,  3210,  3210,  3210,  2371, -4525,   893,   980,
    2716,  3477, -4525,   175, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525,     1,  4125,  3883,  3522,
   -4525, -4525, 57492,  4220, -4525, -4525, -4525, -4525, -4525, -4525,
   16192, -4525, -4525,  1181,   198,  -172, 25384, 67936, 44054, -4525,
     -89, -4525, -4525, -4525, -4525, -4525, -4525, -4525,  1094,     1,
    3761,  3766,  3767,  3768,  3773,  3817, -4525, -4525,  3924, -4525,
       1,  1342,     1,     1,     1,     1,  3210,     1,     1,  2062,
   -4525, -4525, -4525,   238, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, 58984, -4525, -4525, -4525, 67936,   820,
   67936,  3548,  4052,  4053,   805, 67936,   313,  3562,  3702,  3735,
   50032,  7975, -4525, -4525, -4525,  3963,  3963,  2117,  1002, 65698,
   -4525, -4525, 67936, -4525, -4525,  2304,  3563, -4525,  3477, -4525,
   -4525, -4525, -4525, 52270,     1, -4525,  3770, -4525, -4525, 67936,
    3563, -4525, -4525,   623, -4525,  3694,  3771,     1, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,  7975, 65698,
    3564, -4525,   444, -4525, -4525, -4525, -4525, 65698,  3757,  3763,
   -4525, 67936, 65698, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, 67936, -4525, -4525,
   -4525, 56000, 57492, -4525,   299,  2897,  5276, -4525, -4525, -4525,
    2996, -4525, -4525, -4525,   528,  3968,  1094,  1948,   260, -4525,
    3891, -4525, -4525,  2599,  3974,  3975,  3583, -4525,  3584, -4525,
    3581, -4525, 64206,  2053,  3590,  3210,     1,  3210,  3210,     1,
       1,  3210,  3210,     1,     1,     1,     1,     1,     1,     1,
       1,  3210,  3210,     1,  1885,     1,  3210,     1,     1,  3210,
   58238,    99,  3210,  5617, -4525,  3592,  3592,  3596,  3596,  3598,
    3598,  3599,  3169, -4525, -4525,   262,  3600,  2839,  3200, 58984,
    3602, -4525,  4143,  1094,  1094,  1094,  1094, -4525,   268, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525,   528,  1205, 58984, 74650, -4525,  3009,  1112,  3785,  3603,
   -4525,  1961, -4525, -4525, -4525, -4525, -4525, 67936,  2285, -4525,
   67936, -4525, 37325, -4525, -4525, -4525, -4525,  1808,  1413, -4525,
    1011,  1356, -4525,   272,  3885, -4525, -4525,  1036,  3606, -4525,
   -4525,   200, 16961,  1869,  3163, -4525, -4525, -4525, -4525, -4525,
   16192,  2053,  2627, -4525,  3608,  3608,  3609, -4525,  3610,  3977,
    3608, -4525,  4297, -4525, -4525,  4138,  3609,  4142,  3608, -4525,
    3672,  3630,  3638,  3648,  3163, -4525,  3163, 16192, 16192,  1884,
     349,  1886,  4346,  3902,  1237,  1243,   363, -4525,  1905,  3992,
    3163, -4525,  3163, -4525,  1913,  2023,  2025,  2063,  1280,  2072,
    2065, -4525, -4525, 16961,  2154,   611,   391,  3163, -4525,  2188,
    1296,  1305,  2202, 16192,  2212, 16192,  2226, 16192,  2236,  2242,
   -4525, -4525,  2267,  3640,  3640,  3633,  3649, -4525, 67936, -4525,
   -4525, -4525, -4525,  3711,  3729,  3163,  3653,  3653,   306,  3163,
     306,   174, -4525, -4525, 67936, -4525, -4525, -4525, 16192,   325,
     185, -4525, -4525, 21575,   476, 21575, -4525,  3655, -4525, -4525,
   -4525, -4525,  4116,  4406, -4525, -4525,  3874, -4525, -4525, -4525,
    3149, -4525, -4525,   129,  4264,  3662, -4525, -4525, -4525, -4525,
   -4525, 42552, -4525,  1361,  3667, 44805, 53762,  4041,  3136, 18499,
   -4525,  3123, 67936,   313,  4201,   183,  3791,  4158, -4525, -4525,
   -4525,  2053, -4525, 53762, -4525, -4525, -4525, 67936, 67936,  1142,
   -4525, 35087, -4525, -4525, -4525, -4525,  3678, -4525, -4525,  4283,
   -4525,  4248, 42552,  3147, 53762, 16192,  2972,  3679,  3686,  3688,
    3690,  3692,  3696, 25384, 25384,  4192,  4196, -4525,  4068,  1510,
    4068, -4525, 38071, 25384, 25384,  2348,  2599,  4412,  4245,  4035,
    2811,  2811,  2811,  3519,  3519, -4525,  4360, -4525, -4525, -4525,
   -4525, -4525, -4525,   297, -4525, 10040, -4525, -4525,  1411, -4525,
     469, -4525, 53762, -4525,  4094, -4525, -4525, -4525, -4525,  3855,
   -4525,   307,   307, -4525,  3985, -4525, -4525, -4525,  3210, -4525,
   -4525, 67936,  2994, 67936,  3227, -4525,  4420,  3708, 21575,  4313,
    3710,  4256, -4525,  3525,  3519,  2979,   776, -4525,   933,  1235,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,  1604,  4383,
    3023,  4243, -4525, -4525, -4525, -4525, -4525,     1,  4329, -4525,
   -4525,  1364,  4212, -4525, 25384,  3547, 44054,  -176, -4525, -4525,
    3722, 67936,     1, -4525, -4525, -4525,  4387, -4525,  4390,  1875,
    4340, -4525, -4525,   335, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525,  1752, -4525,  3740,  3477,
    4104,  3742, 16192, 67936, -4525, -4525,  3777, -4525, -4525,  3748,
   -4525, 41055,  1118,  1118,  2118, -4525, -4525, -4525,  7975, -4525,
    3608,  3608,  3608, -4525, -4525,   402,  3609, -4525, -4525,  3749,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,   647,  2644,
   -4525, -4525,   647, -4525, -4525, -4525,   188,  1783, -4525, -4525,
   -4525, -4525, -4525,  3751, -4525,  3608,  3609,  3609, -4525, -4525,
     647,  3608, -4525,  3608,  4075,  3872, -4525,   163,  3608,  3608,
    3608,  3756,  3610, -4525, -4525, -4525, -4525, -4525,  4396,  4397,
   -4525,  7975, -4525, 67936, -4525,  3470,  3470, -4525, -4525, -4525,
   -4525,  3959, -4525, -4525,  1294, -4525, 67936, -4525, -4525, 67936,
   67936,    65,   204,  3762, -4525, -4525, -4525,  3774,   -39, -4525,
     -18, -4525, -4525,  3713,  1587,  1757,  3954,  2252, -4525, 67936,
   67936, -4525, -4525, 67190, -4525,  3210, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, 35833,
   -4525, -4525, 36579, -4525, -4525,   866, -4525, -4525,  2090, -4525,
   -4525, 41055,  1094,  1094, -4525,   352, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525,  4154, 41055,  1022, 67936,     1,
    2335,  2335,  3477,  3478, -4525,  4136, -4525,  2393,  2811,   175,
   -4525, -4525,  3063, -4525,  3781, -4525, -4525, 67936,  2124, -4525,
   -4525,  5638,  1011, -4525,  1036,  4168, 67936, -4525, -4525, -4525,
   -4525,  4031, -4525, -4525, -4525, -4525,  4170,  5105, -4525, -4525,
    2053, 16192,  1290, -4525, -4525,   647,  4179, -4525,  1368, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525,  3788, -4525, -4525, -4525, -4525, -4525,  5105,  5105,
   -4525, -4525, 16192, -4525, 16192,   443,  3789, 16192, 16192, -4525,
   16192, -4525,   346,  3790,  3919, -4525, -4525, -4525, -4525, -4525,
   -4525, 16192, -4525, -4525,  5105, -4525, 16192, -4525, -4525, 16192,
   -4525, -4525, 16192, 16192, -4525,  2299, -4525,  2308, -4525,  2317,
   -4525, -4525, -4525,  3477,  3793,  3795,  3210,  3163, -4525,  3801,
    4160, -4525, -4525, -4525, 16192, -4525, -4525,  3163, -4525,  3163,
    4365, -4525,  2130, -4525, -4525, -4525, 16192,   325, -4525, -4525,
   -4525, -4525, -4525, -4525,  4134, -4525,  4443, 33595,  3987,  4358,
   -4525, -4525, -4525, -4525,  1419, -4525, -4525,  2142, 67936,  4551,
    4195, -4525,   313,  4201,  4305, -4525,  4337, -4525, -4525, -4525,
   -4525,  3820,  3563,  3815, -4525,  1094,  1953,  2155, -4525, -4525,
   -4525,  3816, 18499,  3818, -4525, 26881, 53762,  4392,  3147,  1326,
    2599, 25384, -4525, -4525, -4525, -4525, -4525,  2403,  3826,  3830,
    3831,  2403, -4525, -4525, -4525,  4332, -4525,  4068,  4068,  4335,
    4336, -4525,  3851,  3909,   515, -4525, 16192, 16192,  3897,  4245,
    3525,  3525,  4193,  3477, -4525, -4525,  3136, -4525, -4525,  3147,
   -4525,  3136, 53762,  3298,   906, 16192, -4525,  2203, -4525, -4525,
    2205, -4525,  4322,  4104, -4525,  3502,  3477, 67936,  4553, -4525,
    3525,  3525,  2979, -4525, -4525, -4525,  3525,  4202,   890, -4525,
    3477, -4525,   100, -4525, -4525,  3935, -4525,     1,  4560,  4562,
    4454,  4563,  1364, -4525,  1865, -4525,  -176,  3298,  1363, -4525,
    3856, -4525,  1040, -4525, -4525, -4525, -4525, -4525, -4525,  1299,
   -4525, 41055, -4525, 67936,  2210, -4525, 41055,  2347,  3857, -4525,
   41055, 16192, -4525,  2261, -4525,   148, -4525, -4525, -4525, 50032,
    4075, -4525, -4525, -4525,  4584,   266, -4525,  4585, -4525,   647,
   57492, -4525, -4525, -4525, -4525,   443, -4525,   725, -4525,   647,
   -4525, -4525,  4000, -4525, -4525, -4525,   443,   647, -4525, -4525,
   -4525, -4525,  1408, 67936,  1294, -4525, -4525, 56000,  2864,     1,
    3196,  3894, -4525,  4020, -4525,  4502,   291,  4367,  3200,  4370,
    4570, -4525, -4525,  3947, -4525,  4432,  4374,   801, -4525,  4604,
   -4525,   647,  4604,  1408,  4268, -4525,  1408,  1408, -4525,  3479,
    1294, -4525, -4525, -4525, 67936, 67936, -4525, -4525, -4525, -4525,
   -4525,  3882, -4525, -4525,  4274,  3968, -4525,  4275, -4525, -4525,
    4233, -4525, 16192, 16192,  4272, 67936,  4273, -4525,  4577,  4634,
    3563,  1465, -4525,  2266, -4525, -4525, -4525,  2278, -4525, -4525,
   -4525,  2287, -4525, -4525,  3887, -4525,  2294, -4525, -4525, -4525,
   67936, -4525,  2305,  2314,  2335,  2335,  2961,  1022,  3895,  2315,
       1,     1,     1,     1, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525,   933,  1284, -4525,  3389, 41055,  3896,  6815, -4525,  4144,
    4174,  3898,  3900, -4525,  7975,     1,   267, 67936,  -242,  2053,
    3901,  3906,  3908,  3910, -4525,  3911,  2329, -4525,  3915,  3917,
    2376,  3914, -4525, -4525,  3163,  2407,  1418,  2331,  4323,  4405,
   -4525,  4246, -4525,  2414,  1392,  2458,  2472,  2491,  2495, -4525,
   -4525, -4525, -4525, -4525, -4525,  3920, -4525, -4525,  4643,  4310,
    2053, -4525, -4525,  1018,   306, -4525,  2361,  4518,  4414, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, 53762,  4312,  4491,  4681,  3298,   151,
   67936,  4195,  4556, -4525, -4525, -4525,  4139, -4525, 67936, 18499,
   -4525, -4525,  1953, 67936, 41801,  3939,  3678, -4525,  3147, 53762,
    1062, -4525,   382, -4525, -4525,  4448,  4449, -4525, -4525, 16192,
    3944, 16192,  3948, -4525, -4525,   313,   313, -4525,   515, -4525,
   -4525,  2053,  -192, -4525,  2053, 67936, -4525,  3897, -4525, -4525,
   -4525, -4525, -4525,  3419,  3147, -4525, -4525,  2053, -4525, 67936,
   -4525,  2091,  2381, -4525, -4525,  3962,  3940,     1, -4525, -4525,
    3525, -4525,  3525,  2979, -4525,  4590, -4525, -4525, -4525,  4591,
   -4525,   443,   443,  4674,   443, -4525,  4675,  4680,  1865, -4525,
   -4525,  4341,  4341, -4525,  2382,  4110, -4525,  4104,  2388, -4525,
   67936,  2396,  2511,   481, 41055,  4359, -4525, -4525, -4525, -4525,
   -4525, -4525, 57492, -4525, -4525,  4604,  2408, -4525, -4525, -4525,
    2416, -4525, -4525, -4525, -4525, -4525,  1408, -4525,  3967, -4525,
     412,  4097, -4525, -4525, -4525, -4525, -4525,  3625,  3650,  3652,
    1885,  1885, 16192, -4525, -4525, -4525, -4525,  4368,  4117, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, 56000, -4525,  4722,
    4718, -4525, -4525, -4525, -4525, -4525, -4525, -4525,  3973, -4525,
   -4525, 16192, -4525, -4525,  1972, -4525,  4104, -4525, -4525, -4525,
   -4525,  2053,  5105,  4659, -4525, -4525,  4230,     1,  4600,  2285,
    4371, -4525, -4525,  3210, -4525, 67936, -4525, 67936, 67936, -4525,
       1,  3988, -4525,  3981,   483, -4525, -4525, -4525,  1752,   512,
   -4525, -4525, -4525,  4527, -4525,  4354, -4525,  1948,  2421, -4525,
   -4525,     1,  1757, -4525, 67936,  3470, -4525, -4525, -4525, -4525,
    3994,  3993, -4525, 67936,  4566, -4525, -4525, -4525, -4525, -4525,
   -4525,  4388, -4525, -4525, -4525, 16192, -4525, -4525, 16192, -4525,
   -4525,  4422,  4592, -4525, -4525, -4525, -4525, -4525, -4525,  4001,
    3210, 16192,  4719,    39, -4525, -4525,  3163, -4525, -4525, -4525,
    1419, -4525,  4384, 53762, -4525,  3136,  4195,  2599, -4525,  4507,
   67936, -4525, -4525, -4525, -4525, -4525,  4010, -4525, -4525,  3147,
     408, -4525, -4525, -4525,  2053, 67936,  2053, 67936,  4578,  4578,
   -4525, -4525, 16192, -4525,  4750,  4017, -4525, -4525, -4525, -4525,
    4014,  4269, -4525, -4525,  1014, -4525, -4525,  3525, -4525, -4525,
   -4525, -4525,   443, -4525,   443,   443, -4525,  4498,  4498,   483,
    2070,  3797, -4525,   512,  2452, -4525,   481,   444,     1,  1094,
   -4525,   481, -4525, -4525, -4525, -4525, -4525,  4024, -4525, -4525,
     647,   443,   647, -4525, 67936,  4456,  4037, -4525, -4525, -4525,
    2519, -4525, -4525, -4525, -4525,  4026,  2540, -4525, -4525,  2470,
   -4525, -4525, -4525, -4525, -4525,  4147, -4525,  4111, -4525, -4525,
   -4525, -4525, -4525, 67936, 67936,  4389,   373,   483, -4525, -4525,
    2481,   373,   512, -4525, -4525,  4740, -4525, -4525,   481, -4525,
    4272,  4318, -4525, -4525, -4525,  1628,  7975,  4646,  4027, -4525,
    2579, -4525, -4525, -4525,  4039,  4033, 16192, -4525, -4525, -4525,
   -4525,   248, -4525,  4681, -4525,  4159, -4525, -4525, -4525,  4191,
    3547,  4042,  4040,  4043,  4044,  1054,  4046,  4047, -4525,  4051,
   67936, 21575,  4054,  4667,  1328, -4525, -4525, -4525, -4525, -4525,
   -4525, 51524, -4525, -4525, -4525,  4055,  4242,  1094,  4671,  4684,
    1094,  1094,  1094,  1094,  4059,  3797, -4525,  4666, -4525,  4075,
   67936, -4525, -4525, -4525,  3210, -4525,   444, -4525, -4525, -4525,
    2486, -4525,  1333,  4439, 67936, -4525, 16192, -4525, -4525,  4289,
   -4525, 81364,  1704, -4525, -4525,  4063,  4060,  2321, -4525, -4525,
   -4525, -4525, -4525,  3200,   373,  2252, -4525,  7975, -4525, -4525,
    3470,  4347, -4525, -4525, -4525,  3305,  2907,  4348, 16192,  4141,
    4156, -4525, -4525,  4145,  4146, -4525,  4185, -4525, 67936,  2706,
   69428,  2679, -4525, -4525,  4794, -4525,  4796, 67190, 67190, -4525,
   -4525,  3622, 67936,  1094,  4311, -4525, -4525,  4081, -4525, -4525,
      11,     1,  1094,  1094,  3200,  3200,  3477, 67936,  4294, -4525,
   -4525,  1094, -4525, -4525, -4525, -4525, -4525, 67936, -4525, -4525,
   -4525,   405, -4525, -4525,  2586, 16192,  4695,  4218, 67936,  1588,
   -4525, 82856, 82856, 67936, -4525, -4525, -4525, -4525,  6125, -4525,
   -4525,  1192, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525,  4823, -4525,  4085, -4525, -4525, -4525, -4525,
    4793,  4475,  4800, -4525, 67936, -4525, -4525, -4525,  4577,  3470,
    4080, -4525,  1397, 16192,  -153, -4525,  4846,  1493,  1548, -4525,
    5105, -4525,   160, -4525, -4525, -4525, 72412,  3815,  4386,  4163,
    2512, -4525, 83573, -4525, -4525, -4525,  4105,  2514,  4315,  2522,
    3096, -4525, -4525,  2530, -4525, 20806, -4525, -4525, -4525, -4525,
       1,     1, -4525, -4525, -4525, -4525, 58984,  2531, -4525, 58984,
   -4525,  1318,  1318,  1569,  2053, 16192, -4525, 16192,  4237, -4525,
   -4525,  4676, 67936, -4525, -4525, -4525, -4525, 16192, -4525, 81364,
   81364, -4525, -4525, -4525, -4525,  4840,  4489, -4525,  4490,  4112,
    4733, -4525, -4525, -4525, -4525,  4744, 81364, -4525, -4525, 58984,
   -4525,  5105, -4525,  2907, -4525, -4525,  4187,  4398, -4525,  4194,
   -4525,  2909, -4525, -4525,  2811,  4652,  4220,  1062, -4525, 69428,
    4182,  3470, -4525, -4525,  3477, -4525,  4315,  4424, -4525,  4081,
   -4525,  2537, -4525,  3651, -4525, -4525,  3797, -4525,  4294, -4525,
   -4525,  4879, -4525,  1206,  4509,  4512, -4525, -4525,  3947,  2053,
    2053, -4525,   190, -4525, -4525,  4645,  4739, 16192,  2053, 77634,
    4127, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, 82110, 16192, -4525,  1192,  4823, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, 81364,  1629, -4525,
   -4525, -4525, -4525, -4525,  4847,  4212,   408, -4525, -4525,  4725,
   -4525, -4525, -4525, -4525, -4525, 20806, -4525, -4525, -4525, -4525,
   -4525,  4288,  4770, -4525,  4278, 16192, 81364, -4525,  4748, -4525,
    4673,  2053,  4616,  4149, -4525,  4140,  2053,  4785, 82856, 82856,
   -4525,  4080, -4525, -4525,   443,  4682, -4525, -4525,  4211, -4525,
    1318,  1318, -4525,   355, -4525,  2053, 78380,  4863, 67936, -4525,
    4343, -4525, -4525, 16192,  4776, 59730, 79126,  4153, -4525, -4525,
   -4525, 81364, -4525,  4548,  4161,  1062, -4525, -4525, 16192, -4525,
    4768,  4349, -4525,  4157, -4525, 81364,  2053, 81364, -4525, -4525,
    4708,  6974,   439, -4525,  4162, -4525, -4525,  1153, 32849,  4426,
    1598,  2053,  4876, 81364, 67936, 75396,  4777, 79872,  4742, 67936,
    3470,  4743,  4745, -4525, -4525, -4525, -4525, -4525, 58984,  2561,
   -4525, -4525, 67936, -4525,  1062, -4525, -4525, -4525,  1527,  1527,
    4555,  4363, -4525, 76142, -4525,  2762,  4479,  4304, -4525, -4525,
    4816,  1332, -4525, -4525, -4525, 34341,  4173, -4525,  1094,  1961,
   -4525,  4565, -4525,  4567,    81, 81364, 81364, -4525, -4525, -4525,
   -4525, 47794, 16192, -4525, -4525, -4525, -4525,  2115, -4525, 67936,
   18499,  4784,  4249, -4525, -4525, 76888, 80618, -4525, -4525, -4525,
   26134, -4525, -4525, -4525,  4751, -4525,  2053, -4525, -4525, -4525,
   47794, -4525, -4525, -4525
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
    1882,  2929,  1191,  2881,     0,     0,     0,     0,     0,     0,
    2883,  2929,   107,  2008,  2009,     0,  1825,     7,     0,  1191,
     359,     0,     0,   119,     0,  1839,     0,  2070,     0,     0,
    1191,     0,  2063,     0,     0,  1191,  1887,  2047,   336,     0,
    2883,     0,  1256,     0,  1917,  2743,     0,     0,     0,     0,
    1900,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2744,     0,     0,     2,     8,    13,    42,     0,
      79,    62,    69,    31,    41,    39,    38,    36,    40,    37,
      30,    95,    86,    65,    25,    15,    20,    17,    27,    16,
      19,    23,    24,    22,    26,    21,     0,    66,    98,  1153,
      99,    33,    83,    28,    29,    32,    76,    82,    77,    78,
      91,  1222,  1219,  1746,  1221,  1234,  1242,  1243,  1244,  1883,
      45,    58,    49,    46,    48,    52,    51,    60,    61,    47,
      59,    56,    57,    50,    54,    55,    53,    71,    84,   103,
       0,    43,   100,    96,    44,    63,  2010,    64,    85,    80,
      73,   104,    74,    92,    94,    93,    75,   102,    97,    87,
      18,    68,    88,    67,    14,    35,    89,    90,    81,   105,
      72,   101,    70,    34,     0,  1023,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1823,     0,   964,  2927,  2928,
    2929,  1193,  1192,     0,  2883,  2167,  1178,     0,  2252,  2251,
    2254,  2256,  2257,  2258,  2259,  2260,  2261,  2203,  2263,  2264,
    2265,  2266,  2267,  2268,  2204,  2269,  2270,  2271,  2272,  2273,
    2274,  2205,  2206,  2276,  2277,  2278,  2279,  2281,  2207,  2208,
    2282,  2283,  2284,  2286,  2287,  2288,  2289,  2290,  2291,  2292,
    2210,  2293,  2211,  2294,  2295,  2297,  2298,  2330,  2299,  2300,
    2301,  2302,  2303,  2304,  2213,  2305,  2306,  2307,  2308,  2309,
    2310,  2311,  2312,  2313,  2214,  2314,  2315,  2317,  2319,  2320,
    2321,  2322,  2323,  2215,  2324,  2325,  2326,  2328,  2216,  2331,
    2333,  2334,  2335,  2337,  2336,  2338,  2339,  2242,  2340,  2341,
    2200,  2343,  2344,  2345,  2346,  2347,  2349,  2350,  2243,  2351,
    2352,  2353,  2354,  2217,  2218,  2356,  2357,  2358,  2359,  2365,
    2360,  2361,  2362,  2639,  2364,  2219,  2366,  2220,  2370,  2369,
    2371,  2163,  2372,  2164,  2373,  2221,  2376,  2377,  2378,  2379,
    2222,  2381,  2382,  2383,  2384,  2385,  2386,  2387,  2223,  2388,
    2389,  2390,  2391,  2392,  2393,  2640,  2395,  2396,  2397,  2398,
    2400,  2401,  2403,  2405,  2406,  2407,  2408,  2410,  2411,  2412,
    2422,  2413,  2414,  2415,  2417,  2416,  2418,  2419,  2420,  2423,
    2402,  2425,  2426,  2427,  2428,  2429,  2430,  2431,  2433,  2434,
    2435,  2436,  2437,  2438,  2439,  2440,  2441,  2442,  2443,  2444,
    2445,  2446,  2447,  2448,  2449,  2450,  2451,  2452,  2454,  2455,
    2456,  2457,  2244,  2224,  2459,  2461,  2462,  2463,  2466,  2467,
    2468,  2470,  2474,  2475,  2476,  2477,  2478,  2480,  2479,  2481,
    2484,  2486,  2487,  2485,  2488,  2489,  2490,  2225,  2226,  2492,
    2493,  2494,  2245,  2496,  2498,  2497,  2246,  2499,  2500,  2501,
    2503,  2504,  2505,  2506,  2507,  2509,  2510,  2511,  2512,  2513,
    2247,  2514,  2515,  2227,  2516,  2248,  2517,  2519,  2518,  2520,
    2522,  2523,  2521,  2228,  2525,  2527,  2528,  2530,  2531,  2533,
    2229,  2535,  2536,  2537,  2539,  2538,  2540,  2230,  2541,  2542,
    2547,  2548,  2549,  2550,  2643,  2551,  2552,  2202,  2231,  2553,
    2232,  2555,  2556,  2557,  2558,  2559,  2560,  2561,  2562,  2563,
    2564,  2565,  2566,  2568,  2569,  2233,  2570,  2571,  2572,  2573,
    2234,  2574,  2575,  2576,  2577,  2578,  2579,  2580,  2250,  2581,
    2582,  2583,  2584,  2585,  2586,  2587,  2589,  2590,  2591,  2592,
    2598,  2596,  2597,  2599,  2600,  2601,  2235,  2602,  2603,  2605,
    2606,  2607,  2608,  2236,  2237,  2609,  2610,  2611,  2612,  2614,
    2615,  2616,  2617,  2619,  2621,  2622,  2623,  2624,  2625,  2626,
    2627,  2628,  2238,  2629,  2630,  2631,  2641,  2534,  2255,  2380,
    2620,  2296,  2554,  2394,  2458,  2642,  2367,  2275,  2209,  2342,
    2355,  2460,  2473,  2491,  2526,  2595,  2604,  2453,  2471,  2483,
    2368,  2532,  2567,  2593,  2249,  2618,  2409,  2363,  2201,  2316,
    2318,  2472,  2508,  2253,  2374,  2262,  2432,  2469,  2545,  2543,
    2544,  2546,  2529,  2465,  2332,  2464,  2404,  2502,  2399,  2424,
    2495,  2421,  2524,  2482,  2348,  2280,  2285,  2212,  2375,  2588,
    2594,  2613,  2329,  2327,   290,  2174,   272,  2175,  2196,  2197,
    2198,  2195,  2199,     0,     0,  2732,  2731,     0,     0,  2884,
    2885,   620,     0,     0,     0,     0,     0,     0,  1826,     0,
     900,   620,   620,     0,   902,   620,     0,   899,     0,   207,
    2912,  2912,  2929,  2931,  2933,  2254,  2203,  2267,     0,  2136,
       0,     0,     0,  1598,     0,  2207,     0,  2287,  2289,     0,
       0,  1284,  1284,   781,     0,     0,     0,  2312,  2313,  2142,
       0,     0,     0,  2133,  2143,  2356,  2360,  2362,     0,  2135,
    2371,     0,     0,     0,     0,  2392,  2140,     0,     0,  2436,
    2438,     0,     0,  2442,  2443,  2444,  2445,  2119,  1343,     0,
     781,  2132,  2139,  2125,  2488,  2489,     0,  2499,     0,     0,
    2533,     0,     0,  2538,  2547,     0,     0,  2577,     0,     0,
     781,  2118,  2598,  2596,  2597,  2599,     0,  2134,  2235,  2141,
       0,  2612,  1284,   781,   781,     0,     0,     0,  2623,  2624,
    2631,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1276,     0,     0,
       0,  1342,     0,  1423,  2903,  1800,  1275,  1279,  1296,  1301,
    1318,     0,  1335,  1354,  1355,  1357,  1459,  1356,  1362,  1480,
    1363,  1481,  1361,  2129,  1360,  1359,  2130,  2131,  1277,  1353,
    2154,  2174,  2153,  1369,  2901,  1823,  1823,  1823,     0,     0,
    1823,  1823,     0,     0,  1823,     0,  1823,  1823,  1823,     0,
    1823,     0,   112,  2016,   360,   361,     0,  2780,  2793,  2794,
    2790,  2795,  2813,  2796,  2800,     0,  2792,  2861,  2187,     0,
    2799,     0,  2861,  2797,     0,  2861,     0,  2798,  2803,  2814,
    2861,  2791,  2176,  2186,  2185,  2861,  2633,  2632,  2177,  2634,
       0,  2782,     0,  2159,     0,     0,  1841,  1842,  1840,  1110,
       0,     0,  2071,  2072,     0,  2075,     0,  2076,  2079,     0,
    2732,  2726,  2728,     0,     0,     0,     0,     0,  1194,     0,
    1844,  1888,  1845,  1843,  1823,     0,   326,   335,   337,   338,
     334,  2780,     0,     0,  2885,  2896,  2911,  2906,  2905,  2908,
    2909,  2910,  1261,  2907,  2904,     0,  1257,  1259,  1260,   836,
       0,     0,  2674,  2677,  2448,  2481,  2678,  2600,  2675,  2534,
    2676,  2249,     0,     0,  2180,  2701,  2636,  2637,  2638,  2635,
    2181,  2644,     0,  2668,     0,  1985,   338,  1122,  1147,  1130,
    1123,  1147,  1255,  2159,  1901,     0,     0,     0,  2741,  2742,
    2740,  2073,     0,  1254,  1864,     0,  1723,  1726,  1728,  2977,
       0,     0,     0,  2972,     0,  2978,     0,     0,  2153,     0,
       0,     0,     0,     0,  2902,     0,     0,     0,     0,     0,
       0,     1,    10,     0,     0,  1284,  2184,  2612,     0,  2183,
    2182,  2188,  2190,  2838,  2859,  2865,     0,  1124,  1139,     0,
       0,     0,  1220,  1263,  1224,     0,  2898,  1755,  1747,     0,
    2898,  1755,  1231,  1746,  1233,  1894,  1887,  2012,  2356,  1882,
    2013,     0,   956,  1024,     0,   960,     0,     0,  2745,     0,
     958,     0,  1979,  1031,     0,     0,   985,     0,     0,  2938,
     962,     0,  2882,     0,  1204,  1215,  1590,   289,     0,   121,
     123,  1161,  1819,  1180,     0,  2888,     0,     0,     0,     0,
    2934,     0,     0,     0,   472,     0,   901,   904,     0,     0,
       0,   903,   906,     0,     0,   620,  2938,  2938,  2912,  2932,
       0,     0,  1716,  1376,  1716,  1716,  1716,  1599,     0,     0,
       0,     0,     0,     0,     0,  1716,     0,  1417,  1390,     0,
    1418,     0,     0,     0,  2144,     0,     0,     0,  1373,     0,
       0,  1590,     0,  1567,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1594,  1596,  2153,  1716,     0,     0,  1716,
       0,     0,     0,     0,     0,  1289,   832,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1716,  1716,
       0,     0,  1716,  1431,  2146,     0,     0,     0,  2145,     0,
       0,     0,  2138,  2137,  2120,     0,  1434,  1436,  1435,     0,
    1716,  1716,     0,     0,     0,  1716,  1716,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1366,
    1365,  1367,     0,     0,  2903,     0,  2683,  1563,  1565,     0,
       0,  1339,  1338,     0,  1337,  1336,  2173,     0,  1278,     0,
       0,  1283,  1282,  1344,  1345,  1346,  1347,     0,  1348,  1349,
    1350,     0,     0,     0,     0,     0,     0,  1341,  1340,     0,
       0,     0,     0,  1320,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1368,     0,     0,  2168,  2121,     0,     0,
    1475,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1827,     0,     0,     0,     0,     0,     0,     0,  1823,   114,
       0,     0,  2781,  2773,  2811,  2810,  2815,     0,  2812,  2808,
    2816,  2817,  2801,     0,  2787,  2805,     0,  2789,  2807,  2806,
    2786,  2802,  2809,  2788,     0,  2784,  2776,     0,     0,  1712,
    2750,     0,     0,   120,     0,  1111,  1845,     0,  2991,  2988,
    2069,     0,  2080,  2081,  2077,     0,     0,     0,     0,     0,
    1978,  1977,     0,     0,  2064,  2897,  1196,     0,     0,     0,
    1846,     0,     0,  2049,  2056,  2054,  2058,  2048,  2051,   327,
       0,     0,   357,  2767,     0,     0,  2776,  2891,  2888,  1247,
    1258,   835,     0,     0,   838,  2700,  1865,  1866,   847,     0,
     837,     0,     0,     0,     0,     0,  2646,  2710,  2707,  2706,
    2659,  2654,  2653,  2192,  2834,  2652,     0,  2687,     0,   842,
     844,   843,  2697,   841,     0,     0,  2600,  2647,  2668,     0,
       0,  2645,     0,     0,   836,  1997,     0,     0,  1997,     0,
    1755,  1981,  1986,  1984,     0,  2680,  1949,  2681,  1977,     0,
    1925,  1948,     0,  1902,  1941,     0,  2682,     0,  1980,     0,
    1755,  1997,  1997,  1997,  1997,  1997,     0,  1997,  1918,     0,
       0,     0,     0,     0,     0,   333,  1152,  1151,  1126,  1148,
    1149,     0,     0,  1129,  1131,  1132,   197,  1899,  2989,  2990,
    1871,     0,  1724,     0,     0,     0,  2124,  2123,  2974,  2122,
    2982,  2984,  2968,     0,  2971,  2970,  2979,     3,     0,     0,
     561,     4,     6,     0,     0,  1223,  1240,     0,  1239,    11,
     106,  2191,     0,     0,     0,     0,     0,     0,     0,  2856,
       0,     0,  1006,     0,     0,     0,     0,     0,  1159,     0,
    1155,  1154,     0,  1127,  1141,  1268,  1267,  1270,  2324,     0,
       0,  1799,  1793,  1796,  1795,     0,  1262,  1226,  1225,     0,
    2900,  2899,     0,  1227,  1756,  1764,  1765,  1763,  1757,  1758,
    1762,  1761,     0,  1229,  1755,  1755,  1232,  1898,  1897,  1896,
       0,  1894,  1110,     0,     0,  2002,  2003,  2004,  2005,  2006,
    2001,  2000,  2014,  2015,  2936,  2937,  2935,   849,  2930,   273,
    2747,     0,     0,   273,     0,     0,  1867,  1867,     0,  1867,
    1867,   540,     0,   539,  1867,   626,   493,   495,   496,   497,
     498,   499,   500,   501,     0,  1108,  1867,  1108,     0,  1867,
    1867,  1108,  1867,     0,     0,  1867,  1867,  1867,  1867,     0,
       0,   850,  1867,     0,     0,  1108,     0,  1867,     0,  1092,
       0,     0,  1867,  1867,  1867,  1867,  1867,  1108,     0,     0,
    1867,  1867,     0,  1118,     0,     0,  1867,  1867,  1867,  1867,
       0,  1867,  1867,     0,  1867,     0,     0,  1867,  1053,  1054,
    1867,  1064,   622,   650,   651,     0,   954,   955,  1025,  1027,
    1096,  1033,  1032,  1061,  1066,  1094,  1095,     0,  1824,  3003,
     966,     0,     0,   965,  2938,  1175,     0,     0,   892,   891,
       0,     0,  1215,  1206,  1592,     0,  1591,   271,     0,     0,
    1163,  1162,     0,  1160,  1188,  1187,  1185,     0,  1186,  1184,
    1179,  1181,  1182,  2887,     0,     0,  2889,  2893,     0,   205,
       0,     0,     0,     0,     0,   620,     0,   474,     0,   905,
    2846,  2857,   221,   203,     0,   907,     0,   931,     0,     0,
     620,     0,     0,     0,  2926,  2914,  2921,  2922,  2925,  2924,
    2923,     0,  2920,  2913,  2916,  2917,  2919,  2918,  2938,     0,
       0,  1717,  1716,     0,     0,     0,     0,     0,     0,  1600,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1285,
       0,   782,  1441,     0,     0,     0,     0,     0,  1688,  1689,
    1690,  1691,  1699,  1692,  1693,  1694,  1701,  1706,  1695,  1696,
    1702,  1703,  1704,  1697,  1705,  1700,  1698,  1707,     0,  1687,
       0,     0,  1711,  1708,  1710,  1709,     0,  1568,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1716,     0,     0,     0,  1716,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1451,     0,     0,     0,     0,     0,  1716,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1413,     0,  2156,
    2155,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1514,     0,  1514,     0,     0,     0,     0,     0,
       0,  1370,     0,     0,     0,     0,     0,     0,     0,  1274,
    1281,  1280,  1287,  1286,  1288,  1292,  1297,  1290,  1294,     0,
    1351,  2261,  1299,     0,     0,  1332,     0,  1302,  1312,  1333,
    1316,  1323,  1324,     0,  1319,     0,  1321,  1322,     0,  1326,
       0,  1325,  1329,  1330,  1331,  1334,     0,     0,     0,     0,
    1358,  1364,  1384,  1385,  1279,     0,  1476,  1477,  2149,  2157,
    1803,  1810,  1805,     0,  1827,  1807,  1815,  1823,  1831,  1832,
    1812,   626,  1829,  1811,   502,  2832,  1808,  1112,  1818,  3016,
    1816,     0,     0,   113,     0,     0,     0,     0,  2033,  2035,
    2043,  2034,     0,  2042,     0,  2036,  2044,  2037,  2041,  2040,
    2039,  2038,  2017,  2020,  2026,  2045,     0,     0,   358,   362,
     364,     0,   367,     0,  2804,  2863,     0,     0,  2785,  2778,
    2779,  2777,     0,  2818,  2783,  1713,     0,  2749,  2353,  2456,
       0,  1718,  2160,  2993,     0,     0,     0,     0,  2078,     0,
    2730,  2727,  1712,  2729,  2733,  1190,     0,   109,   110,     0,
       0,     0,     0,  1195,  1199,     0,  1165,  1628,  2053,  2061,
    2059,     0,   325,   350,   345,   353,   347,   349,   348,   354,
     355,   356,   351,   346,   352,   339,     0,     0,     0,     0,
    2765,     0,  2892,     0,  2894,     0,  1718,  1248,  1247,     0,
       0,     0,  2703,     0,  2699,  2698,     0,   982,  2170,   982,
       0,  2712,  2713,     0,  2704,     0,  2705,     0,  2658,     0,
       0,  2661,     0,     0,     0,     0,     0,     0,     0,  2702,
    2667,  2666,     0,  2669,  2670,     0,  2673,  2721,  2722,  2719,
    2725,  2720,  2723,  2724,  2718,  2694,  1993,     0,     0,  1999,
    1947,     0,   620,     0,     0,     0,     0,     0,     0,     0,
    1919,     0,     0,  1940,  1991,  1992,  1997,     0,  1990,     0,
    1997,     0,  1958,  1981,     0,  1997,  1914,     0,     0,  1906,
    1911,  1907,     0,  1913,  1912,  1915,  1903,  1904,  1993,  1930,
     197,  1981,  1939,  1960,  1964,  1963,  1962,  1961,  1952,  1946,
    1929,  1936,  1944,  1981,   897,   896,   895,     0,     0,  1981,
    1997,  1997,     0,  1136,  1137,     0,     0,     0,  1125,  1876,
    1875,     0,  1872,  1874,  1863,  1725,     0,  1730,     0,     0,
       0,  2969,  2985,  2967,  2973,  2980,  2981,  2966,  2157,     0,
     562,     0,     0,   565,     0,     0,  1867,  1241,    12,     9,
    1014,     0,     0,  2189,     0,     0,     0,     0,     0,     0,
    2869,  2867,     0,  2868,  2866,  2823,  2838,  2860,     0,   986,
       0,     0,     0,     0,     0,     0,     0,     0,   197,     0,
    1143,     0,     0,  1273,  1270,  1264,  1271,  2169,  1798,   839,
    1794,     0,     0,  1751,  1748,  1750,  1237,  1235,     0,     0,
    1238,  1236,  1228,  1230,     0,     0,  1821,  1892,  1895,     0,
    2011,     0,   849,   615,   618,   617,   619,     0,   961,     0,
       0,     0,   959,     0,     0,   491,  1868,     0,     0,   491,
       0,     0,     0,     0,   627,  1979,  1867,  1109,   948,   893,
    1191,   893,  1070,     0,   948,     0,     0,     0,     0,     0,
       0,  1191,     0,     0,     0,     0,     0,  1191,     0,     0,
       0,     0,     0,  1867,     0,  1079,     0,  1035,     0,     0,
       0,     0,     0,     0,     0,  1080,     0,     0,     0,  1036,
    1867,     0,     0,     0,     0,     0,     0,  1191,     0,     0,
       0,  1191,  1121,     0,  1120,  1119,     0,     0,  1191,  1191,
       0,     0,     0,     0,   656,   657,     0,     0,     0,     0,
    1057,  1058,     0,     0,   623,  1867,  1867,     0,  1029,  1026,
     849,   849,     0,  1867,  3011,  1015,     0,     0,   963,     0,
       0,  1172,  1208,  1202,  1207,  1205,  1215,     0,  1678,     0,
     291,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   197,   153,   184,     0,     0,     0,     0,     0,     0,
       0,   197,   125,  1820,  1189,  1183,  2886,  2890,   621,   849,
       0,     0,     0,     0,     0,     0,   473,     0,   476,     0,
       0,     0,     0,  2865,  1867,     0,     0,     0,     0,   932,
     849,     0,     0,     0,   272,  2961,     0,  2915,     0,  1437,
       0,  1525,  1575,  1525,  1525,  1525,     0,     0,     0,     0,
       0,  1438,     0,  1388,  1439,  1440,     0,     0,     0,  1525,
       0,   783,     0,     0,  1391,  1392,  1381,     0,     0,  1460,
       0,  1571,  1393,     0,     0,     0,     0,     0,  1461,  1595,
       0,  1597,  2157,     0,  1525,  1445,  1398,     0,  1525,     0,
    1399,  1462,  1463,  1464,     0,  1466,     0,  1447,     0,     0,
    1450,     0,     0,  1401,  1525,  1525,     0,     0,     0,     0,
    1525,  1403,     0,     0,     0,  1402,     0,     0,     0,     0,
       0,     0,     0,  1405,     0,  1382,  1525,  1525,  1453,     0,
       0,  1455,     0,  1414,  1716,  1525,  1562,     0,  1506,  1505,
    1519,     0,     0,  1519,     0,     0,     0,  1507,  1504,  1503,
       0,  2684,  2685,  2686,   950,  1564,  1374,  1293,  1298,  1291,
    1295,  1300,     0,     0,     0,  1311,     0,     0,     0,     0,
       0,  1303,  1314,  1317,  1479,  1467,     0,  1590,     0,     0,
    1097,  1814,     0,  1979,  1813,   503,   504,   506,     0,  1114,
    1113,  1809,  3017,  1806,  1112,     0,   115,   117,  2031,  2028,
    2027,  2029,   197,  2030,     0,  2046,  2018,  2312,  2598,  2599,
     371,     0,   343,   342,   344,   368,     0,     0,  2776,  2862,
       0,     0,  2827,  2830,     0,     0,     0,  2771,  1715,  2760,
    2756,  2761,  2763,  2759,  2762,  2764,  2757,  2758,  1718,     0,
    1755,  1719,  1628,  2987,  2992,  1210,  1211,  1215,     0,     0,
       0,   111,  1790,  1791,  1785,  1787,  1784,  1786,  2066,  1788,
    1789,     0,     0,  2065,     0,  1197,     0,     0,  1170,  1169,
    1171,  1164,  1166,  1167,     0,     0,  1629,     0,  2057,  2060,
     197,  2050,     0,     0,     0,  2776,     0,     0,  2895,  1250,
       0,     0,     0,     0,  1249,  1251,  1252,  1605,  1604,  1635,
    1632,  1631,  1634,  1633,  1636,  1628,  1712,  1737,  1718,     0,
       0,     0,   846,   848,   845,     0,     0,     0,  2836,  2836,
       0,     0,  2717,  2709,  2711,  2708,  2660,  2193,  2835,     0,
    2690,  2691,  2692,  2688,  2689,     0,  2695,  2693,     0,  2672,
       0,  1995,  1998,  1720,     0,     0,  1972,  1966,  1965,  1956,
    1967,  1973,  1957,  1976,  1975,  1974,  1927,  1926,  1922,  1982,
    1971,  1969,  1950,  1997,  1970,  1968,  1908,  1909,  1910,     0,
    1755,     0,  1995,  1959,  1997,     0,  1997,     0,     0,  1997,
    1943,  1945,  1150,  1134,  1133,     0,  1870,     0,  1729,     0,
    1727,  2975,  2983,     0,     0,     0,     0,     0,     0,     0,
       0,   567,     0,   563,     0,     0,   978,   982,     0,   979,
     980,   981,  2839,  2170,     0,  2836,  2852,  2826,  2825,  2824,
    2821,     0,     0,     0,     0,     0,  1007,  1009,     0,     0,
       0,     0,   975,   987,   988,   193,  2165,  1782,  1783,  1781,
    1779,  1780,   194,   195,  1772,  1773,  1769,  1770,  1768,  1771,
     196,  1158,  1157,  1156,  1140,  1128,     0,     0,  1145,  1269,
    1272,  1265,     0,  2086,  1792,  1266,  1753,  1754,  2151,  1752,
       0,  1760,  1759,     0,  1712,  2159,     0,     0,     0,  2161,
       0,  1775,  1776,  1774,  1777,  2007,  1778,   616,  1867,     0,
       0,     0,     0,     0,     0,     0,   274,   283,     0,  2746,
       0,   518,     0,     0,     0,     0,     0,     0,     0,     0,
     228,   525,   969,   626,   530,   543,   544,   541,   970,   529,
     531,   971,   542,   494,     0,   693,   949,   894,   948,  1037,
     948,     0,     0,     0,   696,   948,   893,     0,   928,   949,
     692,     0,  1103,  1102,  1104,   694,   694,     0,     0,     0,
     639,   633,     0,   645,  1059,  1180,  1060,  1685,     0,   635,
     636,   637,   658,     0,     0,   647,     0,  1077,  1078,     0,
    1040,  1075,  1076,  1112,   628,     0,     0,     0,   672,   673,
     671,   652,   659,  1106,  1105,  1107,   631,   632,     0,     0,
    1093,  1744,  1751,   661,   640,   660,   634,     0,     0,     0,
    1087,  1048,     0,   670,   668,   665,   667,   666,   669,   648,
     641,   642,   644,   643,   655,   646,  1047,  2045,   629,   630,
     638,     0,     0,  1030,  1108,  1108,  1065,  1062,  1063,  1028,
    1034,  1067,   526,   527,   502,     0,  1867,  3013,     0,  1017,
    1019,  2939,  2940,  1728,     0,     0,     0,  1681,     0,  1682,
    1679,  1680,     0,  1593,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   122,     0,     0,     0,     0,     0,
       0,     0,     0,   124,   206,   849,     0,   507,     0,     0,
       0,   216,     0,  1867,  1867,  1867,  1867,   210,   626,   478,
     480,   481,   482,   483,   484,   487,   485,   488,   486,   489,
     490,   502,     0,     0,     0,  2858,  1006,     0,     0,     0,
     227,   226,   937,   939,   938,   934,   933,     0,     0,  2085,
       0,  2084,   692,   200,   546,   548,   551,   549,   626,   624,
    1856,  1858,   553,     0,     0,   237,  2956,     0,     0,   468,
     467,     0,     0,     0,  1525,  1482,  1526,  1484,  1485,  1488,
       0,  1601,     0,  1378,   795,   795,   779,  1583,   775,   767,
     773,  1587,     0,   751,   765,  1579,   779,  1581,   795,  1588,
    1386,     0,     0,     0,  1525,  1490,  1525,     0,     0,     0,
       0,     0,     0,  1569,     0,     0,     0,  1383,     0,  1471,
    1525,  1494,  1525,  1492,     0,     0,     0,     0,     0,     0,
       0,  1498,  1496,     0,     0,     0,     0,  1525,  1500,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1497,  1499,     0,     0,     0,     0,     0,  1486,  1533,  1527,
    1528,  1529,  1530,     0,     0,     0,  1517,  1517,  1519,     0,
    1519,     0,  1508,  1371,     0,  1566,  1309,  1304,     0,  1313,
       0,  1328,  1327,     0,     0,     0,  1478,     0,  2150,  2158,
    1804,  1802,  1099,  1098,  1817,  1830,  1979,  2833,  1801,   118,
       0,  2032,  2025,  2021,     0,   363,   372,   365,   369,   370,
     366,     0,  2864,  2872,     0,     0,     0,     0,  1755,     0,
    2751,     0,     0,  1215,  1217,  2082,     0,  2736,  2737,  2735,
    2734,  2068,  2067,     0,  1200,  1201,  1168,     0,     0,  1860,
    1859,     0,  1836,  1838,  1847,  1850,     0,  2062,  2055,     0,
     340,     0,     0,  2770,     0,     0,  1712,     0,  1605,  1635,
    1632,  1631,  1634,     0,     0,     0,     0,  1618,  1626,  1624,
    1626,  1621,     0,     0,     0,  1712,  1728,     0,  1721,  1737,
    2657,  2656,  2655,   982,   982,   983,     0,  2649,  2648,  2715,
    2714,  2716,  2663,   626,  2662,     0,  2671,  1994,     0,  1931,
       0,  1955,     0,  1924,     0,  1942,  1905,  1933,  1923,  1953,
    1921,  1981,  1981,  1920,     0,   198,  1873,  1731,     0,  2986,
       5,     0,     0,     0,     0,   566,     0,   576,     0,     0,
       0,     0,  2994,  2836,   982,     0,  2836,  2849,     0,     0,
    2822,  1012,  1010,  1011,  1013,  1008,   991,   990,   992,     0,
       0,     0,  1005,  1004,  1003,   989,  1142,     0,     0,  1138,
     840,     0,  2094,  1749,     0,  1628,     0,  1718,  1822,  1893,
    1892,     0,     0,   277,   280,   278,     0,   279,     0,     0,
       0,   528,   968,   626,   520,   522,   523,   524,   232,   231,
     233,   234,   236,   235,   230,   974,     0,   537,     0,     0,
       0,     0,     0,   948,   889,   695,     0,   690,   697,     0,
     890,     0,     0,     0,     0,   678,   680,   681,     0,   764,
     718,   709,   795,   712,   711,   857,   779,   723,   770,     0,
     772,   769,   744,   743,   760,   742,   747,   731,   857,   857,
     730,   763,   857,   748,   746,   750,     0,   751,   771,   756,
     745,   749,   741,     0,   762,   795,   779,   779,   727,   761,
     857,     0,   754,   795,   683,   799,   729,   864,     0,     0,
     795,   797,   775,  1085,  1086,   936,   935,  1084,     0,     0,
    1043,     0,  1044,     0,  1046,   847,   847,   653,  1051,  1074,
    1073,     0,  1052,   654,  1115,  1042,     0,  1745,  1041,     0,
       0,     0,  1165,     0,   663,   662,   973,  3007,  3004,  3005,
       0,  3015,  3014,  3016,     0,     0,     0,   242,  2941,     0,
       0,  1214,  1216,     0,  1203,   185,   181,   157,   161,   163,
     155,   159,   160,   162,   166,   167,   165,   169,   170,   173,
     174,   171,   164,   172,   158,   177,   175,   176,   156,   179,
     180,   190,   182,   189,   192,   168,   191,   183,   154,     0,
     127,   128,     0,   129,   130,     0,   131,   132,     0,   133,
     126,     0,  1867,  1867,   209,   626,   509,   511,   512,   513,
     514,   517,   515,   516,   216,     0,     0,   215,     0,     0,
       0,     0,     0,  1979,   211,     0,  2840,  2842,   222,   986,
    3001,  3002,  3003,   213,     0,   552,   201,     0,     0,   547,
     545,   849,  1857,   550,     0,     0,   292,   676,   677,   675,
     674,     0,  2962,   471,   469,   470,     0,     0,  1415,  1483,
    1602,     0,     0,   796,  1576,   857,     0,  1585,     0,  1586,
     777,   776,   768,   766,  1589,   774,   752,  1580,  1584,  1582,
    1578,  1387,     0,  1389,  1380,  1379,  1491,  1489,     0,     0,
    1421,  1443,     0,  1422,     0,     0,     0,     0,     0,  1395,
       0,  1397,     0,     0,  1473,  1495,  1493,  1446,  1465,  1424,
    1448,     0,  1400,  1372,     0,  1425,     0,  1430,  1428,     0,
    1501,  1404,     0,     0,  1411,     0,  1409,     0,  1410,     0,
    1412,  1452,  1454,     0,     0,     0,     0,  1525,  1534,     0,
    1535,  1521,  1520,  1511,     0,  1516,  1515,     0,  1512,     0,
    1522,   951,     0,  1308,  1310,  1306,     0,  1315,  1468,  1101,
    1100,   505,   116,  2023,     0,  2019,     0,     0,     0,     0,
    2775,  2829,  2828,  2831,  2870,  2819,  2752,     0,     0,  1877,
    1879,  1212,  1215,  1217,     0,  1213,     0,  2083,  2738,  2739,
    1198,     0,  1684,  1837,  1885,     0,     0,     0,  1854,  2148,
    2147,  2155,  1871,  1855,  1862,     0,     0,     0,  2766,     0,
    1728,     0,  1643,  1637,  1639,  1640,  1642,     0,     0,  1605,
    1604,  1253,  1620,  1619,  1627,     0,  1625,  1626,  1626,     0,
       0,  1614,  1613,     0,  1675,  1644,     0,     0,  1732,  1721,
    2836,  2836,     0,     0,  2696,  1996,  1755,  1938,  1937,  1951,
    1916,  1755,     0,  1718,  1997,     0,  2976,     0,   572,   559,
       0,   557,   561,     0,   554,     0,     0,   570,     0,   977,
    2836,  2836,     0,  2850,  2172,  2171,  2836,     0,  2836,   995,
       0,   994,  1000,   997,   996,     0,  1144,     0,     0,     0,
       0,     0,  2087,  2089,     0,  1797,  1718,  1718,  2160,  1890,
       0,  2162,  1718,   664,   282,   281,   287,   288,  2748,  1979,
     229,     0,  1039,     0,     0,   578,     0,     0,     0,   698,
       0,     0,   946,     0,   945,  1751,   929,   930,  1069,   692,
     683,   717,   710,   728,   851,   862,   860,   854,   753,   857,
       0,   858,   859,   714,   726,     0,   737,     0,   732,   857,
     740,   736,   752,   755,   757,   759,     0,   857,   725,   724,
     734,   721,   784,     0,  1115,   684,   809,     0,     0,     0,
       0,  1340,   803,     0,   869,     0,     0,   812,     0,   814,
       0,   823,   699,   800,   802,   701,     0,     0,   865,   864,
     716,   857,   864,   784,     0,   798,   784,   784,  1083,     0,
    1115,  1686,  1091,  1090,     0,     0,  1117,  1072,  1743,  1089,
    1088,     0,  1045,   649,     0,     0,  3009,     0,  3012,   984,
       0,   252,     0,     0,  1016,     0,   245,   243,   254,     0,
    1177,  1173,  1683,     0,   186,   188,   134,     0,   136,   138,
     143,     0,   145,  2194,     0,   148,     0,   150,  2166,   152,
       0,   139,     0,     0,     0,     0,  1979,   214,     0,     0,
       0,     0,     0,     0,   475,   536,   532,   538,   535,   479,
    2841,     0,     0,   208,  3011,     0,     0,   849,   625,     0,
       0,     0,   293,   295,     0,     0,   302,     0,     0,  1603,
       0,     0,     0,     0,  1577,     0,     0,  1377,     0,     0,
       0,  1572,  1574,  1570,  1525,     0,     0,     0,     0,     0,
    1375,     0,  1469,     0,     0,     0,     0,     0,     0,  1408,
    1406,  1407,   866,  1457,  1456,     0,  1487,  1531,     0,  1537,
    1518,  1510,  1509,     0,  1519,  1305,     0,     0,     0,   380,
     375,   383,   377,   379,   378,   384,   385,   386,   387,   381,
     376,   382,   374,   373,     0,     0,     0,  2879,  1718,  1877,
       0,  1879,     0,  1835,  1209,  1218,     0,  1630,     0,     0,
    1848,  1851,     0,     0,     0,     0,     0,   341,  2769,     0,
       0,  1645,  1253,  1606,  1622,     0,     0,  1615,  1623,     0,
       0,     0,     0,  1669,  1670,     0,     0,  1673,  1676,  1677,
    1641,  2152,  1741,  1740,  1722,     0,  1246,  1732,  2651,  2650,
    2837,  2664,  1932,   197,  1954,  1935,  1928,  1135,   560,     0,
     558,     0,     0,   556,   564,     0,   571,     0,   976,  2847,
    2836,  2853,  2836,     0,  2854,     0,  1001,  1002,   999,     0,
    1146,     0,     0,     0,     0,  2088,     0,     0,  2095,  2097,
    1891,  1746,  1746,   521,     0,   581,  1038,     0,     0,   691,
       0,     0,     0,   919,     0,     0,   942,   679,   682,   853,
     852,   856,     0,   855,   713,   864,     0,   952,   733,   758,
       0,   735,   788,   789,   790,   722,   785,   787,   871,  1068,
     817,   824,   826,   828,   827,   818,   816,     0,     0,     0,
       0,     0,     0,   833,   806,   834,  2126,     0,     0,   829,
     830,   831,   820,   813,   821,   815,   822,     0,   801,     0,
       0,   811,   804,   805,   715,   719,   720,   706,     0,   707,
     708,     0,  1081,  1071,  1055,  1116,     0,  3008,  3006,  3010,
     253,   241,     0,     0,  1018,  1020,     0,     0,  1021,     0,
       0,  1176,   178,     0,   135,     0,   144,     0,     0,   149,
       0,     0,   140,     0,   908,   534,   533,   510,     0,   914,
     217,   218,   220,     0,  2843,     0,  2844,  3013,     0,   202,
     199,     0,     0,  2957,     0,   847,  2955,   305,   303,   304,
       0,   298,   300,     0,     0,  1416,   793,   791,   794,   792,
     780,     0,  1419,  1420,  1444,     0,  1502,  1442,     0,  1396,
    1470,     0,     0,  1449,  1426,  1429,  1427,  1432,  1433,     0,
       0,     0,     0,  1539,  1523,  1524,     0,  1307,  2024,  2022,
    2870,  2873,     0,     0,  2772,  1755,  1879,  1728,  1833,     0,
       0,  1884,  1886,  1849,  1852,  1853,  2157,  1869,  1861,  2768,
       0,  1638,  1617,  1616,  1609,     0,  1611,     0,  1665,  1665,
    1674,  1742,     0,  1738,     0,  1733,  1734,  1245,  1934,   573,
       0,   563,   577,   555,  2998,  2851,  2855,  2836,   993,   998,
    2092,  2093,     0,  2090,     0,     0,  2096,  1766,  1766,   908,
       0,   601,   579,   914,     0,   941,   919,  1751,     0,  1867,
     685,   920,   921,   923,   924,   927,   944,     0,   863,   861,
     857,     0,   857,   786,     0,   875,     0,   819,  2128,  2127,
       0,   808,   810,   817,   702,     0,     0,  1050,  1056,     0,
     239,   244,   255,   256,   967,  2944,  2942,     0,   187,   137,
     146,   147,   151,     0,     0,     0,  1097,   909,   910,   912,
       0,  1097,   915,   916,   918,     0,  2845,   204,   919,  2954,
     250,     0,   294,   296,  2963,   302,     0,     0,     0,  1573,
       0,  1472,  1474,   867,     0,  1536,     0,  1560,  1559,  1561,
    1532,     0,  1513,  2879,  2871,  2874,  2753,  1834,  1878,     0,
    1628,     0,     0,     0,     0,     0,     0,     0,  1739,     0,
       0,     0,     0,     0,     0,  2995,  2996,  2848,  2091,  2099,
    2098,     0,  1889,  1881,   686,     0,     0,  1867,     0,     0,
    1867,  1867,  1867,  1867,   596,   602,   604,     0,   687,     0,
       0,   688,   947,   926,     0,   922,  1751,   738,   953,   739,
       0,   874,     0,   879,     0,   807,     0,  1082,  1049,   246,
    1022,   407,     0,  2943,  1174,     0,     0,     0,   224,   911,
     212,   225,   917,     0,  1097,   242,   251,     0,   275,   299,
     847,     0,   778,  1394,  1458,  1538,     0,     0,     0,     0,
    1554,  1541,  1542,     0,     0,  2774,     0,  2880,     0,   839,
       0,  1712,  1610,  1612,     0,  1666,     0,  1678,     0,  1736,
    1735,     0,     0,  1867,     0,  2999,  1767,   590,   583,   586,
       0,     0,  1867,  1867,     0,     0,     0,     0,     0,   580,
     603,  1867,   689,   940,   925,   943,   872,     0,   876,   877,
     878,     0,   870,   825,     0,     0,   248,   433,  2286,   419,
     405,     0,     0,  2468,   409,   257,   260,   258,  1882,   259,
     265,     0,   266,   267,   268,   269,   270,   261,   431,   432,
     264,   262,   263,     0,  2178,     0,  2179,  2240,  2239,  2241,
       0,     0,     0,   141,     0,   913,   219,   223,   254,   847,
    2964,   301,  2950,     0,     0,  1549,     0,     0,     0,  1547,
       0,  1543,     0,  1540,  1545,  1544,     0,  1880,  2100,  2453,
       0,  1648,     0,  1646,  1668,  1667,     0,     0,   574,     0,
       0,  3000,   590,     0,   588,     0,   584,   582,   585,   612,
       0,     0,   608,   609,   607,   605,     0,     0,   598,     0,
     873,     0,     0,   703,   247,     0,   240,     0,     0,   418,
     421,     0,     0,   424,   414,   413,   415,     0,   408,   407,
     407,   461,   412,   458,   457,   450,     0,  2945,     0,     0,
       0,  2958,   285,   284,   276,     0,   407,  2948,  2949,     0,
    2952,     0,  1550,     0,  1552,  1551,     0,     0,  1556,     0,
    1557,  2659,  2878,  2877,  2875,     0,  2086,     0,  1647,     0,
       0,   847,  1672,  1671,     0,   568,   574,  2998,   587,     0,
     594,     0,   592,   595,   610,   611,   601,   597,     0,   606,
     885,     0,   884,     0,   881,   880,   705,   704,   799,   249,
     434,   445,   448,   440,   420,     0,     0,     0,   410,   407,
       0,   394,   392,   393,   399,   400,   401,   402,   403,   404,
     395,   398,   396,   397,   407,     0,   310,     0,     0,  2946,
    2947,   142,   256,   275,   286,  2965,  2951,   407,     0,  1548,
    1546,  1555,  1558,  2876,     0,  2094,     0,  1649,  1650,  1653,
     575,   569,  2997,   589,   591,     0,   600,   599,   887,   888,
     886,     0,     0,   700,     0,     0,   407,   441,     0,   416,
       0,   425,     0,     0,   308,   464,   462,   306,   452,   452,
     238,  2959,  2953,  1553,     0,  2102,  1652,  1654,     0,   593,
       0,     0,   442,   448,   438,   446,   407,     0,     0,   406,
       0,   460,   309,     0,     0,     0,   407,     0,   451,   453,
     455,   407,  2101,     0,  2106,     0,   883,   882,     0,   439,
       0,     0,   437,   417,   422,   407,   465,   407,   319,   318,
       0,     0,   388,   459,     0,   311,  2960,     0,     0,  2113,
    1655,   443,     0,   407,     0,   407,     0,   407,     0,     0,
     847,     0,     0,   307,  2104,  2105,  2103,  2108,     0,     0,
    2110,  2111,     0,  2074,     0,  1662,  1663,  1651,  1656,  1657,
       0,     0,   435,   407,   423,   428,     0,     0,   314,   389,
     390,     0,   316,  2112,  2107,     0,  2114,  2116,     0,  1664,
    1658,     0,  1659,     0,     0,   407,   407,   424,   427,   466,
     463,     0,     0,   312,   313,   324,   323,     0,  2109,     0,
       0,     0,     0,  1661,  1660,   407,   407,   429,   332,   330,
     407,   320,   328,   322,     0,   329,   391,   317,  2115,  2117,
       0,   315,   331,   321
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -4525, -4525, -4525, -4525, -4525, -4525,    73, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525,  1592, -4525, -4525, -4525, -4525,
   -4525, -4525,  1787,  1800, -4525, -3996, -4525, -4525,  1799, -4525,
     475,  1803, -4525,   477, -4525,  1811, -4525,   482, -4525, -4525,
    -894, -2125, -4525, -4525, -4525, -4525, -4525, -4525,  1224, -4525,
   -4525, -4525,   472,  1415,  3862, -4525,   460, -4525,   179, -4525,
   -4525, -4525, -3696,    69,  -109, -4525, -4525,    22,  3385,  -107,
   -3489, -4525, -4525, -4525, -4525, -4525, -4525,   466, -4525, -4525,
     284, -4525, -4525, -1903, -4525, -4525, -4525, -4525, -4525, -4525,
    -299,  -249,  2392, -4525, -4525, -4525,  4937, -4525,  4025, -4525,
   -2616,  2232, -4525, -4525, -4525, -4525, -4525,  2300, -2532, -4525,
   -4525, -4525,  1088, -4525, -4525, -4525,   103,   209, -4525,   211,
   -4525,   218, -4525,   220, -4525,   224,   225,   226,   227, -4525,
     231, -4525, -4525,  -260, -4525, -4525, -4525, -4525,   233, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525,  -155, -4525, -4525,   -63,
   -4525, -4525,  -148,   236, -4525,  -133,   243, -4525,   244, -4525,
     -81, -4525,   -77, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525,  1249,  2684,  3942,  2690,  -885, -4525,  1660,
   -4525, -4525,   841, -4525, -4525,   987, -1434, -4525,  2547, -2410,
   -2373, -2364, -4525, -4525, -4525, -3015, -3010, -1252, -4525, -1254,
   -2363, -2357, -2229,   822,  1815,  1819,  1807,    15, -4525,  1045,
     437, -4525, -4525, -4525, -3375,    21, -4525, -3379,   663, -4525,
   -4525, -4525, -4525, -3020, -4525, -4525,   -54, -4525, -4525,    17,
      18, -4525,   298, -4525,  2598, -2143,  -560,  2654, -4525, -1878,
   -1623,   552, -1501, -1492, -4525, -4525, -4525,  1291,  1870,  1016,
   -4525,  1021, -1517,   968, -3518, -4525, -4525,  -459, -2601, -4525,
   -4525, -4078, -4525,  -606,  1484, -4525, -4525,   -64, -4525, -4525,
   -4525,  1453,  1455, -1603,  1655, -1411, -4525,   671,  1278, -1030,
   -4525,    43, -4525,   979, -4525, -4525, -4525, -2921, -4525,   -37,
   -2442,   274, -4525, -4525, -2992, -3492, -1487, -4525, -4525, -3390,
   -3720,  1780, -4525, -4525,   336, -4525, -4525, -4525, -4525, -4524,
   -4525, -1571, -2145, -4525, -4525,  2763,   478, -4525,   421,   484,
   -4525,   418, -4119, -4525,   473, -1330,  2100, -4525,  3361,  2098,
   -2335, -4525, -4006, -2285,   722, -2215, -4525,  1031, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -1996, -4525, -4525,  1359, -4525,
    2216,  1924, -4525,  2225, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525,  2719, -4525,   658,   465,  2720, -4525,  2717,
     538, -2517, -1005, -4525, -1001, -4525, -1479,  3554, -2303, -3580,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,  2928,
   -4525, -4525, -4525, -4525, -4525,  4164, -4525,  2935, -4525, -4525,
   -4525, -4525, -4525,  1478, -4525,  2399, -4525, -4525, -4525, -4525,
   -4525,  2119,  3421, -4525, -4525,    46, -4525, -4525, -4525, -4525,
    2409, -4525, -4525,  3449,  2026, -4525, -4525,  1765,  2439, -1632,
    1244, -1038,  5098,    10,    44,     8,   526, -4525,  3083, -4525,
   -4525, -2138, -4525, -4525, -4525, -4525,  4236,  -951,  -995, -4525,
   -4525,  2904, -4525,  4238,  3955,  3221,  -295,  4920, -4525, -1212,
   -4525,   -53, -4525, -4525,  -795, -4525, -4525, -4525,  -581, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
    2534, -4525, -4525, -4525,  3282,  1854, -2524, -4525, -2348, -1780,
   -4525, -2422,   454, -4525, -4525, -4525, -4525, -4525, -4525,   480,
   -4525,   181, -4525, -4525, -4525, -1940, -4525, -4525, -4525, -4525,
   -4525,  -756,  2659, -1047, -1034, -4525,  4048, -4525, -4525, -4525,
   -2662, -4525, -2541, -4525, -4525, -4525, -4525, -2878, -2640, -4525,
   -2192,  2433,  2438,  2442,  2443, -4525, -4525,    93, -4525,   189,
   -4525, -4525,   -21,   -26, -2238,   614, -4525,   873, -4525, -4525,
   -4525,   380,  1526,   384, -2018, -2298, -1131,  1858, -4525, -4525,
   -2009,  4088, -1964, -1975,  1241,     3,  4229,  3734, -3017, -4525,
     881, -4525,   489,  1789,   669, -4525, -4525,  1570, -1023,   -90,
     524, -2977, -4525, -1022,   -88, -4525, -2235,   613, -2019, -2209,
   -2187, -1998, -1988, -4525, -4525,  2951,  -244, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525,  -469,   153,  -572,  5217,  3270,
   -4525,  2582,  4188,  4189, -4525, -4525,  3903,  1855,  1861, -4525,
   -3547, -2677, -4525, -4525, -4525,  -943,  2239,   937,  3765,  1312,
    1868, -2811,   959, -3899,  4203, -4525, -3425,   953,  4208,  4206,
   -3193,  3691, -4525, -4525, -4525, -4525, -4525,  2419, -4525, -4525,
   -4525, -4525, -4525, -4525,  3098,  4291,  -958, -1970, -4525, -4525,
   -4525,   911,  3090,  2424, -1307, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,  2587,  2182,
   -4525, -4525, -4525, -4525,  3202, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525,  1887,   255, -4525,  1251,   187, -4525,   898, -4525, -4525,
   -4525, -4525, -4525,    42, -4525, -4525,    19, -2466, -1036, -1024,
    1150, -1946, -2559, -4525,   977, -3243, -2861,   691,  -695, -1169,
   -1149,    55,  2337,  3899, -1528, -4525,  4559,  -800, -1497, -2179,
    1084,  4056,    -6, -4525, -2993, -4525,   -55,   102,  2137,   -27,
    3176, -3562, -4525,    -9,     2, -4525,   430,   261, -4525, -4525,
     344, -4525, -4525, -4525,   279, -4525, -4525, -4525, -4525,  3873,
   -4525,  2484,  5250, -4525, -4525, -4525,  3170,  5251,  -823,  3880,
    3192, -4525,  3203, -4525, -4525, -4525, -2002, -4525, -4525, -4525,
     208, -4525,  2588, -4525, -4525, -4525, -4525, -4525, -4525, -4525,
   -4525, -4525, -4525, -4525, -4525, -4525, -4525, -4525, -1264,  4378,
    5266,  3979, -4525, -4525,  2418, -4525, -1930, -1300, -1081, -2538,
   -4525,  2818,  3792, -4525, -4525,  1706, -4525,  2819,   751, -4525,
   -4525,   601, -4525, -4525,  1775,  4391,  3938, -4525, -4525, -4525,
   -4525, -4525,  4282, -4525,   -29,    -1, -4525,  -332, -4525, -4525,
   -4525,   115,  5306,  5307, -4525, -4525,   184, -4525,  -792, -4525,
   -4525, -4525, -4525, -4525,  4225, -4525, -4525,  4226, -4525, -4525,
   -4525, -4525,  4227, -4525, -4525, -4525, -4525, -4525, -4525,  1626,
   -4525, -4525, -4525, -4525, -4525, -4525,  -564, -4525, -4525, -4525,
     309, -4525,  1565, -4525,  1180, -4525,  1138,   834,  1670
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    64,    65,  1013,  2239,    66,    67,    68,    69,    70,
    2047,    71,  1299,  1983,  2666,  2667,    72,   884,    73,  1708,
    1709,  2471,  2472,  3720,  4167,  4168,  3729,  4182,  3723,  4171,
    4172,  3726,  4176,  4177,  2461,  2462,  4163,  4164,  3712,  3715,
    2463,  2208,    74,    75,    76,    77,  2479,    78,  3747,  2493,
      79,  3199,  2979,  2980,  1754,  3775,  4154,  4779,  4158,  4866,
    4966,  4795,  3109,  4478,  4780,  4781,  4875,  2503,  2308,  4910,
    2966,  4994,  2967,    80,  1077,  4211,  4212,  4213,  4520,  4521,
    4522,  4523,  5156,  5059,  5127,  5157,  5251,  5257,  5180,  5270,
    5271,  5272,  5255,  1370,  5273,    81,   918,   919,  1372,  2075,
    2680,  2076,    82,    83,   846,  2008,  2009,  2010,  2011,  3370,
    2681,  3365,  3366,  4282,  5181,  5253,  5060,  5061,  4973,  5062,
    4878,  5063,  4977,  5064,  4881,  5065,  5066,  5067,  5068,  5148,
    5069,  4972,  5173,  5056,  5057,  5150,  5225,  5248,  5070,  4888,
    4967,  5114,  4889,  4968,  5143,  5052,  5144,  5168,  5221,  5053,
    5115,  5171,  5118,  5071,  5077,  5158,  5072,  5078,  5073,  4893,
    4984,  5076,  4982,  5075,  5154,  5153,  5196,  3231,  3786,  1737,
    2488,  3177,  3178,  3179,  2982,  2983,  1606,  2654,  2655,  2656,
    3734,  3735,  3736,  3542,  3543,  3544,  2315,  3104,  2971,  1607,
    1608,  1609,  3183,  3738,  3739,  3184,  3185,  1610,  3187,  1611,
    1612,  1613,  2984,  3213,  3214,  3215,  3216,  3217,  2233,  2234,
    3490,  2871,  3487,  4355,  3987,  5025,  3994,  4044,  4045,  4621,
    4947,  4838,  4943,  4839,  4945,  5031,  5032,  4849,  4957,  4958,
    4754,  4755,  4756,  3164,  2302,  2303,  1087,  1671,  3218,  2325,
    1672,  3064,  1673,  1674,  2306,  3079,  3051,  3781,  3574,  3575,
    3576,  4094,  3577,  3004,  2333,  3566,  3567,  4111,  3624,  4450,
    5048,  3625,  3626,  3627,  3628,  3629,  3630,  3631,  3803,  3632,
    3804,  3799,  3800,  3797,  1130,  4415,  4416,  4417,  3793,  3794,
    4126,  4112,  4113,  4114,  4647,  4425,  4442,   793,  4434,  4070,
    1388,  2933,  1411,  1412,  2783,  2094,  1675,  4071,  4072,  4073,
    4120,  3864,  4549,  4116,  4095,  4645,  4770,  4773,  4862,  5044,
    3005,  1701,  2998,  2197,   666,   667,  4676,  4677,  4678,  4681,
    4682,  4683,  4630,  4631,  4632,  4633,  3007,  2498,  4634,  4635,
    3205,  4624,  4052,  4053,  4054,  3008,  3335,  4406,    84,    85,
    1587,    86,  1593,    87,  1589,    88,  1694,  1069,    89,  2415,
      90,    91,    92,    93,    94,  2788,    95,    96,  2902,  2903,
    2904,  2259,  2896,  2897,  1018,  3110,  3677,  4664,  1052,  1676,
    1677,  2409,  1678,  1679,  4657,  1680,  3025,  1681,  1682,  1683,
    1684,  3351,  3352,  3013,  3353,  3054,  2335,  1336,  2661,  4137,
    2387,    97,    98,    99,  1027,  2268,   100,  1473,  1474,  1475,
    1533,  1534,  2270,  2928,  3519,  1468,  1469,  1470,  1028,  1531,
     101,  1713,   102,  2741,  2742,  2743,   103,  4481,  2421,   104,
     105,  1720,  1721,  1722,   106,   193,   107,  1358,  1356,  2053,
    2054,   108,  1073,  1074,  2423,   109,  2715,  2716,  1702,  1703,
    3915,   110,   111,  3220,   113,   794,   115,   116,  2086,  2087,
    2764,  2765,   117,   118,   935,   936,   937,  1032,  1033,  1537,
    2274,  2275,  2276,   795,   796,  1238,  1127,  1704,   798,   799,
    1935,   800,  1239,  1240,  4117,   801,  1251,  1923,   802,  3812,
     803,   804,   805,   806,   807,  3833,  3834,  4242,  1955,  1956,
    1957,   808,   809,   810,  2612,  3875,  3325,  4264,  3235,  3236,
    3319,  4594,  3321,  3869,  3870,  4259,  4553,  4710,  4810,  4915,
    4812,  4916,  4923,  4711,   811,   812,  1227,  1828,  3826,  3273,
    4231,  1773,  3260,  1705,  1706,  1152,  1153,  1118,  2519,  1779,
    2766,  3948,  2767,  3432,  3433,  3434,  3959,  3955,  2745,  2746,
    2768,  2769,  2770,  2771,  2772,  2773,  2774,  4722,  4930,  4931,
    5138,  5217,  5218,  5219,  5220,  4726,  4326,  4327,  4328,  4329,
    4330,  3118,  3119,  3120,  3921,  3026,  1818,  1819,  1826,  2026,
    2027,  1774,  2710,  2139,  3968,  1010,   986,   987,  1485,  2216,
    4336,  4595,  4596,  3438,  4332,  4593,  3060,  3061,  1037,  1038,
    2284,  2938,  2939,  1553,  1554,  1558,  1559,  4742,  3065,  2955,
    2912,  2985,  2956,  2730,  1541,  1542,  1034,  1543,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,  2675,  2295,  1066,   668,  1970,
    1971,  1972,   137,   138,   889,   912,  1361,  3402,  3403,  3927,
    3404,  3222,  3406,  3933,   983,  2316,  2317,  3934,   984,  2211,
    2212,  2213,  4291,  4293,   139,   140,  3923,  3924,   913,   141,
    2949,  1570,  1571,   142,   975,  2175,  2176,  2177,  2840,   143,
     965,  1458,  3976,  3981,  2826,  1353,  1614,  2156,  1461,  1462,
    1463,  2157,  2811,  3459,  2140,   144,   145,  1580,   146,  1049,
    1581,   147,  1300,  2002,  3363,  3895,  4267,  2003,  2004,  2676,
     148,   915,  1367,  1363,  1368,  2060,  2059,  2750,  2748,   149,
     905,  1354,  2733,   150,   894,   151,   152,   898,  2039,  1344,
    3916,  3223,  3522,  4022,  4023,  4025,  4378,  4379,  5016,  5164,
    5206,  5189,  5209,  5210,  5213,  5236,  5237,   813,  1488,   814,
    4435,   815,   816,   817,  3928,   818,  2285,  4333,   819,  3925,
     820,  2775,  2296,   635,  4178,  4179,  1019,  1489,  2278,  2099,
    4006,  1241,   998,   874,  4895,   955,  1021,  1403,  1022,  1975,
    1404,  2694,   637,   638,   639,  4896,   640,   641,   878,   960,
     642,   153,   961,   154,  2108,   155,  3453,  3454,  1417,  1421,
    2123,  2124,  2125,  1464,  1906,  2117,  1418,  2126,   964,  1396,
    1397,  2106,  1398,  2104,  1399,  2793,  2135,   156,   901,  1347,
     647,  2043,  2044,  3389,   157,   980,   158,   159,   160,  1058,
     161,  2031,  2708,  2709,   162,  2078,   163,  2013,  2022,  1303,
     880,   881,  2697,  2891,  2254,  2255,  2695,  1976,  1405,  3447,
    1519,  1741,  1024,  1742,  1025,  1314,  2016,  1522,  4287,  3900,
    4817,  4564,   164,   194,   650,  1085,  1727,  2083,   165,   166,
     167,   168,  1552,   823,  2776,   824,   938,  1106,   669,  1763,
    1755,   187,   188,   189,   672,   673,   190,  1692,  1693,  4159,
    4666,  4783,  4999,  5000,  1757,  5087,  1758,  1759,  3776,  4691,
    5083,  5161,  1760,  3228,  4216,  4798,  4996,   169,  1494,  1490,
     996,  2227,  2221,  2223,   170,   171,  1339,   172,   173,  4735,
    4736,  3762,  2414,  3668,  3669,  4148,  3107,  3673,  2663
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     636,  1389,  1393,   119,   997,  1272,   953,  1460,   114,   822,
     112,  1575,   842,  1277,  1582,  1560,   883,  1833,  1743,  1563,
    1564,  1422,  1154,   876,  1041,   904,  1042,  2023,   634,  3201,
    1878,  1003,   920,  2719,   956,   925,  1969,  1546,  1968,  1922,
     920,   876,  2279,   973,  2334,   957,  3476,   981,  2404,   988,
    1879,  2728,  3327,  2941,  2942,  2843,  2711,  1507,  1685,  1004,
    2683,  2729,  1686,  3040,  2363,   843,  2682,  2885,  3405,  1023,
    2429,  1009,  3381,  1008,  1001,  2080,   903,   882,  3180,  3523,
    3261,   909,  2386,  1548,  3262,  3657,  2304,  1782,  1783,  3329,
    1020,  2989,  2990,  2653,  1821,  2305,  3678,  1113,  2332,  3664,
    2307,  1098,  1099,  2789,   972,  1103,  4032,  4110,  3990,  2608,
    2609,  2711,  2081,  2995,  2992,  3181,  1835,  2617,  2618,  2619,
    2807,  2150,  2777,   875,  3182,  3189,  1061,  1044,  1848,  1849,
    1850,  3190,  1530,  4115,  1852,  3435,  4515,  3410,  2340,  1419,
     973,   875,  2344,  2925,  2183,  2184,  2185,  2186,  2187,  3364,
    2189,  2757,  3740,  4132,  4133,  3020,  2364,  3741,  3929,  2957,
    4174,  2950,  3206,  1043,  2319,  3237,  3238,  3239,  2376,  1053,
    2936,   636,  4290,  1888,   636,  1020,  1062,   973,  1081,  1083,
    2898,  3265,  1231,  1232,  4491,  3320,  3000,  3056,  3057,  1350,
    2025,   973,  2866,  2833,  3090,   674,  1231,  1232,  4118,  1055,
    2491,  1050,  1060,  2246,  1219,  1220,  3281,  1221,  4076,  4080,
    3283,  2844,  4081,  2659,  1978,  1231,  1232,   648,  2600,  2025,
    1273,  3418, -2207,  2846,  2025,  4366,  3291,  3292,  1274,  2849,
    4090,  1714,  3298,  1192,  1231,  1232, -2052,   902,  1063,  -972,
    1231,  1232,   908,  5263,  2920,  1274,  2868,  1710,  3310,  3311,
    4082,  3448,  1075,  1282,  1283,  1284,  1274,  3317,  1287,  1288,
     979,  1096,  1291,  5007,  1293,  1294,  1295,  1375,  1297,  2946,
    1330,  3192,  1900,  2207,  1231,  1232,  1231,  1232,  2731,  2937,
    1029,  4806,   877,  1231,  1232,  3449,  2419,  1231,  1232,  4400,
    2207,  1728, -1989,  3208,  1231,  1232,  1231,  1232,  1029,  -626,
     877,  2091,  2486,  3001,   959,  1070,  1386,  1084, -1988,  2517,
    1065,  4141,  1231,  1232,  1756,  1764,  1029,  1696,  1231,  1232,
    1318,  1045,  1364,  3893,  3021, -1714,  3023,  1424,   940,  2729,
    3783,  1631,  2729,  2729,  -626,  3035,  3154,  4031,  4946,  1107,
    5116,  3674,  1362,  1321,  1231,  1232,  3163,  3497,  1715,  1092,
    1030,  4807,  1716,  3052, -1714,  4146,  1231,  1232,  1775,  1776,
    1777,  3358,  -957,  -692,  2288,   879,  1717,  1231,  1232,  1787,
     699,  1031,  5008,  2327,  3083,  1631,  2019, -1828,  3085,  4300,
    2738,  1231,  1232,   879,  4625,  1616,   970,  1631,  2328,  1031,
    4238,  2738,  4568, -2754,  -492,   899,  1274,  1128,  3227,  4454,
    1841,  1071,  4456,  1845,  1035,  4224,  -613,  1031,  2153,  1231,
    1232,  2085,  3531,  1479,  3209,  1193,  4439,  2158,  -614,  3965,
   -2755,   890,  1862,  1863,  -477,  4064,  1867,  2781,  2182,   910,
    4440,  2877,  3002,  -848,  2159,   895,   704,  4065,  5045,  1342,
     643,  3784,  1797, -1892,  1881,  1882,  2192,  4591,  1376,  1886,
    1887,  4066,  1919, -2665,  2198,  1550,  1154,  3654,  4474,  2138,
    1030,  1771,  2577,  1424,   940,  2118,  2936,  1196,   191,  4707,
    1351,  3714,  1596,   958, -1714,  1029,  2122,  1134,  1952,  1953,
    1486,  4721,  3425,  4289,  1771,  1005,  2890,  3171,  1513,  4669,
    3520,  -519,  -692,  4808,  1231,  1232, -1714,  2729,  2329,  1535,
    1711,  1725,  2872,  1718,  2154,  5116,  4517,  4761,  -508,  3313,
    1056,  3229,  1546, -2754,  4419,  2546,  4518,  1365,  1000,  1231,
    1232,  4708,  2164,  4525,  1006,  5201,   844,  1030,  5002,  5009,
    1597,  3765, -2820,  3230,  1698,  4961,  3314,  3323,   716,  4921,
   -2755,  1057,  2292,  2293,  5202,  1748,  1275,  3361,  1698,  2873,
    4463,  1234,  3960,  1546,  1235,  3200,  2155,   192,  4628,   896,
    4628,  3545,  1699,  1275, -2207,  1234,  1031,  2407,  1235,  4794,
    2062,  1231,  1232,   195,  1275,  2937,  1699,  4592,  1514,  2899,
    1726,   644,  1551,  3315,  1234,  3705, -1714,  1235,  1772,  4628,
    3452,  3646,  2878,  3424,   911,  4110,  2020, -1892,  3526, -1714,
    1091,  1719,  1695,  1234, -1979,  1536,  1235,  3444,  3445,  1234,
    2193,  1786,  1235,  2110,  4352,  -848,  5166,  5167,  4800,  1036,
    3426,   732,  4356,  4441,  3417,  3408,  1278,  1231,  1232,  1231,
    1232,  2660,  3977,  2739,  1896,  1331, -1714,  1231,  1232,  3211,
    3427,   973,   973,  1234,  2739,   733,  1235,  1343,  1387,  1020,
    3665,  1094,  1234,  3428,  3354,  1235,  1234,  3003,  1644,  1235,
    4519,  3485,  1487,  1234,  2729,  1234,  1235,  4717,  1235,  1135,
    4064,   195,  1138,   891,  1928,  2659,  1790,  4785,  4786,  4404,
    3424,  1234,  4065,  1599,  1235,  4639, -1979,  1234,  -626,  4408,
    1235,  3513,  3514,   971,  1951,  1078,  4066,  4411,  1231,  1232,
    1004,  4239,  1082,  1082,  3405,  1231,  1232,  4323,  1424,   940,
    1969,  1155,  1968,  1234,  1275,   900,  1235,  -692,   646,  4909,
    1511,  4709,  2657, -2820,  1822,  1234,  1981,  1823,  1235,  2785,
    2324,  4455,  2905,  2711,  2913,  1228,  1234,  3429,  4147,  1235,
    3650,  1097,  2021,  4629,  3378,  4629,  4324,  1366,  3675,  3407,
    1234,  2420,  2528,  1235,  4853,  4573,  2289,  3737,  2997,  2729,
    2997,  3947,  3951,  3272,  1319,    42,  3894,  3436,  1194,  1600,
    2033,  3962,  3963,  3661,  4629,  4942,  1768,  3356,  1234,  2526,
    5264,  1235, -1989,  3558,  1020,  3561,  1229,  1108,  1547,  1231,
    1232,  1242,  2247,  2518,  2541,  1231,  1232,  1224, -1988,  1223,
    1046,  2304,  3450,  2711,  3877,  3846,  3879,  2683,  3527,  3785,
    2305,  4083,  1237,  2682,  3439,  2307,  1601,  2740,  2331,  3644,
    1231,  1232,  1285,  4367,  5051,  1977,  1237,  1290,  2740,  1333,
    2732,  1093, -2207, -1714,  3643,  4031,  3332,  1697,    49,  1328,
    1712,  2947,   759,   660,  2492,  1237, -1714, -2052,  3153,  2828,
    -972,  1506,  2324,  2831,  5021,  3491,  5010,  1109,  2835,  3430,
    3193,  3570,  1322,  1234,  1237,  3162,  1235,  4401,  2620,  1506,
    1237,  1377, -2754,  3501,  3502,  3503,  3504,  3219,  1020,  2045,
    1357,  3493,  3949,  2867,  1337,  4027,  3789,  2237,  1234,  1390,
    2056,  1235,    54,  2850,  2851,  1352,  3868,  1408,  1413, -2755,
    1355,  1020,  2418,  -692,  1237,  1546,  1237,  2160,  4989,    55,
    2324,  1712,  4395,  1237,  2900,  2901,  3816,  1237,  3817,  1041,
    4298,  1042,  2616,  4311,  1237,  4174,  1237,  3792,  1457,   822,
    1712,  3431,  3835,  2527,  3836,  3525, -1714,  2869,  1020,  3880,
    1234,  1712,  1237,  1235,  2199,  4809,  1020,  1020,  1237,  3850,
    3883,   876,  2626,   956,  1565,  3999,  1566,  3552,  4003,   845,
    1231,  1232,  2601,  4232,   957, -1714,  2602,  1231,  1232,   973,
    1478,   897,  1332,  -957,  1237,  1544,  2507,  4060,  2304,   988,
    1276,  1901,   664,  1230,  1712,  1902,  1237,  2305, -1828,  5142,
    2324,  2508,  2307,  1448,  4796,  2165,  1234,  1237,  1234,  1235,
    3324,  1235,  1591,  4067, -2754,  -492,  1234,  2324,  1510,  1235,
    1009,  1237,  1223,  3756,  4962,  1276,  2510,  -613,  1044,  1279,
   -2820,  1901,  2957,  4693,  1020,  2545,  2796,  1588,  4068,  -614,
    1477, -2755,  -297,  1561,  2578,  -477,  1002,  2324,  2532,  1237,
    4130,  2581,  -692,  2598,  1583,  2582,  2237,  2599,  1020,  1298,
    1590,  1020,   119,  1592,  1043,  3191,  2248,   114,  1687,   112,
    3929,  1689,   636,  2533, -2665,   973,  2324,  1234,  1791,  2538,
    1235,  1740,  1707,  2496,  1234,  1448,  1603,  1235,  4396,  4315,
    4316,  1729,  1730,  1731,  2553,  3384,  1734,  4659,  2557,  1738,
    1690,  3337,  1020,  2660,  1744,  3338,  2497,  1746,  1747,  3922,
    3978,   876,  -519,  5200,  2324,  4420,  3686,  2543,  3688,  3689,
    2579,  1348,  3692,  3693,  3821,  2248,  1853,  1359,  3822,  -508,
    4675,  2324,  3702,  3703,  1237,  4733,  1082,  3707,  3829,  4325,
    3710,  1155,  3830,  3717,  1041,  2088,  1042,  3635,  3636,  3635,
    3636,  1231,  1232,  2551,  2431,  1155,  3638,  4581,   982,  1237,
    1471,   967,  4004,  2786,  3508,  1224,  3848,  1223,  1234,  3777,
    3849,  1235,  1039,  2881,  1234,  3202,  3792,  1235,  3635,  3636,
    3744,  3740,  3565,  4452,  2179,  2485,  3741,  3386,  3506,  4433,
    2729,  2137,  1749,  2861,  3240,  1903,  1231,  1232,  1824,  1234,
    2502,  1825,  1235,  1880,  2394,  1604,  1231,  1232,   195,  1924,
    1925,  1237,   197,  1929,  4554,  1029,  1930,  1931,  1932,  3062,
     877,  1936,  1937,  1939,  1941,  1942,  1943,  1944,  1945,  1950,
    2101,  3385,  3559,   959,   822,  1927,  1381,  1911,   727,  1879,
    2203,  3950,  4002,  1966,  3188,   649,  3186,  4056,  4057,  1386,
    3961,  3885,  1723,  1517,  1520,  3886,  1326,  2249,  4067,  4301,
    4767,  1394,  4769,  1004,  1386,  1231,  1232,  1237,  1904,  1237,
   -1979,  1231,  1232,  1547,  1560,  1560,  4824,  1237,  1020,  2018,
    2544,  3975,   885,  1391,  1035,  1959,  1960,   636,  1962,  4312,
    1964,   636,  1020,  3778,  4555,   636,  1974,  1020,   973,  2017,
    1979,  1980,  1253,   879,  2805,  2012,  1031,   876,  1231,  1232,
    3753,  4014,  1419,  4135,   892,  1961,  2249,  2015,  4911,  1965,
    1020,  2684,  4825,  1973,  1231,  1232,  4001,  3387,  1020,  4307,
    4008,  1020,  2547,  1231,  1232,  2030,  2032,  3475,  1237,  1234,
     876,  5109,  1235,  1518,  3203,  1237,  1234,  2812,  1750,  1235,
    3771,   973,   973,  3180,  1231,  1232,  4363,  2079,  4048,  1082,
    4042,  4068,   973,   973,  1472,   973,  2058,   978,  1231,  1232,
     877,  1184,  1231,  1232,  2096,  3364,  2936,  2642,  1020,  1020,
    5040,  1751,  2923,   914,  2152,  4190,  3847,  2092,  3492,  1101,
    3181,  4160,  4161,   953,   876,  1020,  4026,  2395,  2559,  3182,
    3189,  3373,   958,  4927,  2046,  2652,  3190,  1231,  1232,  1969,
    2111,  1968,  2042,  1082,  1946,  1685,  1685,  3940,  2119,  1686,
    1686,   956,  4220,  2055,  1082,  2250,  2057,  4991,   727,  1237,
    3336,  4993,   957,  1020,  3371,  1237,  3964,   976,  1199,  1395,
     875,  5204,  4338,  4339,  3208,  2997,  1231,  1232,   195,  2334,
    1574,  3898,  4826,   879,   751,  3509,  4183,  3970,  3971,  2564,
    1237,  1327,  2509,  3974,  2914,  4653,  3413,  4939,   968,  3986,
    2243,  4189,  4358,  4359,  2627,  1274,  1231,  1232,  4361,  3198,
    4364,  3779,  1601,  2404,  1905,  2937,  2235,   988,  2217,  4734,
    4136,   906,  3937,  2102,  4979,  2280,   974,    25,  4572,  1040,
    4220,  3412,  2228,  2204,  2256,  2180,  1256,  1020,  4000,  3507,
   -1979,  3983,  3984,  3639,  3446,   195,  3341,  3342,  2005,  1020,
    1234,  2620,  2664,  1235,  1596,  1020,  4651,  4018,  2300,  4256,
    2915,  4196,  4197,  2334,  2363,  4453,  3463,  3388,  4019,  5099,
    4110,  4858,   969,  2907,  1020,  -694,  1599,  3468,  3290,  3470,
    2568,  2138,  3473,  4198,  2252,  3873,  2569,  1113,  1521,  3878,
    4718,  2916,  2711,  1185,  1724,  1234,   877,  1188,  1235,  2634,
    2286,  1231,  1232,  4029,  2297,  1234,  1382,  1020,  1235,  -549,
    2290,  2571,  1597,  1231,  1232,  3973,  2592,  2332,  5110,  1599,
    4221,  1387,  2815,  2382,  3560,  2251,  3780,  3326,  4997,   877,
    1237,  1752,  1231,  1232,  1231,  1232,  1387,  1237,  3687,  2908,
    3347,  3690,  3691,  2252,  3204,  3694,  3695,  3696,  3697,  3698,
    3699,  3700,  3701,  1231,  1232,  3704,  2364,  3706,  3446,  3708,
    1947,   989,  2917,  3716,  1234,  4574,   982,  1235,  4405,  3545,
    1234,  4175,  1039,  1235,   751,  5205,  2383,  1328,  2406,   879,
     790,  2334,  4993,   877,  3209,   893,  1948,  4980,  2225,  1448,
    4762,  1508,  5214,  3808,  4252,  1260,  1261,  2628,  4221,  3198,
    1231,  1232,  1392,  4222,  2304,  4039,  4165,  1234,   990,  1601,
    1235,  2356,   879,  2305,  4699,  2138,  1274,   645,  2307,   977,
     646,   959,  1383,  1234,  3510,  3511,  1235,  5041,  3380,  5215,
    2424,   973,  1234,  2408,  2253,  1235,  2368,  4834,  3440,  3441,
    3442,  2909,    36,   886,  1691,  2918,   973,  2914,  5230,  2883,
    3063,  2572,  1601,  1234,  1231,  1232,  1235,  3547,  2576,  3546,
    1102,  1601,  2384,  5214,  3760,  1599,   879,  1234,  1771,  4009,
    1235,  1234,  1603,  4859,  1235,  1000,  4191,  4192,  4193,    42,
    4556,  4226,   973,   991,  1035,  2504,   636,   636,  3956,  1189,
    4020,  3913,  2426,  1231,  1232,   636,  4384,  4900,  1753,  1584,
    5215,  4388,  2729,  2729,  4341,  4391,  1234,  2473,  4901,  1235,
    3345,  1237,  2112,  2915,  2505,  2506,  3737,  2098,  1231,  1232,
    1253,  3957,  4152,  1275,  2910,  4970,  3368,  4354,  5042,  4855,
    4145,  1002,  3303,  3048,  1750,   887,  3524,  1698,  3111,  1231,
    1232,  4365,  4665,  2500,  2916,  1234,  4369,  2098,  1235,  4298,
    4998,  1600,    49,  1949,  1000,   924,  1237,  4944,  3465,  5043,
    4948,  3761,  4605,  4360,  4606,  1699,  1237,  1761,  4981,  3208,
    1231,  1232,  1155,  2552,  2357,  1234,  1231,  1232,  1235,  1567,
    1231,  1232,  1011,  4860,  4580,  2113,  1448,  4255,  3316,  4010,
     958,  2624,  2657,  1771,   916,  1840,  2098,  4186,  1601,  2369,
    2972,  2226,  3455,  4835,  1231,  1232,    54,  4517,   888,  3211,
    2884,  4648,  4649,  3049,  2629,  2917,  1012,  4518,  4974,  4975,
    2635,  1231,  1232,    55,  4223,  1237,  4536,  1231,  1232,  1448,
    2630,  1237,  2594,  2639,  2631,  1014,  2643,  3369,  1448,  5216,
    1020,  1568,  1231,  1232,  1231,  1232,    42,  1266,  1267,  1268,
    1269,  1270,  1271,  3743,  3258,  3742,  2696,  4412,  2641,  3112,
    4508,  3258,  1004,  1231,  1232,  4153,  2919,  1026,  1237,  1603,
    1234,  1231,  1232,  1235,  1224,  4021,  1223,  2611,  3755,  2657,
    1231,  1232,  1234,  2520,  1237,  1235,  1004,  2615,  1242,  1698,
    2947,  4971,  2685,  1237,  4150,  4495,  4496,   973,  2918,  1040,
    4638,  1234,  4223,  1234,  1235,  4011,  1235,  2823,  4007,  1072,
    5216,  1771,  1603,  2973,  1237,   973,  3050,  1699, -1892,    49,
    1844,  1603,  1234,  4074,  1256,  1235,  4902,  3958,  1237,  2683,
     645,  2721,  1237,   646,  1275,  2682,  1585,    42,  3899,   973,
    1155,  1020,  4036,  4151,   992,  2911,  3827,   699,  2711,  5103,
      63,  1051,  3828,  4088,  4089,  4413,  2693,  4505,  2650,  4345,
    2698,  4519,  1586,  4506,  2734,  2735,   993,  1237,   973,  1234,
    2824,   973,  1235,    54,  3331,  1448,  1082,  1569,  2784,  3209,
    1020,  1231,  1232,  1231,  1232,  1020,  1020,  1752,  2658,  3841,
      55,  2711,  2711,  3339,  2797,  3340,  4286,  2711,  2684,  4414,
    1082,  2114,  4380,  4381,  1054,  3852,  1237,   994,  4382,  4737,
      49,  1231,  1232,   704,  3853,  2693,  3904,  2758,  2287,   973,
    4819,  1231,  1232,  1234,  1004,  3671,  1235,  1020,  2291,  2712,
    1231,  1232,  2717,  1523,  1524,  4310,  1237,  4261,  1866,  4262,
    3672,  2337,  4480,  1020,  2657,  2521,  1466,  1059,   956,   876,
    4444,  2327,   876,  3758,  3938,  1700,   956,  5046,  1603,   957,
    2729,  2821,  1234,  4037,    54,  1235,  2338,   957,   995,  2632,
    2658,  3884, -1892,  4030,  2832,  5159,  5159,   636,   636,   636,
     973,   636,  1020,   973,  2593,  2385,  2974,  1234,  4208,  2546,
    1235,  2829,  4814,   636,  4436,  1020,  2975,  4544,   636,  4788,
    1691,  1064,  3979,  2976,  4791,  2816,  2817,  2818,  1234,  2820,
    1276,  1235,  1231,  1232,  5004,   716,  2200,  1002,  1067,  2919,
    -549,  2830,  2324,  4436,  4607,  4924,  2834,  4538,  2658,  2860,
    1065,  1237,  2886,  1467,  1231,  1232,  2729,  2729,  5047,  1234,
    3498,  2819,  1235,  1237,  2822,  1234,  1231,  1232,  1235,  1234,
     926,   176,  1235,  2525,  1753,  3795,  2115,  1004,  4598,  3666,
    1231,  1232,  1237,  2825,  1237,  2522,  1544,  3499,  3810,  5005,
    1231,  1232,  3930,  1234,  3643,  2116,  1235,  1604,  1525,  1526,
    4925,  1020,  2932,  1237,  1231,  1232,   876,  4918,  1068,  1879,
    1234,  1253,  1879,  1235,  1231,  1232,  1234,  2201,   732,  1235,
    1231,  1232,  1076,  2230,  3211,  2297,  2231,  2977,  1002,  3772,
    2406,  1234,  2339,  1234,  1235,  1020,  1235,  4907,  2194,  2195,
    3384,  1516,  1561,  1561,  1078,  1231,  1232,  3922,  2945,  3922,
    1237,  2496,  1234,   973,  1517,  1235,   645,  1080,  1004,   646,
    1234,    42,  1079,  1235,  3882,  2196,  3754,  4600,  2534,  1234,
    5133,  3044,  1235,  2711,  2497,  3033,  2991,  1231,  1232,  4745,
    2535,  5090,  2996,  1086,  4565,  2790,  1231,  1232,  3009,  3011,
    3014,  3015,  3016,  3017,  3018,  1231,  1232,   927,  3022,  2542,
    3027,  2555,  4746,  1084,  1237,   907,  2791,  3089,  3890,  2944,
    3027,  3889,  3037,  3038,  4601,  3027,  3906,  3042,  3043,  1089,
    1020,  3045,  3027,  1714,  2978,  1231,  1232,  3055,   877,  2025,
    3058,   877,  1880,  3305,    49,  2523,  2999,  3068,   959,  2431,
    3069,   973,  1879,  1237,  1518,  1166,   959,  3019,  2792,  4156,
    3084,  1090,  3027,  3028,  1231,  1232,  1020,  1268,  1269,  1270,
    1271,  1277,  4376,  1253,  4157,  1183,  4084,  2556,  1237,  4085,
    1234,   973,  1234,  1235,  4201,  1235,  2232,   928,  1197,  1198,
    1088,  3027,  3121,  3059,  2929,  1231,  1232,  3067,    54,  1237,
     917,  1029,  1231,  1232,  3071,  3072,  4377,  2272,   917,  2273,
    1234,  4202,  3070,  1235,  4918,    55,    42,  2943, -1714,  5279,
    1234,   879,  2959,  1235,   879,  1256,  3259,  2722,  1095,  1234,
    1237,  2560,  1235,  3259,  4165,  1740,  1237,  1390,  2960,  2647,
    1237,  1390,  3113,  1104,   973,  2648,  1231,  1232,   973,   759,
    1715,  1313,  1100,  1030,  1716,  1324,  1020,  3062,  2334,  1105,
    1231,  1232,  1424,   940,  1237,  3224,   636,  3279,  1717,  3188,
    2567,  3186,  2405,  3425, -1714,   877,  4836,  1879,  3221,  1231,
    1232,  1237,  2647,  1231,  1232,  2958,  1020,  1237,  2864,    49,
    1020,   174,  1031,  2723,  3225,  2570,  1424,   940,  1110,  1231,
    1232,  4704,  1237,  1276,  1237,  3166,  2405,  1231,  1232,  3170,
   -1714,  1234, -1714,  1111,  1235,  3568,  2573,   958,   321,  1112,
     323,  5096,  4063,  1237,  2724,   958,  3633,  3634,  1231,  1232,
   -1714,  1237,   321,  1234,   323, -1714,  1235,  4723,  1317,  4724,
    1237,  1320,  1002,  3399,  3400,  1234,  1323,  2585,  1235, -1714,
    1114,  1325,  1230,  2603,  3219,  4087, -1714,  2610,   879,  1234,
      55,  2524,  1235,  4092, -1714,  2431,  1115,  1231,  1232,  1234,
    4123,  3322,  1235,  1116,  1231,  1232, -1714,  1256,    42,  1665,
    3359,  2613,  1666,  1234,  1260,  1261,  1235,  1491,  1492, -1714,
    1495,  1119,  1496,  1234, -1714,  2725,  1235,  1286,  2865,  1234,
    1120,  3357,  1235, -1714,  3788,  1718,  4308,  4954,  1257,  1258,
    2961,  3426,  3349,  3350,  1121,  1231,  1232,  1122,  1224,  3820,
    1223,  3823,  1020,  1123,  1234,  1124,  4218,  1235,  1281,  1020,
    1125,  3427,  4500,  4501,  4502,  4503,  1126,  4064,  2548,  1289,
    3831,  1237,  2431,  1237,  3428,  2012,  1129,  4346,  3837,  4065,
    2012,    49,  4344,  1131,  3372,  1020,  1234,  4228,  4229,  1235,
    2549,  2892,  2893,  4066,  1838,  1234,  2894,  2895,  1235,  5190,
    2025,  1237,  1132, -1714,  1234,  1424,  4077,  1235,  2726,  1231,
    1232,  1237,  4457,  4244,   973,  4459,  4460,  1002,  2962,  2561,
    1237,  1133,  3343,  2431,   929,   930, -1714,   931,   932,   933,
     973,   973,  3416,  1719,  1234,    54, -1714,  1235,  2562,  2563,
    3102,  3103,  2431,  2431,  2963,  4854,   934,  1155,  5239,  1136,
    1020,  1137,    55,  3221,  4588,  4589,   973,  1139,  3429,  1879,
    1004,  1004,  1140,  1234,  3887,  2565,  1235,  1424,   940,  2431,
    1224,   953,  1223,  3635,  3636,  2042,  4712,  1546,    42, -1714,
    2606,   876,   876,   876,  2431,  3547,  1292,  3546,  3838,  4233,
    3839,  2055,  3395,  1141,  1234,  4906,  4237,  1235,  1142,   956,
    1143,  1234,  1237,  2689,  1235,  2729,  2964,  2690,  1296,  3461,
     957,  1144,  4933,  2858,  3482,  5100,  3484,  2859,  3469,  3264,
    1145,  3036,  3333,  2431,  1237, -1714,  2431,  3555,  3840,  1301,
    3843,  3556,  1146,  3046,  2431, -1714,  1237,  3842,  2722,  1020,
    1149,   973,   973,  1150,  1253,  1234,  4952,  4953,  1235, -1714,
    1237,    49,  4266,  3477,  4180,  4181,  2729,  2729,  3349,  1234,
    1237,  1156,  1235,  3086,  1264,  1265,  1266,  1267,  1268,  1269,
    1270,  1271,  1157, -1714,  1237,  1231,  1232,  1390,  1234,    63,
    3430,  1235,  1234,  4058,  1237,  1235,  1158,  4059,  1302,  4207,
    1237, -1714,  3116,  4059,  1304,  4265, -1714, -1714,  1234,  2431,
    1159,  1235,  3471,  3472,  2723,    54,  1234,  4288,  2965,  1235,
    1160,  2857,  5246,  5247,  1915,  1237,  3173, -1714,  1315,  3845,
    4302,  1161,    55,  1162,  4303, -1714,  1020,  1234,  1163,  2727,
    1235,  1164,  3743,  1167,  3742,  2951,  1168, -1714,  1595,  3557,
     973,  2297,  3530,  3080,  3081,  1004,  4421,  1237,  3098,  3101,
   -1714, -1714,  3431,  3851,  4342, -1714,  1237,  1596,  1169,  4343,
    1170,  2358, -1714, -1714, -1714,  1237,  1234,  3854,  4348,  1235,
    4350,  2327,  4349,  1234,  4349,  4386,  1235,  3856,  1390,  4387,
    5241,  5243,  4299, -1714,  4560, -1714,  2359,  1171,  1020,  4422,
    1311,  3858,  2996,  2025,  2996,  1237,   174, -1979,  1172,  3009,
    1312,  3860,  2914,  1316,  3578,  3082,  2952,  3861,  1173,  4579,
    4807,  1174,  4423,  3027,  1234,  1597,  3641,  1235,  1266,  1267,
    1268,  1269,  1270,  1271,  1237,  1334,  4393,  1020,  1175,   699,
    4394,  4482,  3862,  3649, -1714,  4483,  2784,  1390,  3173,  4407,
     877,   877,   877,  4484,  1869,  1870, -1714,  4485,  1256,  1002,
    4407,  4424,  4486,  3027,  3307,  1237,  4487, -1714,  1329,  4489,
    1176,  3027,  1237,  4490,  4249,  3027,  3027, -1714,  2915,   959,
    4492,  1177, -1714,  4250,  4493,  1598,  1599,  5074,  1335,  4494,
    4499,   973,  4251,  4394,  4394,  1020,  1020,  1252,  1253,  2953,
    2360,  1178,   651,  1345,  4528,   704,  4539,  2166,  4531,  2916,
    2431,  1257,  1258,  1497,  1253,   699,  1237,  1916,  2847,  2848,
    1179,   176,  4389, -1714,  3745, -1714,  2424, -1714,  2271,  2272,
    1237,  2273, -1714,   879,   879,   879,  4557,  2167, -1714,  1180,
    2431,  1041,  1698,  1042,  3930,  1253,  1181,  1182,  3757,  1237,
    1341,  4534,  1082,  1237,  1020,  2722,  4602,  4619,  4013,  1879,
    4387,  4394,  4913,  4623,  1879,  1186, -1714,  4394,  1187,  1237,
    1699,  4626,  1190,  1020,  4679,  4394, -1714,  1237,  1599,  4684,
    2917,   704,  4537,  4640,  1191,  1195,  1305,  4641,  2168,  4543,
   -1714,  4642,  2169,   652, -1714,  4641,  4688,  1020,  1237, -1714,
    4394,  1199,  1200,  1201,  1202,  1253,   876,   716,  1599,  1203,
    1204,   973,  3791,  3176,   973,  1205,  3578,  1260,  1261,  1601,
   -1714,  2723,  5256,  5146,  1206,  1346,  3221,  4759, -1714,  -898,
    1009,  4760,  1223,  4545,  1207,  3221,  3221,  1237, -1714,  1349,
   -1714,  3221,  5256,   679,  1237,  4778,  1360,  4546,   958,  4387,
    2684,  1208,  2951, -1714,  1234,  4067,  4790,  1235, -1714,  1209,
    3556,  4856,  1210,  2918,  1600,  4857,  4547, -1714,  1984,  1306,
    4548,  5256,  3764,  1211,  1307,  3766,  4078,  3622,  1212,  1213,
     653,  1214,  5195,   716,  5197,  1237,  4627,  5018,  3732,  5023,
     732,  5019, -1714,  3683,  4775,  1215,  1369,  5026,  1216,  4679,
    5223,  4349,  1256,  4684, -1714,  5028,  5037,  1217,  2142,  5029,
    5038,  1601,  5104,  1254,   733,  4777,  5105,  1308,  1256,  1218,
    2954,  4427,  3322,  2952, -1714,  2362, -1714,  1280,   699,  1313,
    1523,  1524,  2722,  1309,  1917,  3176,  5234, -1714,  3881,  1255,
    5235,  1601,  2914,  1371,  1374,  4610,  4611,  2170,  4613,  1256,
    1918,  4660,  5265,  5266,  4803,  1381,  1406,  4679,  1414,  1310,
   -1714,  4963,  4684,  1420,  1480,  1332,   732,  2143,  4617,  4618,
   -1714,  1481,  1483,  1484,  1493,  2693,  3920,  1498,  1253,  3903,
    1020,  1499,  1500,  1501,   654,   703,   973, -1714,  1502,  1503,
     733,  1985,  1602,  1504,   704,  1986,  1448,  1020,  2723,  3221,
    2144,  3027,  1880,  1505,  1515,  3931,  2953,  1509,  2915,  1256,
    3732,  1512,  3073,  1532,  3074,  1545,  2693,  1549,  1020,  1009,
     911,  1223,  1039,  3512,  1573,   709,  2171,   973,   973,  2724,
    1257,  1258,  1004,  1004,  1594,  1987,   973,   973,   973,  2916,
    1688,  1004,  1004,  1004,  1691,  3995,  1732,  3912,  3733,  1733,
    1735,  1736,  1739,  5027, -1714,  1988, -1714,  3075, -1714, -1714,
    1745,  1260,  1261, -1714,  1274,   877,  1020,  1264,  1265,  1266,
    1267,  1268,  1269,  1270,  1271,  1525,  1526,  1260,  1261,  1603,
    3076,  1771,  1778, -1714,  2919,  3988,  1789,  3988,  1448,  1792,
    2172,  1827,  1837,   655,  3640,  1839,   716,  1838,  1860,  1596,
    2725,  1877,  1889,  1890,  1897,  1898,  1259,  1899,  1260,  1261,
    2917,   759,  1907,   656,  1596,  1237,  1926,   174,  1448,  3077,
    1989,  1933,  1934,  1963,  1967,  1982,   679,  2014,   973,  2035,
    4028, -1714,  2036,  1004,  3655,  1880,  2037,  2038,  2040,  2041,
    2050,  2049,  3658,  2051,   825,  2052,  2061,  3662,   879,  2077,
    3173,  2093,  2082,  4716,  1527,  1528,  1529,  1597,   657,  2097,
   -1825,  2098,   727,   658,  2100,  3173,  2103,  2996,  1260,  1261,
    3733,  1603,  1597,  2105,   730,  4055,    42,  2107,   731,   732,
    2109,  1262,  1256,  2726,  3398, -1714,  4738,   759,  4739,  4740,
    2110,  2136,  1383,  2918,   659,  2141,  2161, -1714,   660,  2162,
    2163,  1603,  2181,   826,  4427,  2178,   661,  2188,  2190,  2722,
    2191,   699,  2173,   175,  4914,  4768,  1990, -1714,  2205, -1714,
    2145,  2202,  2206,  2207,  2218,  2219,    42,  2954,  2220,  2222,
    2224, -1979,   176,  2236,  3908,  2238,   827,  2464,  2465,  2466,
    2467,  2468,  2469,  2470,  2240,  2241,  2242,  4131,   662,    49,
    3174,  2244,  1991,  1253,  2174,  2245,  2258,  3175,  2260,  2261,
    1880,  2262,  2263,  4139,  4140,  3174,  2264,  2265,   703,  2266,
    2269,   828,  3175,  4757,  2267,  2723,  1992,   704,  2277,  1879,
   -1714,  2281,  2301,  3027,  3027,  2282,  1631,  3121,  2309,  2310,
    1604,  2311,  2313,  2314,  2322,  2326,  2341,  4813,  2327,    49,
    2346,  1993,   663,  3399,  3400,   177,  2951,  2347,   709,  2352,
    1599,  1264,  1265,  1266,  1267,  1268,  1269,  1270,  1271,  2355,
      55,  2353,   829,  4169,  2365,  1599,  4173,  1560,  1265,  1266,
    1267,  1268,  1269,  1270,  1271,  4055,  2367,   664,   665,  2377,
    2370,  1260,  1261,  2378,  2381,  1994, -1714, -1714,   178, -1714,
    4055, -1714,  4194,  3399,  3400,  2388, -1714,  2389,  1264,  1265,
    1266,  1267,  1268,  1269,  1270,  1271,  2146,  2398,  2400,  3989,
      55,   973,  3078,  1253,  2401,  2410,  1995,  2952,   751,   716,
    4214,  2411,  4428,  2413,  1802,  4429,  1263,  2147,  2412,  2416,
    1277,   179,  4917,  2417,  2430,   757,  1600,  2431,  2427,  5006,
     759,  2474,  1253,   760,  2727,  2428,  2476,  4757,  2477,  2478,
    2480,  1600,  2148,  2481,  2919,  2482,  2483,  2487,  1264,  1265,
    1266,  1267,  1268,  1269,  1270,  1271,  2484,  2489,  2149,  2490,
    2494,  2495,  4206,  2501,  2511,  2540,  2513,  3176,  2537,  2514,
    2515,  2529,  2531,  1601,  2536,   727,  2318,  3401,  2320,  2321,
    2539,  -108,  3176,  2323,  2546,  5014,   830,  1256,  1601,  2550,
    2953,   731,   732,  2607,  2554,  2336,  2558,  2574,  2342,  2343,
    2575,  2345,  2580,  2583,  2348,  2349,  2350,  2351,  2584,  2595,
    5088,  2354,  2596,  2597,  4747,  2604,  2366,  2605, -1352,  2621,
    1806,  2371,  2372,  2373,  2374,  2375,  1271,  3401,  2622,  2379,
    2380,  2012,  2623,  -847,  2636,  2390,  2391,  2392,  2393,  4096,
    2396,  2397,  1880,  2399,  2640,  2662,  2402,  2645,  4748,  2403,
    2646,  2668,  -692,  2649,   821,   180,  2658,  2665,  2687,  2669,
     872,  2670,  2327,  2671,  2672,   831,  2673,  2674,  2686,  1155,
    1020,  2688,  2691,  2138,  3221,   973,  -692,  2328,   872,  2718,
    1004,  2737,   954,  4097,  2720,   832,  1712,  4098,  2744,  4099,
    2747,  3425,  4430,  4431,  2736, -1979,   821,   999,  2749,  2753,
    4432,  2328,  2754,  2752,  1996,  1997,  2756,  1256,  1998,  1999,
    2000,  2001,  2085,  2755,  4096,  2787,  1020,  2779,  2780,  4917,
    1394,  1264,  1265,  1266,  1267,  1268,  1269,  1270,  1271,  1807,
     833,  3988,  3991,  1810,   181,   658,  1256,  4100,  1395,  2799,
    1811,  2800,  2801,  2802,  2803,  2804,  1260,  1261,  2810,  3425,
    1448,  -692,  2836,   834,  2838,  1390,  2808,  2837,  4447,  5211,
    2814,  2839,  4098,  2845,  4099,  1448,   835,  2841,  4402,  2853,
    2855,  2856,  4749,  2857,  2862,  4055,  2328,  4385,   836,  1879,
    4055,  -692,  2784,  5238,  4055,  2870,  2863,  2329,  2876,  2874,
    2882,   751,  2887,  3578,   837,  4428,  2888,  2722,  4429,   182,
    4368,   183,  2889,  1879,  1020,  2926,  5211,  2927,   757,  2930,
    2935,  2954,  4100,   759,  2940,  -847,   760,  2948,  4757,  2968,
     838,  1812,  2969,  1698,  2970,  3039,  1879,   973,  3041,  3426,
    5238,  1020,  3093,  1603,  3087,   184,  3106,  3208,  5162,  3108,
    3114,  1253,  3122,  1619,  1620,  3115,  3124,   185,  1603,  3427,
    1879,  1699,  3125,  3126,  3244,  4995,  3127,  3128,  3129,  4750,
    3168,  3130,  3428,  2723,  3131,  3132,  1260,  1261,   973,  4465,
    3172,  3133,  3134,  1253,   839,  -868,  3135,  4751,  3136,  1622,
    3137,  3245,  3138,  3139,  3140,  1814,  3141,  3426,  4418,   636,
    3142,  3143,  3169,  1625,  2951,  1260,  1261,  2959,  3144,  1626,
    1627,  4752,  3145,  1628,  3146,  3147,  3148,  3427,  3149,  3150,
     840,  3151,  3152,  2960,  4169,  3155,  3156,  4475,  3157,  3158,
    3428,  3159,  3160,  3161,  3194,  1520,  3207,  1630,  3226,  4464,
    3234,  3246,  3243,  3266,  3247,  3267,  3268,  1134,  3280,  4055,
    2864,  1631,  3248,   186,  3282,  1632,  3429,  3297,  3411,  2566,
    -868,   973,  1604,  3360,  4992,  3221,  3328,  3330,  3376,  5277,
    3334,  3249,  1184,  3377,  1188,  2952,  3379,  1604,  3382,  4319,
    3374, -2194,  -549,  3414,  1637,  4430,  4431,  3375,  1257,  4101,
    3393,  3832,  3423,  4461,  4102,  3397,  3415,  3437,  1984,  2330,
    4103,  3443,  3424,  3446,  3451,  3458,  1264,  1265,  1266,  1267,
    1268,  1269,  1270,  1271,  3429,  3464,  -692,  4353,  3250,  3474,
    3460,  3462,  4524,  3479,  3480,  3478,  3481,  3483,  1020,  3486,
    3488,  3489,  3494,  3496,  4567,  3517,  1815,  4321,  3495,  3518,
    4104,  2947,  1880,  3521,  3534,  5260,  1277,  3931,  4576,  3535,
    3536,  3537,  3540,  1020,  1817,  1256,  3538,  3209,  2953,  3539,
    3221,  1641,  3562,  1257,  4101,  3563,  3564,  3572,  1642,  4102,
    1798,  1799,  1800,  1801,  1802,  4103,  3571,  3573,  3430,  3322,
    3565,  3651,  3643,  3656,  3648,  3652,  4995,  1256,  1643,  3251,
    3659,  3667,  3676,  4599,  1448,  2961,  3660,  1390,  3681,  3682,
    3683,  3210,  3679,  3680,  3685,  3748,  3719,  1194,  3774,  3806,
    3722,  4753,  3725,  3728,  3731,  4104,  3746,  2331,  3763,  4105,
    3782,  1985,  3792,  3796,  3798,  1986,  1264,  1265,  1266,  1267,
    1268,  1269,  1270,  1271,  4055,  3807,  3430,  4938,  4055,  3809,
    1277,  3802,  2784,  3811,  3824,  3813,  1020,  3825,  1645,  3871,
    3431,  1644,  3866,  3814,  3863,  1264,  1265,  1266,  1267,  1268,
    1269,  1270,  1271,  3815,  3867,  1987,  1646,  3872,  1616,  4106,
    3888,  1448,  3874,  2962,  3896,  3901,  3905,  1803,  1804,  1805,
    1806,  3897,  3914,  3252,  3918,  1988,  3253,  1243,  1244,  1277,
    3919,  1020,  3932,  3935,  4105,  3936,  1257,  1258,  3941,  2963,
    3952,  3942,  -692,  3943,  3953,  3944,  5274,  3945,  3431,  3954,
    3966,  3946,  3967,  3972,  1260,  1261,  4320,  3980,  3992,  2699,
    3982,  1650,  3993,  3996,  3997,  2875,  4107,  1000,  1245,  4169,
    1651,  4173,  4671,  3985,  3998,  5274,  4012,  3221,  4015,  4017,
    4024,  1246,  4030,  2358,  4106,  2700,  1260,  1261,  4034,  4269,
    1989,  4035,  4038,  2327,  4041,  4043,  4046,  4049,  4214,  4270,
    2701,  2964,  4050,  4075,  3254,  4086,  4093,  4696,  2359,  4271,
    4124,  4128,  4129,  2702,  4322,  4134,  3801,  4143,  3805,  2954,
    4144,  1247,  3211,  4272,  4273,  4274,  4715,  4155,  4188,  1807,
    4200,  1808,  1809,  1810,  1248,  4205,  4210,  4215,  4217,  4275,
    1811,  4107,  4225,  4227,  4234,  4240,  4241,  1020,  4253,  1656,
    4254,  4258,  4263,   196,   973,  2994,  4257,  4268,  4285,    42,
    4284,  1249,  4290,  4292,  4295,  2703,  2704,   821,  4108,  3027,
     873,  3027,   821,  4296,  4298,  4297,  4304,  4306,  3255,  4309,
    4314,  -692,  3034,  4317,  4318,  4335,  1990,  4340,   873,  2230,
    4313,  4357,  -694,  2705, -1608, -1607,  4362,  4373,  4371,  3047,
    4372,  4374,   821,  2965,  3529,  4109,  1657,  1658,  1659,  4399,
    4403,  4390,  2360,  1660,  -695,  4720,  4409,  4438,   821,  4437,
    4443,  1812,  1991,  4445,  3001,  4449,  1250,  4451,  4771,  4118,
    1661,  4458,    49,  1662,  3091,  3092,  4466,  4467,  4469,  4470,
    4473,  4476,  3105,  4108,  4477,  4479,  1992,  4488,  3256,  4498,
    4511,  4509,  4512,  4513,  1698,  4540,  4526,  4169,  4169,  4514,
    4541,  4527,  2706,  4528,  4542,  4529,  4530,  -694,  4831,  1664,
    4532,  1993,  4533,  4535,   821,   821,  3257,   821,   821,  4550,
    4109,  4551,  1699,  4558,  1813,  1814,    54,  4561,  4552,  4559,
     821,  4562,  4563,  4569,  4577,  4570,  4582,  4583,  4585,  4349,
    4608,  4609,  4587,    55,  1264,  1265,  1266,  1267,  1268,  1269,
    1270,  1271,  4612,  4614,  3322,  1994,  2707,  4603,  4615,  1035,
    4620,  4644,  4637,  3197,  4646,  1561,   730,  4654,  4652,  4655,
    3674,  4661,  4531,  4663,  4667,  4674,  1264,  1265,  1266,  1267,
    1268,  1269,  1270,  1271,  4055,  4685,  1995,  4673,  4686,  4694,
    4697,  4698,  4695,  2063,  4701,  4702,  4703,  4706,  4863,  4714,
    4719,  4729,  4725,  2064,  4741,  4772,   645,  4276,  4731,   646,
    2648,  4774,  2932,  2065,  4782,  4784,  4730,  4787,  4793,  4766,
    4776,  4797,  4802,   821,  4277,  4801,  4816,  2066,  2067,  2068,
    4818,  1667,  4592,  4833,  4804,  4821,  4820,  4842,  4822,  4823,
    4827,  4828,  1880,  2069,  4932,  3318,  4840,  4861,  4832,  4837,
    4843,  3121,  3121,  4848,  4851,  1670,  3988,  4865,  4903,  4904,
    2361,  4912,  4919,  4921,   821,  4922,  1815,  4924,  4925,  4926,
    3212,  4955,  4934,  -549,  4935,  4942,  4941,  2362,   872,  4956,
    4965,  4960,  -436,  1816,  1817,  4983,  4985,  4986,  4061,  4062,
    4987,   954,  4969,  4069,  4988,  5003,  5017,  4976,  5015,  5024,
    5022,  5051,  -454,  5054,  5079,  5080,  5082,  5081,  5084,  5090,
    5094,   119,  5091,  5092,  5098,  5108,   114,  5111,   112,  4734,
    5112,  5119,  5033,  5120,  5124,  5134,  5137,  5140,  4169,  4091,
    5141,  5036,  5147,  5149,  5039,  4119,  4121,  4122,  5151,  5155,
    3801, -2610,  5142,  5163,  5165,  4278,  5152,  5172,  5175,  5177,
    5185,  5187,  5192,  5198,  5193,  5188,  5194,  5212,   876,  5203,
    5222,  5226,  4279,  5244,  5249,   797,  5228,  5231,  5245,  5232,
    5250,  5252,  5259,  5261,  5086,  5262,  5263,  5282,  5264,  3730,
    1020,  4978,  3892,  1020,  1996,  1997,  3721,  3724,  1998,  1999,
    2000,  2001,  4670,  3727,  3718,  4668,  5055,  4672,  4187,  1762,
    4680,  4040,  4690,  5130,  4908,   821,  5131,  4990,  2312,  4799,
    4692,  5283,  5254,   966,  3409,  4283,  3367,  5267,  5169,  5117,
    4876,  1465,  4877,  1020,  4280,  5170,  5160,  5129,   872,  4879,
    5128,  4880,  4199,  2988,  1605,  4882,  4883,  4884,  4885,   821,
     821,  4281,  4886,  4932,  4887,  2993,  3891,  4890,   821,   821,
     821,   821,   821,   821,  4891,  4892,  4383,  4497,  3167,  4510,
    3773,   821,   821,  3770,   821,   821,  3769,  4351,  4732,   821,
     821,  2070,  4898,   821,   821,   821,   821,  5101,   821,   821,
    4622,  5139,  5033,  4850,  5106,  5107,   821,   821,  2071,   821,
     821,   821,   821,   821,  3096,  4209,   821,   821,   821,   821,
     821,   821,   821,   821,   821,  4397,   821,  3165,  4446,   821,
     821,  4398,  3768,  4079,   821,  4127,  4125,  4643,   821,   821,
     821,  5113,  4448,  4928,  3865,  4852,  3006,  4744,  4789,  5085,
    4792,   821,   821,   821,  4765,  3569,   821,  4758,  2499,   821,
     821,   821,   821,   821,   821,  3637,  4636,  4410,  4203,  3515,
    3759,  3505,  4658,  1231,  1232,  4899,  2299,  3097,   821,   821,
    3099,  3100,  4898,  4898,  2854,  1476,   821,  2852,   821,   821,
    4142,  3396,  5174,  2475,  3642,  3394,  2425,  3911,  3684,  5182,
     821,   821,   821,  5233,   821,   821,  3383,  4294,   821,   821,
     821,  1007,  5123,   821,   821,   821,   821,   821,   821,   821,
     821,  2778,  1380,  1379,   821,  2644,  2614,  5123,  2931,   821,
    3346,  3876,  1880,  4829,  5089,  1909,  3263,   877,  5224,  5136,
    5132,  4811,  5240,  5229,   872,  3419,  2072,  3532,  5242,  1836,
    3420,  4590,  1020,  4727,  3421,  3422,  1880,  4936,  5097,  4162,
    4337,  4897,  4937,  1788,  1482,  4899,  4899,  2215,  4597,  4830,
    4705,  1798,  1799,  1800,  1801,  1802,  4138,   872,  3969,  1880,
    4805,  4743,  2934,   841,  2651,  3355,  3909,  1576,  1577,  2034,
    4898,  4898,  3910,  4578,  4305,  5275,  2214,  3907,  4566,  5123,
    2827,  4571,  1578,  1880,  1572,  1579,  1459,  4898,  2073,  5184,
    3466,  3362,  2298,  2751,  5186,   114,  3467,   112,  2842,  3663,
     879,  5095,  3917,  4375,  5275,  2074,  4616,  5258,  5278,  4462,
    4575,   872,  5135,  4728,  3528,  4504,  2798,  3713,   821,  1910,
    5093,  2121,  3456,   962,   963,  2809,  2120,  2795,  5123,  1373,
    5123,  4897,  4897,  1619,  1620,   923,  2794,  2024,  3390,  3500,
    3195,  4713,  3196,  2257,  4815,  1378,  2084,   670,   671,   954,
    4898,   821,  1562,  4899,  4899,  4468,  5123,  4204,  1803,  1804,
    1805,  1806,  1765,  1766,  1767,  4898,  5102,  -849,  -849,  1622,
    4899,  4687,  4507,  4149,     0,  3670,     0,  -849,  4898,     0,
       0,     0,     0,  1625,     0,     0,     0,     0,     0,  1626,
    1627,     0,     0,  1628,     0,     0,     0,     0,  5123,  5123,
       0,     0,     0,  5281,     0,     0,     0,  4898,     0,   821,
       0,     0,     0,     0,     0,     0,     0,  1630,     0,  4898,
    4898,     0,     0,     0,     0,     0,     0,     0,   821,     0,
       0,  1631,     0,  4899,     0,  1632,     0,  4898,     0,  4897,
    4897,     0,  3749,  3750,  3751,  3752,     0,  4898,  4899,     0,
       0,     0,  4898,     0,     0,     0,  4897,     0,     0,     0,
       0,  4899,     0,     0,  1637,     0,  4898,     0,  4898,     0,
    1807,     0,  1808,  1809,  1810,     0,     0,     0,   821,     0,
    1338,  1811,     0,     0,  4898,     0,  4898,     0,  4898,     0,
    4899,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4899,  4899,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4898,     0,     0,     0,     0,  4897,
    4899,     0,  1234,     0,     0,  1235,     0,     0,     0,     0,
    4899,     0,     0,     0,  4897,  4899,  4898,  4898,   873,     0,
       0,  1641,     0,     0,     0,     0,     0,  4897,  1642,  4899,
       0,  4899,     0,     0,     0,     0,  4898,  4898,     0,     0,
       0,  4898,  1812,     0,     0,     0,  1338,  4899,  1643,  4899,
       0,  4899,     0,     0,     0,     0,  4897,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4897,  4897,
       0,     0,     0,     0,     0,     0,     0,  4899,     0,     0,
       0,     0,     0,     0,     0,     0,  4897,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4897,     0,     0,  4899,
    4899,  4897,     0,     0,     0,  1813,  1814,     0,  1645,     0,
       0,     0,     0,  1117,     0,  4897,     0,  4897,     0,  4899,
    4899,     0,     0,     0,  4899,     0,  1646,     0,     0,     0,
       0,     0,     0,  4897,     0,  4897,     0,  4897,     0,     0,
       0,     0,     0,  1148,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1165,
       0,     0,     0,  4897,     0,     0,     0,     0,   873,     0,
       0,     0,     0,     0,     0,  1619,  1620,     0,     0,     0,
       0,  1650,     0,   821,     0,  4897,  4897,   821,     0,     0,
    1651,     0,     0,     0,     0,   821,     0,   821,     0,     0,
       0,     0,     0,     0,     0,  4897,  4897,     0,     0,     0,
    4897,  1622,     0,     0,     0,     0,     0,     0,     0,  1225,
       0,     0,     0,     0,     0,  1625,     0,     0,     0,     0,
       0,  1626,  1627,     0,     0,  1628,     0,   821,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1815,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1630,
       0,     0,     0,  1237,  1816,  1817,     0,     0,     0,  1656,
       0,     0,     0,  1631,     0,     0,     0,  1632,     0,     0,
       0,   821,   821,   821,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1637,     0,     0,     0,
       0,   821,     0,     0,     0,     0,   821,     0,     0,     0,
       0,     0,     0,     0,  1340,     0,  1657,  1658,  1659,     0,
       0,     0,     0,  1660,     0,   821,     0,     0,     0,     0,
       0,     0,   821,     0,     0,     0,     0,   821,     0,   821,
    1661,     0,     0,  1662,     0,   821,     0,   821,   821,  2432,
       0,     0,     0,     0,   873,   797,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1641,     0,     0,     0,     0,     0,  1664,
    1642,     0,     0,     0,     0,     0,     0,   873,     0,     0,
       0,     0,     0,  1338,     0,     0,     0,     0,     0,     0,
    1643,     0,     0,     0,     0,     0,     0,     0,  2048,     0,
       0,     0,  2433,  2434,  2435,  2436,  2437,  1523,  1524,  2438,
    2439,  2440,     0,  2441,  2442,  2443,  2444,  2445,  2446,  2447,
    2448,  2449,  2450,     0,  2451,  2452,     0,     0,     0,     0,
       0,   873,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1645,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4184,  4185,     0,     0,     0,     0,     0,  1646,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1667,     0,     0,     0,     0,   872,     0,     0,   872,
       0,     0,     0,     0,     0,     0,   954,   821,     0,     0,
       0,   821,     0,     0,   954,  1670,     0,   821,     0,     0,
    1769,  1770,     0,  1650,     0,     0,     0,   821,     0,  1780,
    1781,     0,  1651,  1784,  1785,     0,     0,     0,     0,     0,
       0,     0,  1793,  1794,     0,  1795,  1796,     0,     0,     0,
    1820,     0,  1525,  1526,  1829,  1830,  1831,  1832,     0,  1834,
       0,     0,     0,     0,     0,     0,     0,  1842,  1843,     0,
    1846,  1847,     0,     0,     0,     0,     0,  1851,     0,     0,
    1854,  1855,  1856,  1857,  1858,  1859,     0,  1861,     0,     0,
    1864,  1865,     0,     0,     0,  1868,     0,     0,     0,  1871,
    1875,  1876,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1656,  1883,  1884,  1885,     0,     0,     0,     0,     0,
    1891,  1892,  1893,  1894,  1895,     0,     0,     0,     0,     1,
       0,     0,     2,   872,     0,     0,     0,     0,     0,  1908,
     797,     0,     0,     0,     0,     0,     0,  1912,     0,  1913,
    1914,     4,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     5,     6,     0,  1657,  1658,
    1659,     0,     0,     7,     0,  1660,     0,     0,     8,     9,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1954,     0,  1661,     0,    10,  1662,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2986,     0,     0,  2986,
    2986,     0,     0,     0,    11,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1664,     0,     0,     0,     0,    12,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    15,    16,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    18,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2095,
       0,     0,     0,     0,     0,    19,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2453,  2454,
     821,     0,     0,    20,     0,    21,     0,     0,     0,     0,
      22,     0,  2134,    23,     0,     0,     0,     0,     0,  2455,
       0,  2456,  2457,  2458,  2459,  2460,     0,     0,    24,     0,
       0,     0,     0,  1667,     0,     0,    25,     0,     0,    26,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1670,     0,    27,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2210,     0,     0,     0,     0,     0,    28,   821,     0,     0,
      29,     0,     0,     0,     0,     0,   821,   821,     0,  2229,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   821,   821,     0,   821,
       0,     0,   821,   821,   821,   821,   821,     0,     0,   821,
       0,     0,     0,     0,     0,     0,     0,     0,   821,     0,
       0,     0,     0,   821,     0,   821,     0,   821,   821,  2283,
     821,   821,     0,     0,     0,   821,   821,   821,     0,     0,
       0,   821,   821,   821,     0,   821,     0,   821,     0,   821,
       0,   821,     0,   821,     0,     0,     0,     0,   821,     0,
       0,     0,     0,     0,     0,     0,     0,    30,     0,     0,
       0,     0,     0,     0,   821,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   821,     0,   821,     0,   821,     0,     0,     0,   821,
      31,     0,     0,     0,     0,   821,   821,     0,     0,     0,
       0,    32,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    33,     0,     0,    34,     0,    35,     0,
       0,    36,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    37,    38,     0,  2713,  2714,     0,     0,     0,     0,
       0,    39,     0,    40,     0,     0,     0,     0,     0,     0,
       0,     0,    41,     0,     0,     0,     0,     0,    42,     0,
       0,     0,     0,     0,     0,     0,    43,     0,     0,     0,
     821,    44,    45,    46,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    47,     0,   873,     0,     0,   873,
       0,    48,     0,     0,     0,     0,     0,     0,   872,   872,
     872,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    49,     0,     0,  2512,     0,     0,     0,  2516,     0,
       0,     0,     0,     0,     0,     0,     0,   954,  2512,     0,
       0,     0,     0,     0,     0,    50,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    51,     0,     0,
       0,    52,     0,     0,     0,     0,     0,     0,     0,    53,
       0,     0,     0,     0,     0,    54,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   821,     0,     0,     0,
       0,     0,    55,     0,     0,     0,   821,     0,   821,     0,
      56,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2587,  2589,  2591,     0,     0,     0,     0,     0,
       0,    61,     0,   873,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2906,
       0,  2906,     0,  2921,  2922,     0,  2924,  2625,     0,     0,
       0,     0,     0,     0,     0,     0,  3208,     0,    62,   821,
       0,     0,  1619,  1620,     0,     0,  2633,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2637,     0,
    2638,     0,     0,     0,     0,     0,     0,     0,  4764,     0,
       0,     0,     0,  2981,     0,     0,     0,  2987,  1622,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    63,
       0,     0,  1625,     0,     0,     0,     0,     0,  1626,  1627,
       0,     0,  1628,     0,     0,     0,     0,  3029,  3030,  3031,
    3032,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1630,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3066,
    1631,     0,     0,     0,  1632,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  -549,     0,  1637,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4841,     0,     0,  4844,
    4845,  4846,  4847,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3579,  3580,
       0,     0,     0,     0,  3581,     0,  3582,     0,  3583,  3584,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3585,     0,  2806,     0,
       0,     0,  2134,     0,     0,     0,  3209,     0,     0,     0,
    1641,     0,     0,     0,     0,     0,     0,  1642,  2813,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4940,     0,     0,     0,     0,  1643,     0,     0,
       0,  4950,  4951,     0,     0,     0,  3586,     0,     0,  3587,
    4959,     0,     0,   872,     0,     0,     0,  3588,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3249,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   821,     0,  3589,     0,     0,     0,  1645,     0,   821,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1646,     0,     0,     0,     0,
       0,  3590,     0,  3591,     0,     0,   821,   821,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3592,
    3593,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   821,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   821,     0,   821,     0,   821,     0,     0,     0,
    1650,     0,     0,     0,     0,     0,  1000,     0,     0,  1651,
       0,  3594,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3595,     0,     0,   821,     0,     0,
       0,     0,   821,     0,   821,     0,     0,     0,     0,     0,
       0,     0,     0,  3596,     0,     0,     0,     0,     0,     0,
       0,     0,  3597,  3598,     0,  3599,     0,     0,     0,     0,
       0,  3211,     0,     0,     0,     0,     0,     0,   821,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3392,     0,     0,     0,     0,     0,     0,  1656,     0,
       0,     0,  3600,  3601,  3602,     0,     0,     0,    42,     0,
       0,     0,     0,     0,   821,     0,     0,     0,     0,     0,
       0,  3603,  3604,  3605,     0,     0,     0,     0,  3606,     0,
       0,  3607,     0,     0,     0,     0,     0,     0,   873,   873,
     873,     0,     0,     0,     0,     0,     0,     0,     0,  3608,
    3609,  3123,     0,     0,   821,  1657,  1658,  1659,     0,     0,
       0,     0,  1660,     0,     0,     0,     0,     0,     0,  3457,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1661,
       0,    49,  1662,  3610,  3611,     0,     0,   821,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3254,
       0,     0,     0,     0,  2906,     0,     0,     0,  1664,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3233,     0,
       0,     0,     0,     0,     0,    54,     0,  3241,  3242,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    55,     0,     0,     0,     0,  3269,  3270,     0,
    3271,   821,     0,  3274,  3275,  3276,  3277,  3278,     0,     0,
       0,  3612,     0,     0,     0,  3613,     0,     0,     0,  3284,
       0,     0,     0,     0,  3285,  3516,  3286,  3614,  3287,  3288,
       0,  3289,     0,     0,     0,     0,  3294,  3295,  3296,     0,
       0,     0,  3299,  3300,  3301,     0,  3302,     0,  3304,     0,
    3306,     0,  3308,     0,  3309,     0,     0,     0,  3533,  3312,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3541,
       0,  3548,  3549,  3550,  3551,     0,  3553,  3554,     0,     0,
    1667,     0,     0,     0,     0,     0,     0,  3615,     0,     0,
    3616,     0,     0,  3617,  3618,  3619,  3620,     0,     0,     0,
    3344,     0,     0,     0,  1670,     0,  1954,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1002,
       0,     0,  -549,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3647,     0,     0,  3621,  3622,     0,     0,
       0,     0,     0,     0,     0,     0,  3653,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3623,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2986,
    2986,  3391,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2906,     0,     0,  2906,  2906,
     821,     0,  2906,  2906,  2906,  2906,  2906,  2906,  2906,  2906,
       0,     0,  2906,     0,  2906,     0,  2906,  3709,     0,     0,
    2906,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   821,     0,   821,     0,     0,   821,   821,     0,   821,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     821,     0,     0,  5199,     0,   821,     0,     0,   821,     0,
       0,   821,   821,   873,     0,     0,     0,     1,     0,     0,
       2,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   821,     0,     3,     0,  2210,     0,     4,
       0,     0,     0,  1350,  1423,   821,     0,     0,     0,     0,
       0,     0,     0,     5,     6,     0,     0,     0,     0,     0,
       0,     7,     0,     0,     0,     0,     8,     9,     0,  1424,
     940,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1425, -1987,    10,     0,     0,     0,     0,     0,     0,     0,
       0,   821,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    11,     0,     0,  1426,     0,  1427,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1428,     0,     0,
    2283,     0,     0,     0,    12,   821,   821,     0,     0,     0,
       0,     0,     0,     0,    13,    14,     0,     0,     0,     0,
       0,     0,     0,     0,   821,     0,    15,    16,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    17,
       0,     0,     0,     0,     0, -1979,  1429,     0,     0,     0,
       0,  1430,     0,    18,  1431,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1432,     0,     0,     0,     0,     0,
       0,     0,     0,    19,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1433,     0,  1434,     0,
     821,    20,     0,    21,     0,     0,     0,  1435,    22,  1436,
       0,    23,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    24,     0,     0,     0,
       0,     0,     0,     0,    25,     0,     0,    26,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    27,     0,  3579,
    3580,     0,     0,     0,     0,  3581,     0,  3582,     0,  3583,
    3584,     0,     0,     0,    28,     0,     0,     0,    29,     0,
    1437,     0,     0,     0,     0,     0,     0,  3585,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   821,   821,     0,     0,     0,     0,  4005,     0,     0,
       0,     0,     0,     0,  1438,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4016,     0,     0,     0,
       0,     0,     0,  2986,  2986,     0,     0,  3586,     0,     0,
    3587,  4033,     0,     0,     0,     0,     0,     0,  3588,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3249,     0,     0,
       0,     0,     0,     0,     0,    30,     0,     0,     0,  1439,
       0,     0,     0,     0,  3589,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3787,     0,     0,     0,  1440,     0,    31,     0,
    3790,     0,  3590,     0,  3591,     0,     0,  1441,  1442,    32,
   -1983,  1443,  1444,     0,     0,     0,     0,     0,     0,     0,
    3592,  3593,     0,     0,     0,     0,     0,  3818,  3819,     0,
       0,    33,  1445,     0,    34,     0,    35,     0,   821,    36,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    37,
      38,     0,     0,  3844,     0,     0,     0,     0,   821,    39,
     821,    40,  3594,  3855,     0,  3857,     0,  3859,     0,     0,
      41,     0,     0,     0,     0,  3595,    42,     0,     0,     0,
       0,     0,     0,     0,    43,     0,  1446,     0,     0,    44,
      45,    46,     0,     0,  3596,     0,     0,     0,     0,  1447,
       0,     0,     0,  3597,  3598,     0,  3599,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    47,     0,  2906,     0,     0,     0,     0,    48,
       0, -2679,     0,     0,     0,  1448,     0,     0,     0,  2210,
       0,     0,     0,  3600,  3601,  3602,     0,     0,  4195,    49,
       0, -1987,     0,     0,  1449,     0,     0,     0,     0,     0,
       0,     0,  3603,  3604,  3605,     0,     0,     0,     0,  3606,
       0,   821,  3607,    50, -1983,  3939,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    51,     0,     0,     0,    52,
    3608,  3609,     0,     0,     0,     0,     0,    53,     0,     0,
     821,     0,     0,    54,     0,     0,     0,     0,     0,     0,
       0,     0, -2679,     0,     0,  2134,     0,     0,     0,  1450,
      55,     0,     0,     0,  3610,  3611,     0,     0,    56,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    57,    58,    59,    60,     0,     0,
    3254,     0,     0,     0,     0,     0,     0,     0,     0,    61,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   821,     0,     0,   821,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1615,     0,
     821,     0,     0,  1616,     0,  1617,    62,     0,  1618,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1619,  1620,
       0,     0,  3612,     0,     0,     0,  3613,     0,     0,     0,
       0,     0,  4047,     0,     0,     0,     0,     0,  3614,     0,
    1451,   821,     0,  1452,  1453,  1454,  1455,     0,  1456,  1621,
       0,     0,  -849,  -849,  1622,  1623,     0,    63,     0,     0,
    1624,     0,  -849,     0,     0,     0,     0,     0,  1625,     0,
       0,     0,     0,     0,  1626,  1627,     0,     0,  1628,     0,
       0,     0,     0,     0,     0,     0,     0,  1629,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3615,     0,
       0,  3616,  1630,     0,  3617,  3618,  3619,  3620,     0,     0,
       0,     0,     0,     0,     0,     0,  1631,     0,     0,     0,
    1632,     0,     0,     0,     0,     0,  4370,     0,  1633,  1634,
       0,     0,     0,     0,     0,  1635,     0,     0,     0,     0,
       0,     0,     0,  1636,     0,     0,     0,  3621,  3622,  1637,
       0,     0,     0,     0,     0,   821,     0,     0,     0,     0,
    1638,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3623,     0,     0,     0,     0,
     821,     0,     0,  1639,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4426,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1640,   821,  1641,     0,     0,     0,
    4894,     0,     0,  1642,     0,     0,  4905,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1643,     0,     0,     0,   821,     0,     0,
       0,  4219,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1644,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4230,     0,  2283,     0,     0,  4235,  4236,  2906,
    2906,  2906,  2906,     0,     0,     0,     0,     0,     0,     0,
    4005,  4243,     0,  1645,   821,     0,  4245,     0,     0,  4246,
    4894,  4894,  4247,  4248,  4516,     0,     0,     0,     0,     0,
       0,  1646,     0,     0,     0,  1647,     0,     0,     0,     0,
       0,     0,     0,     0,  4260,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   821,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1648,     0,   872,     0,     0,     0,  1649,
       0,     0,     0,     0,     0,     0,  1650,     0,     0,     0,
       0,     0,     0,     0,   821,  1651,     0,     0,     0,     0,
       0,     0,  2210,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   821,     0,   821,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   821,  1652,  4894,  4894,
       0,     0,     0,     0,     0,     0,  4331,  4334,     0,     0,
       0,     0,  1653,  1654,  1655,  4894,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4347,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4604,     0,     0,     0,
       0,     0,     0,     0,  1656,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   821,     0,  4894,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4392,     0,  4894,   821,     0,     0,     0,     0,     0,
       0,  1657,  1658,  1659,     0,     0,  4894,     0,  1660,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   821,  1661,     0,     0,  1662,     0,
       0,     0,     0,     0,   821,  4894,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4894,  4894,     0,
       0,  1663,     0,     0,     0,     0,  4662,     0,     0,     0,
       0,     0,     0,     0,  1664,  4894,     0,     0,     0,  2906,
       0,     0,   821,     0,     0,  4894,     0,     0,     0,     0,
    4894,     0,     0,     0,     0,     0,     0,   821,     0,     0,
    4689,     0,  4471,  4472,  4894,     0,  4894,     0,  1665,     0,
       0,  1666,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4894,     0,  4894,     0,  4894,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4894,     0,     0,     0,     0,  1615,     0,     0,
       0,     0,  1616,     0,  1617,     0,     0,  1618,     0,     0,
       0,     0,     0,     0,  4894,  4894,     0,  1619,  1620,     0,
       0,   821,     0,     0,     0,     0,     0,     0,     0,   821,
       0,     0,     0,     0,  4894,  4894,  1667,  1668,  1669,  4894,
       0,     0,     0,     0,     0,     0,     0,     0,  1621,     0,
       0,     0,     0,  1622,  1623,     0,     0,  4763,     0,  1624,
    1670,     0,     0,     0,     0,     0,     0,  1625,     0,     0,
       0,     0,     0,  1626,  1627,     0,     0,  1628,     0,     0,
       0,     0,     0,     0,     0,     0,  1629,     0,     0,  2210,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1630,     0,     0,     0,     0,     0,     0,     0,  4584,
       0,  4586,     0,     0,     0,  1631,     0,     0,     0,  1632,
       0,     0,     0,     0,     0,     0,     0,  1633,  1634,     0,
       0,     0,  3094,     0,  1635,     0,     0,  1616,     0,  1617,
       0,     0,  1636,     0,     0,     0,     0,     0,  1637,     0,
       0,     0,  1619,  1620,     0,     0,     0,     0,     0,  1638,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1639,  1621,     0,     0,     0,     0,  1622,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1625,     0,     0,     0,     0,     0,  1626,  1627,
       0,     0,  1628,     0,     0,     0,     0,     0,     0,     0,
       0,  1629,  4650,  1640,     0,  1641,     0,     0,     0,     0,
       0,     0,  1642,     0,     0,     0,  1630,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1631,  4656,  1643,     0,  1632,     0,     0,     0,     0,     0,
       0,     0,  1633,     0,     0,     0,     0,     0,     0,  3095,
    4949,     0,     0,     0,     0,  1644,     0,  1636,     0,     0,
       0,     0,     0,  1637,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1645,     0,     0,     0,     0,  1639,     0,     0,
       0,     0,     0,     0,     0,  2283,     0,     0,  4700,     0,
    1646,     0,     0,     0,  1647,     0,     0,     0,     0,     0,
       0,  4331,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   873,     0,     0,     0,     0,
    1641,     0,     0,     0,     0,     0,     0,  1642,     0,     0,
       0,     0,  1648,     0,     0,     0,     0,     0,  1649,  5034,
    5035,     0,  4331,     0,     0,  1650,     0,  1643,     0,     0,
       0,     0,     0,     0,  1651,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1644,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1652,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1653,  1654,  1655,     0,     0,     0,  1645,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1646,     0,     0,     0,  1647,
       0,     0,     0,  1656,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2283,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1649,     0,     0,     0,     0,     0,     0,
    1650,     0,     0,     0,     0,     0,     0,     0,     0,  1651,
    1657,  1658,  1659,     0,     0,     0,     0,  1660,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1661,     0,     0,  1662,     0,     0,
       0,     0,     0,     0,     0,     0,  4864,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1653,     0,     0,     0,
    1663,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1664,     0,     0,     0,     0,  4920,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1656,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1665,     0,     0,
    1666,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4964,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1657,  1658,  1659,     0,     0,
       0,     0,  1660,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1661,
       0,     0,  1662,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5001,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1667,  1668,  1669,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1664,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1670,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5049,     0,  5050,     0,     0,
       0,     0,  1665,     0,     0,  1666,     0,  5058,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5121,     0,     0,
    1667,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5126,     0,     0,     0,     0,
       0,     0,     0,     0,  1670,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5145,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   198,   199,     0,   675,   201,
     202,   203,   204,  2127,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   676,     0,   208,   209,   210,   211,   677,
     213,     0,   214,  5176,     0,  2128,   215,   679,   680,   681,
     216,   682,     0,   217,   218,   219,     0,   220,  5191,   221,
     222,     0,     0,   223,   683,   684,   224,   225,     0,   226,
     227,   685,   686,   229,     0,   230,   231,   232,   233,   687,
     235,     0,   688,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,   689,   690,   256,     0,
       0,     0,   691,   257,   692,     0,   258,   693,   694,     0,
     259,   260,   261,   695,   696,   697,     0,     0,     0,     0,
     698,   264,   699,     0,     0,  2129,   265,   266,     0,   267,
       0,     0,  5276,     0,     0,   268,   269,   270,   271,   272,
    2210,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,   701,     0,   291,   292,   293,   294,   295,   702,   703,
     296,   297,     0,   298,   299,   300,   301,   302,   704,     0,
     303,   304,  2130,     0,     0,   705,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   706,   311,   707,     0,   313,
       0,   314,     0,   708,     0,   315,   316,     0,   317,   709,
       0,   318,   319,     0,     0,     0,   710,   321,   322,   323,
     711,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,   712,   328,   329,   330,   713,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,   714,   341,   342,     0,     0,     0,     0,     0,   715,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
     716,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,   717,
     371,   372,   373,   374,   718,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   719,   382,     0,     0,   720,
     384,   721,   385,     0,   386,   722,   723,   724,   725,   726,
     391,   392,   393,   394,   395,     0,   727,   396,   397,     0,
       0,   398,   399,   400,   401,   402,   728,   729,   730,   403,
     404,     0,   731,   732,   405,     0,   406,   407,  2131,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,   733,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   734,
     735,   426,   736,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   737,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,   738,   739,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   740,     0,   741,   470,   471,
     472,   473,     0,   474,  2132,   743,   476,   477,   478,   479,
       0,   744,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,   745,   746,   510,   511,     0,     0,
     512,   513,   747,   515,   516,   517,   748,   749,   518,   519,
     520,   521,   750,   522,   523,     0,     0,   524,   525,   526,
     527,     0,   751,   528,   529,     0,   752,   753,   754,   755,
       0,     0,     0,     0,     0,   534,   535,     0,   756,   757,
     758,   537,   538,     0,   759,   539,   540,   760,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   761,   549,     0,     0,   762,   763,   764,   550,
     765,   551,     0,     0,   552,   766,     0,   767,   553,     0,
     554,   555,   768,   769,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     770,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,   771,   772,     0,   572,   573,
     574,   773,   575,   576,   577,     0,   578,   774,   775,   579,
     776,   580,     0,   777,   778,   779,   780,   781,   581,   582,
       0,   782,   583,   783,   584,   784,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,  2133,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,     0,   627,   628,   629,   630,   631,   632,
     633,     0,     0,     0,     0,     0,   785,   786,     0,     0,
       0,     0,   788,     0,   789,     0,     0,     0,   790,     0,
       0,     0,   791,   792,   198,   199,     0,   675,   201,   202,
     203,   204,     0,     0,   205,     0,     0,     0,     0,   206,
       0,     0,   676,     0,   208,   209,   210,   211,   677,   213,
       0,   214,     0,     0,   678,   215,   679,   680,   681,   216,
     682,     0,   217,   218,   219,     0,   220,     0,   221,   222,
       0,     0,   223,   683,   684,   224,   225,     0,   226,   227,
     685,   686,   229,     0,   230,   231,   232,   233,   687,   235,
       0,   688,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,     0,   251,
     252,   253,   254,   255,     0,   689,   690,   256,     0,     0,
       0,   691,   257,   692,     0,   258,   693,   694,     0,   259,
     260,   261,   695,   696,   697,     0,     0,     0,     0,   698,
     264,   699,     0,     0,   700,   265,   266,     0,   267,     0,
       0,     0,     0,     0,   268,   269,   270,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,   276,     0,     0,
       0,   277,     0,   278,   279,     0,   280,   281,   282,     0,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
     701,     0,   291,   292,   293,   294,   295,   702,   703,   296,
     297,     0,   298,   299,   300,   301,   302,   704,     0,   303,
     304,     0,     0,     0,   705,   306,     0,   307,     0,     0,
       0,   308,     0,   309,   706,   311,   707,     0,   313,     0,
     314,     0,   708,     0,   315,   316,     0,   317,   709,     0,
     318,   319,     0,     0,     0,   710,   321,   322,   323,   711,
       0,   324,   325,   326,     0,     0,   327,     0,     0,     0,
     712,   328,   329,   330,   713,     0,     0,   331,     0,     0,
       0,   332,   333,     0,   334,   335,     0,     0,     0,   336,
       0,   337,     0,     0,   338,   339,     0,     0,   340,     0,
     714,   341,   342,     0,     0,     0,     0,     0,   715,   344,
       0,   345,     0,   346,     0,   347,   348,     0,     0,   716,
       0,     0,     0,     0,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,   370,   717,   371,
     372,   373,   374,   718,   375,   376,     0,     0,     0,     0,
     377,   378,   379,   380,   719,   382,     0,     0,   720,   384,
     721,   385,     0,   386,   722,   723,   724,   725,   726,   391,
     392,   393,   394,   395,     0,   727,   396,   397,     0,     0,
     398,   399,   400,   401,   402,   728,   729,   730,   403,   404,
       0,   731,   732,   405,     0,   406,   407,     0,   408,   409,
     410,     0,     0,   411,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   412,   413,   414,   733,   415,     0,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   734,   735,
     426,   736,   427,     0,   428,   429,   430,     0,   431,     0,
     432,   433,   434,   435,   436,     0,   737,   438,   439,     0,
       0,   440,     0,     0,     0,   441,   442,     0,   443,   444,
       0,     0,   445,   446,   447,   448,   449,     0,   450,   451,
       0,   452,   453,   454,   738,   739,   455,   456,   457,   458,
     459,   460,   461,   462,     0,   463,     0,   464,   465,     0,
     466,   467,   468,     0,   740,     0,   741,   470,   471,   472,
     473,     0,   474,   742,   743,   476,   477,   478,   479,     0,
     744,   481,    42,     0,     0,   482,   483,   484,   485,     0,
       0,     0,   486,     0,     0,     0,   487,     0,   488,   489,
     490,   491,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,   499,     0,   500,     0,     0,
     501,     0,     0,   502,     0,   503,     0,   504,   505,   506,
     507,   508,   509,   745,   746,   510,   511,     0,     0,   512,
     513,   747,   515,   516,   517,   748,   749,   518,   519,   520,
     521,   750,   522,   523,     0,    49,   524,   525,   526,   527,
       0,   751,   528,   529,     0,   752,   753,   754,   755,     0,
       0,     0,     0,     0,   534,   535,     0,   756,   757,   758,
     537,   538,     0,   759,   539,   540,   760,   541,   542,     0,
     543,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   761,   549,     0,     0,   762,   763,   764,   550,  1222,
     551,     0,     0,   552,   766,     0,   767,   553,     0,   554,
     555,   768,   769,     0,     0,     0,    55,     0,     0,   558,
     559,   560,     0,   561,   562,   563,   564,     0,     0,   770,
       0,     0,   566,   567,   568,   569,   570,     0,   571,     0,
       0,     0,     0,     0,   771,   772,     0,   572,   573,   574,
     773,   575,   576,   577,     0,   578,   774,   775,   579,   776,
     580,     0,   777,   778,   779,   780,   781,   581,   582,     0,
     782,   583,   783,   584,   784,   585,   586,     0,     0,     0,
     587,   588,   589,   590,   591,   592,   593,   594,     0,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,     0,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,     0,   627,   628,   629,   630,   631,   632,   633,
       0,     0,     0,     0,     0,   785,   786,     0,     0,     0,
       0,   788,     0,   789,     0,     0,     0,   790,     0,     0,
       0,   791,   792,   198,   199,     0,   675,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   676,     0,   208,   209,   210,   211,   677,   213,     0,
     214,     0,     0,   678,   215,   679,   680,   681,   216,   682,
       0,   217,   218,   219,  1872,   220,     0,   221,   222,     0,
       0,   223,   683,   684,   224,   225,     0,   226,   227,   685,
     686,   229,     0,   230,   231,   232,   233,   687,   235,     0,
     688,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,   689,   690,   256,     0,     0,     0,
     691,   257,   692,     0,   258,   693,   694,     0,   259,   260,
     261,   695,   696,   697,     0,     0,     0,     0,   698,   264,
     699,     0,     0,   700,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,   701,
       0,   291,   292,   293,   294,   295,   702,   703,   296,   297,
       0,   298,   299,   300,   301,   302,   704,     0,   303,   304,
       0,     0,     0,   705,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   706,   311,   707,     0,   313,     0,   314,
       0,   708,     0,   315,   316,     0,   317,   709,     0,   318,
     319,     0,     0,     0,   710,   321,   322,   323,   711,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,   712,
     328,   329,   330,   713,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,  1873,   340,     0,   714,
     341,   342,     0,     0,     0,     0,     0,   715,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,   716,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,   717,   371,   372,
     373,   374,   718,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   719,   382,     0,     0,   720,   384,   721,
     385,     0,   386,   722,   723,   724,   725,   726,   391,   392,
     393,   394,   395,     0,   727,   396,   397,     0,     0,   398,
     399,   400,   401,   402,   728,   729,   730,   403,   404,     0,
     731,   732,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,   733,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   734,   735,   426,
     736,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   737,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,   738,   739,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   740,     0,   741,   470,   471,   472,   473,
       0,   474,   742,   743,   476,   477,   478,   479,     0,   744,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,   745,   746,   510,   511,     0,     0,   512,   513,
     747,   515,   516,   517,   748,   749,   518,   519,   520,   521,
     750,   522,   523,     0,     0,   524,   525,   526,   527,     0,
     751,   528,   529,     0,   752,   753,   754,   755,     0,     0,
       0,     0,  1874,   534,   535,     0,   756,   757,   758,   537,
     538,     0,   759,   539,   540,   760,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     761,   549,     0,     0,   762,   763,   764,   550,   765,   551,
       0,     0,   552,   766,     0,   767,   553,     0,   554,   555,
     768,   769,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   770,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,   771,   772,     0,   572,   573,   574,   773,
     575,   576,   577,     0,   578,   774,   775,   579,   776,   580,
       0,   777,   778,   779,   780,   781,   581,   582,     0,   782,
     583,   783,   584,   784,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,     0,   627,   628,   629,   630,   631,   632,   633,     0,
       0,     0,     0,     0,   785,   786,     0,     0,     0,     0,
     788,     0,   789,     0,     0,     0,   790,     0,     0,     0,
     791,   792,   198,   199,     0,   675,   201,   202,   203,   204,
       0,     0,   205,     0,     0,     0,     0,   206,     0,     0,
     676,     0,   208,   209,   210,   211,   677,   213,     0,   214,
       0,     0,   678,   215,   679,   680,   681,   216,   682,     0,
     217,   218,   219,     0,   220,     0,   221,   222,     0,     0,
     223,   683,   684,   224,   225,     0,   226,   227,   685,   686,
     229,     0,   230,   231,   232,   233,   687,   235,     0,   688,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   250,     0,   251,   252,   253,
     254,   255,     0,   689,   690,   256,     0,     0,     0,   691,
     257,   692,     0,   258,   693,   694,     0,   259,   260,   261,
     695,   696,   697,     0,     0,     0,     0,   698,   264,   699,
       0,     0,   700,   265,   266,     0,   267,     0,     0,     0,
       0,     0,   268,   269,   270,   271,   272,     0,     0,     0,
     273,     0,     0,   274,   275,   276,     0,     0,     0,   277,
       0,   278,   279,     0,   280,   281,   282,     0,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,   701,     0,
     291,   292,   293,   294,   295,   702,   703,   296,   297,     0,
     298,   299,   300,   301,   302,   704,     0,   303,   304,     0,
       0,     0,   705,   306,     0,   307,     0,     0,     0,   308,
       0,   309,   706,   311,   707,     0,   313,     0,   314,     0,
     708,     0,   315,   316,     0,   317,   709,     0,   318,   319,
       0,     0,     0,   710,   321,   322,   323,   711,     0,   324,
     325,   326,     0,     0,   327,     0,     0,     0,   712,   328,
     329,   330,   713,     0,     0,   331,     0,     0,     0,   332,
     333,     0,   334,   335,     0,     0,     0,   336,     0,   337,
       0,     0,   338,   339,     0,     0,   340,     0,   714,   341,
     342,     0,     0,     0,     0,     0,   715,   344,     0,   345,
       0,   346,     0,   347,   348,     0,     0,   716,     0,     0,
       0,     0,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,   370,   717,   371,   372,   373,
     374,   718,   375,   376,     0,     0,     0,     0,   377,   378,
     379,   380,   719,   382,     0,     0,   720,   384,   721,   385,
       0,   386,   722,   723,   724,   725,   726,   391,   392,   393,
     394,   395,     0,   727,   396,   397,     0,     0,   398,   399,
     400,   401,   402,   728,   729,   730,   403,   404,     0,   731,
     732,   405,     0,   406,   407,     0,   408,   409,   410,     0,
       0,   411,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   412,   413,   414,   733,   415,     0,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   734,   735,   426,   736,
     427,     0,   428,   429,   430,     0,   431,     0,   432,   433,
     434,   435,   436,     0,   737,   438,   439,     0,     0,   440,
       0,     0,     0,   441,   442,     0,   443,   444,     0,     0,
     445,   446,   447,   448,   449,     0,   450,   451,     0,   452,
     453,   454,   738,   739,   455,   456,   457,   458,   459,   460,
     461,   462,     0,   463,     0,   464,   465,     0,   466,   467,
     468,     0,   740,     0,   741,   470,   471,   472,   473,     0,
     474,   742,   743,   476,   477,   478,   479,     0,   744,   481,
       0,     0,     0,   482,   483,   484,   485,     0,     0,     0,
     486,     0,     0,     0,   487,     0,   488,   489,   490,   491,
       0,   492,   493,   494,   495,   496,     0,     0,     0,     0,
       0,   497,   498,   499,     0,   500,     0,     0,   501,     0,
       0,   502,     0,   503,     0,   504,   505,   506,   507,   508,
     509,   745,   746,   510,   511,     0,     0,   512,   513,   747,
     515,   516,   517,   748,   749,   518,   519,   520,   521,   750,
     522,   523,     0,     0,   524,   525,   526,   527,     0,   751,
     528,   529,     0,   752,   753,   754,   755,     0,     0,     0,
       0,     0,   534,   535,     0,   756,   757,   758,   537,   538,
       0,   759,   539,   540,   760,   541,   542,     0,   543,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   761,
     549,     0,     0,   762,   763,   764,   550,   765,   551,     0,
       0,   552,   766,     0,   767,   553,     0,   554,   555,   768,
     769,     0,     0,     0,     0,     0,     0,   558,   559,   560,
       0,   561,   562,   563,   564,     0,     0,   770,     0,     0,
     566,   567,   568,   569,   570,     0,   571,     0,     0,     0,
       0,     0,   771,   772,     0,   572,   573,   574,   773,   575,
     576,   577,     0,   578,   774,   775,   579,   776,   580,     0,
     777,   778,   779,   780,   781,   581,   582,     0,   782,   583,
     783,   584,   784,   585,   586,     0,     0,     0,   587,   588,
     589,   590,   591,   592,   593,   594,     0,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,     0,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
       0,   627,   628,   629,   630,   631,   632,   633,     0,     0,
       0,     0,     0,   785,   786,   787,     0,     0,     0,   788,
       0,   789,     0,     0,     0,   790,     0,     0,     0,   791,
     792,   198,   199,     0,   675,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   676,
       0,   208,   209,   210,   211,   677,   213,     0,   214,     0,
       0,   678,   215,   679,   680,   681,   216,   682,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
     683,   684,   224,   225,     0,   226,   227,   685,   686,   229,
       0,   230,   231,   232,   233,   687,   235,     0,   688,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,   689,   690,   256,     0,     0,     0,   691,   257,
     692,     0,   258,   693,   694,     0,   259,   260,   261,   695,
     696,   697,     0,     0,     0,     0,   698,   264,   699,     0,
       0,   700,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   701,     0,   291,
     292,   293,   294,   295,   702,   703,   296,   297,     0,   298,
     299,   300,   301,   302,   704,     0,   303,   304,     0,     0,
       0,   705,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   706,   311,   707,     0,   313,     0,   314,     0,   708,
       0,   315,   316,     0,   317,   709,     0,   318,   319,     0,
       0,     0,   710,   321,   322,   323,   711,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,   712,   328,   329,
     330,   713,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,   714,   341,   342,
       0,     0,     0,     0,     0,   715,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,   716,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,   717,   371,   372,   373,   374,
     718,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   719,   382,     0,     0,   720,   384,   721,   385,     0,
     386,   722,   723,   724,   725,   726,   391,   392,   393,   394,
     395,     0,   727,   396,   397,     0,     0,   398,   399,   400,
     401,   402,   728,   729,   730,   403,   404,     0,   731,   732,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,   733,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   734,   735,   426,   736,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   737,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,   738,   739,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   740,     0,   741,   470,   471,   472,   473,     0,   474,
     742,   743,   476,   477,   478,   479,     0,   744,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
     745,   746,   510,   511,     0,     0,   512,   513,   747,   515,
     516,   517,   748,   749,   518,   519,   520,   521,   750,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   751,   528,
     529,     0,   752,   753,   754,   755,     0,     0,     0,     0,
       0,   534,   535,     0,   756,   757,   758,   537,   538,     0,
     759,   539,   540,   760,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   761,   549,
       0,     0,   762,   763,   764,   550,   765,   551,     0,     0,
     552,   766,     0,   767,   553,     0,   554,   555,   768,   769,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   770,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,   771,   772,     0,   572,   573,   574,   773,   575,   576,
     577,     0,   578,   774,   775,   579,   776,   580,     0,   777,
     778,   779,   780,   781,   581,   582,     0,   782,   583,   783,
     584,   784,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,     0,
     627,   628,   629,   630,   631,   632,   633,     0,     0,     0,
       0,     0,   785,   786,  2530,     0,     0,     0,   788,     0,
     789,     0,     0,     0,   790,     0,     0,     0,   791,   792,
     198,   199,     0,   675,   201,   202,   203,   204,     0,     0,
     205,     0,     0,     0,     0,   206,     0,     0,   676,     0,
     208,   209,   210,   211,   677,   213,     0,   214,     0,     0,
     678,   215,   679,   680,   681,   216,   682,     0,   217,   218,
     219,     0,   220,     0,   221,   222,     0,     0,   223,   683,
     684,   224,   225,     0,   226,   227,   685,   686,   229,     0,
     230,   231,   232,   233,   687,   235,     0,   688,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,     0,   251,   252,   253,   254,   255,
       0,   689,   690,   256,     0,     0,     0,   691,   257,   692,
       0,   258,   693,   694,     0,   259,   260,   261,   695,   696,
     697,     0,     0,     0,     0,   698,   264,   699,     0,     0,
     700,   265,   266,     0,   267,     0,     0,     0,     0,     0,
     268,   269,   270,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,   276,     0,     0,     0,   277,     0,   278,
     279,     0,   280,   281,   282,     0,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,   701,     0,   291,   292,
     293,   294,   295,   702,   703,   296,   297,     0,   298,   299,
     300,   301,   302,   704,     0,   303,   304,     0,     0,     0,
     705,   306,  2586,   307,     0,     0,     0,   308,     0,   309,
     706,   311,   707,     0,   313,     0,   314,     0,   708,     0,
     315,   316,     0,   317,   709,     0,   318,   319,     0,     0,
       0,   710,   321,   322,   323,   711,     0,   324,   325,   326,
       0,     0,   327,     0,     0,     0,   712,   328,   329,   330,
     713,     0,     0,   331,     0,     0,     0,   332,   333,     0,
     334,   335,     0,     0,     0,   336,     0,   337,     0,     0,
     338,   339,     0,     0,   340,     0,   714,   341,   342,     0,
       0,     0,     0,     0,   715,   344,     0,   345,     0,   346,
       0,   347,   348,     0,     0,   716,     0,     0,     0,     0,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,   370,   717,   371,   372,   373,   374,   718,
     375,   376,     0,     0,     0,     0,   377,   378,   379,   380,
     719,   382,     0,     0,   720,   384,   721,   385,     0,   386,
     722,   723,   724,   725,   726,   391,   392,   393,   394,   395,
       0,   727,   396,   397,     0,     0,   398,   399,   400,   401,
     402,   728,   729,   730,   403,   404,     0,   731,   732,   405,
       0,   406,   407,     0,   408,   409,   410,     0,     0,   411,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   412,
     413,   414,   733,   415,     0,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   734,   735,   426,   736,   427,     0,
     428,   429,   430,     0,   431,     0,   432,   433,   434,   435,
     436,     0,   737,   438,   439,     0,     0,   440,     0,     0,
       0,   441,   442,     0,   443,   444,     0,     0,   445,   446,
     447,   448,   449,     0,   450,   451,     0,   452,   453,   454,
     738,   739,   455,   456,   457,   458,   459,   460,   461,   462,
       0,   463,     0,   464,   465,     0,   466,   467,   468,     0,
     740,     0,   741,   470,   471,   472,   473,     0,   474,   742,
     743,   476,   477,   478,   479,     0,   744,   481,     0,     0,
       0,   482,   483,   484,   485,     0,     0,     0,   486,     0,
       0,     0,   487,     0,   488,   489,   490,   491,     0,   492,
     493,   494,   495,   496,     0,     0,     0,     0,     0,   497,
     498,   499,     0,   500,     0,     0,   501,     0,     0,   502,
       0,   503,     0,   504,   505,   506,   507,   508,   509,   745,
     746,   510,   511,     0,     0,   512,   513,   747,   515,   516,
     517,   748,   749,   518,   519,   520,   521,   750,   522,   523,
       0,     0,   524,   525,   526,   527,     0,   751,   528,   529,
       0,   752,   753,   754,   755,     0,     0,     0,     0,     0,
     534,   535,     0,   756,   757,   758,   537,   538,     0,   759,
     539,   540,   760,   541,   542,     0,   543,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   761,   549,     0,
       0,   762,   763,   764,   550,   765,   551,     0,     0,   552,
     766,     0,   767,   553,     0,   554,   555,   768,   769,     0,
       0,     0,     0,     0,     0,   558,   559,   560,     0,   561,
     562,   563,   564,     0,     0,   770,     0,     0,   566,   567,
     568,   569,   570,     0,   571,     0,     0,     0,     0,     0,
     771,   772,     0,   572,   573,   574,   773,   575,   576,   577,
       0,   578,   774,   775,   579,   776,   580,     0,   777,   778,
     779,   780,   781,   581,   582,     0,   782,   583,   783,   584,
     784,   585,   586,     0,     0,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,     0,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,     0,   627,
     628,   629,   630,   631,   632,   633,     0,     0,     0,     0,
       0,   785,   786,     0,     0,     0,     0,   788,     0,   789,
       0,     0,     0,   790,     0,     0,     0,   791,   792,   198,
     199,     0,   675,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   676,     0,   208,
     209,   210,   211,   677,   213,     0,   214,     0,     0,   678,
     215,   679,   680,   681,   216,   682,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,   683,   684,
     224,   225,     0,   226,   227,   685,   686,   229,     0,   230,
     231,   232,   233,   687,   235,     0,   688,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
     689,   690,   256,     0,     0,     0,   691,   257,   692,     0,
     258,   693,   694,     0,   259,   260,   261,   695,   696,   697,
       0,     0,     0,     0,   698,   264,   699,     0,     0,   700,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,   701,     0,   291,   292,   293,
     294,   295,   702,   703,   296,   297,     0,   298,   299,   300,
     301,   302,   704,     0,   303,   304,     0,     0,     0,   705,
     306,  2588,   307,     0,     0,     0,   308,     0,   309,   706,
     311,   707,     0,   313,     0,   314,     0,   708,     0,   315,
     316,     0,   317,   709,     0,   318,   319,     0,     0,     0,
     710,   321,   322,   323,   711,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,   712,   328,   329,   330,   713,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,   714,   341,   342,     0,     0,
       0,     0,     0,   715,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,   716,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,   717,   371,   372,   373,   374,   718,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   719,
     382,     0,     0,   720,   384,   721,   385,     0,   386,   722,
     723,   724,   725,   726,   391,   392,   393,   394,   395,     0,
     727,   396,   397,     0,     0,   398,   399,   400,   401,   402,
     728,   729,   730,   403,   404,     0,   731,   732,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,   733,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   734,   735,   426,   736,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   737,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,   738,
     739,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   740,
       0,   741,   470,   471,   472,   473,     0,   474,   742,   743,
     476,   477,   478,   479,     0,   744,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,   745,   746,
     510,   511,     0,     0,   512,   513,   747,   515,   516,   517,
     748,   749,   518,   519,   520,   521,   750,   522,   523,     0,
       0,   524,   525,   526,   527,     0,   751,   528,   529,     0,
     752,   753,   754,   755,     0,     0,     0,     0,     0,   534,
     535,     0,   756,   757,   758,   537,   538,     0,   759,   539,
     540,   760,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   761,   549,     0,     0,
     762,   763,   764,   550,   765,   551,     0,     0,   552,   766,
       0,   767,   553,     0,   554,   555,   768,   769,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   770,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,   771,
     772,     0,   572,   573,   574,   773,   575,   576,   577,     0,
     578,   774,   775,   579,   776,   580,     0,   777,   778,   779,
     780,   781,   581,   582,     0,   782,   583,   783,   584,   784,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,     0,   627,   628,
     629,   630,   631,   632,   633,     0,     0,     0,     0,     0,
     785,   786,     0,     0,     0,     0,   788,     0,   789,     0,
       0,     0,   790,     0,     0,     0,   791,   792,   198,   199,
       0,   675,   201,   202,   203,   204,     0,     0,   205,     0,
       0,     0,     0,   206,     0,     0,   676,     0,   208,   209,
     210,   211,   677,   213,     0,   214,     0,     0,   678,   215,
     679,   680,   681,   216,   682,     0,   217,   218,   219,     0,
     220,     0,   221,   222,     0,     0,   223,   683,   684,   224,
     225,     0,   226,   227,   685,   686,   229,     0,   230,   231,
     232,   233,   687,   235,     0,   688,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,     0,   251,   252,   253,   254,   255,     0,   689,
     690,   256,     0,     0,     0,   691,   257,   692,     0,   258,
     693,   694,     0,   259,   260,   261,   695,   696,   697,     0,
       0,     0,     0,   698,   264,   699,     0,     0,   700,   265,
     266,     0,   267,     0,     0,     0,     0,     0,   268,   269,
     270,   271,   272,     0,     0,     0,   273,     0,     0,   274,
     275,   276,     0,     0,     0,   277,     0,   278,   279,     0,
     280,   281,   282,     0,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,   701,     0,   291,   292,   293,   294,
     295,   702,   703,   296,   297,     0,   298,   299,   300,   301,
     302,   704,     0,   303,   304,     0,     0,     0,   705,   306,
    2590,   307,     0,     0,     0,   308,     0,   309,   706,   311,
     707,     0,   313,     0,   314,     0,   708,     0,   315,   316,
       0,   317,   709,     0,   318,   319,     0,     0,     0,   710,
     321,   322,   323,   711,     0,   324,   325,   326,     0,     0,
     327,     0,     0,     0,   712,   328,   329,   330,   713,     0,
       0,   331,     0,     0,     0,   332,   333,     0,   334,   335,
       0,     0,     0,   336,     0,   337,     0,     0,   338,   339,
       0,     0,   340,     0,   714,   341,   342,     0,     0,     0,
       0,     0,   715,   344,     0,   345,     0,   346,     0,   347,
     348,     0,     0,   716,     0,     0,     0,     0,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,   370,   717,   371,   372,   373,   374,   718,   375,   376,
       0,     0,     0,     0,   377,   378,   379,   380,   719,   382,
       0,     0,   720,   384,   721,   385,     0,   386,   722,   723,
     724,   725,   726,   391,   392,   393,   394,   395,     0,   727,
     396,   397,     0,     0,   398,   399,   400,   401,   402,   728,
     729,   730,   403,   404,     0,   731,   732,   405,     0,   406,
     407,     0,   408,   409,   410,     0,     0,   411,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   412,   413,   414,
     733,   415,     0,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   734,   735,   426,   736,   427,     0,   428,   429,
     430,     0,   431,     0,   432,   433,   434,   435,   436,     0,
     737,   438,   439,     0,     0,   440,     0,     0,     0,   441,
     442,     0,   443,   444,     0,     0,   445,   446,   447,   448,
     449,     0,   450,   451,     0,   452,   453,   454,   738,   739,
     455,   456,   457,   458,   459,   460,   461,   462,     0,   463,
       0,   464,   465,     0,   466,   467,   468,     0,   740,     0,
     741,   470,   471,   472,   473,     0,   474,   742,   743,   476,
     477,   478,   479,     0,   744,   481,     0,     0,     0,   482,
     483,   484,   485,     0,     0,     0,   486,     0,     0,     0,
     487,     0,   488,   489,   490,   491,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,   499,
       0,   500,     0,     0,   501,     0,     0,   502,     0,   503,
       0,   504,   505,   506,   507,   508,   509,   745,   746,   510,
     511,     0,     0,   512,   513,   747,   515,   516,   517,   748,
     749,   518,   519,   520,   521,   750,   522,   523,     0,     0,
     524,   525,   526,   527,     0,   751,   528,   529,     0,   752,
     753,   754,   755,     0,     0,     0,     0,     0,   534,   535,
       0,   756,   757,   758,   537,   538,     0,   759,   539,   540,
     760,   541,   542,     0,   543,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   761,   549,     0,     0,   762,
     763,   764,   550,   765,   551,     0,     0,   552,   766,     0,
     767,   553,     0,   554,   555,   768,   769,     0,     0,     0,
       0,     0,     0,   558,   559,   560,     0,   561,   562,   563,
     564,     0,     0,   770,     0,     0,   566,   567,   568,   569,
     570,     0,   571,     0,     0,     0,     0,     0,   771,   772,
       0,   572,   573,   574,   773,   575,   576,   577,     0,   578,
     774,   775,   579,   776,   580,     0,   777,   778,   779,   780,
     781,   581,   582,     0,   782,   583,   783,   584,   784,   585,
     586,     0,     0,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,     0,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,     0,   627,   628,   629,
     630,   631,   632,   633,     0,     0,     0,     0,     0,   785,
     786,     0,     0,     0,     0,   788,     0,   789,     0,     0,
       0,   790,     0,     0,     0,   791,   792,   198,   199,     0,
     675,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   676,     0,   208,   209,   210,
     211,   677,   213,     0,   214,     0,     0,   678,   215,   679,
     680,   681,   216,   682,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,   683,   684,   224,   225,
       0,   226,   227,   685,   686,   229,     0,   230,   231,   232,
     233,   687,   235,     0,   688,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,   689,   690,
     256,     0,     0,     0,   691,   257,   692,     0,   258,   693,
     694,     0,   259,   260,   261,   695,   696,   697,     0,     0,
       0,     0,   698,   264,   699,     0,     0,   700,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,   701,     0,   291,   292,   293,   294,   295,
     702,   703,   296,   297,     0,   298,   299,   300,   301,   302,
     704,     0,   303,   304,     0,     0,     0,   705,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   706,   311,   707,
       0,   313,     0,   314,     0,   708,     0,   315,   316,     0,
     317,   709,     0,   318,   319,     0,     0,     0,   710,   321,
     322,   323,   711,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,   712,   328,   329,   330,   713,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,   714,   341,   342,     0,     0,     0,     0,
       0,   715,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,   716,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,   717,   371,   372,   373,   374,   718,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   719,   382,     0,
       0,   720,   384,   721,   385,     0,   386,   722,   723,   724,
     725,   726,   391,   392,   393,   394,   395,     0,   727,   396,
     397,     0,     0,   398,   399,   400,   401,   402,   728,   729,
     730,   403,   404,     0,   731,   732,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,   733,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   734,   735,   426,   736,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   737,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,   738,   739,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   740,     0,   741,
     470,   471,   472,   473,     0,   474,   742,   743,   476,   477,
     478,   479,     0,   744,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,   745,   746,   510,   511,
       0,     0,   512,   513,   747,   515,   516,   517,   748,   749,
     518,   519,   520,   521,   750,   522,   523,     0,     0,   524,
     525,   526,   527,     0,   751,   528,   529,     0,   752,   753,
     754,   755,     0,     0,     0,     0,     0,   534,   535,     0,
     756,   757,   758,   537,   538,     0,   759,   539,   540,   760,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   761,   549,     0,     0,   762,   763,
     764,   550,   765,   551,     0,     0,   552,   766,     0,   767,
     553,     0,   554,   555,   768,   769,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   770,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,   771,   772,     0,
     572,   573,   574,   773,   575,   576,   577,     0,   578,   774,
     775,   579,   776,   580,     0,   777,   778,   779,   780,   781,
     581,   582,     0,   782,   583,   783,   584,   784,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,     0,   627,   628,   629,   630,
     631,   632,   633,     0,     0,     0,     0,     0,   785,   786,
       0,     0,     0,     0,   788,     0,   789,     0,     0,     0,
     790,     0,     0,     0,   791,   792,   198,   199,     0,   675,
     201,   202,   203,   204,     0,     0,   205,     0,     0,     0,
       0,   206,     0,     0,   676,     0,   208,   209,   210,   211,
     677,   213,     0,   214,     0,     0,   678,   215,   679,   680,
     681,   216,   682,     0,   217,   218,   219,     0,   220,     0,
     221,   222,     0,     0,   223,   683,   684,   224,   225,     0,
     226,   227,   685,   686,   229,     0,   230,   231,   232,   233,
     687,   235,     0,   688,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
       0,   251,   252,   253,   254,   255,     0,   689,   690,   256,
       0,     0,     0,   691,   257,   692,     0,   258,   693,   694,
       0,   259,   260,   261,   695,   696,   697,     0,     0,     0,
       0,   698,   264,   699,     0,     0,   700,   265,   266,     0,
     267,     0,     0,     0,     0,     0,   268,   269,   270,   271,
     272,     0,     0,     0,   273,     0,     0,   274,   275,   276,
       0,     0,     0,   277,     0,   278,   279,     0,   280,   281,
     282,     0,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   701,     0,   291,   292,   293,   294,   295,   702,
     703,   296,   297,     0,   298,   299,   300,   301,   302,   704,
       0,   303,   304,     0,     0,     0,   705,   306,     0,   307,
       0,     0,     0,   308,     0,   309,   706,   311,   707,     0,
     313,     0,   314,     0,   708,     0,   315,   316,     0,   317,
     709,     0,   318,   319,     0,     0,     0,   710,   321,   322,
     323,   711,     0,   324,   325,   326,     0,     0,   327,     0,
       0,     0,   712,   328,   329,   330,   713,     0,     0,   331,
       0,     0,     0,   332,   333,     0,   334,   335,     0,     0,
       0,   336,     0,   337,     0,     0,   338,   339,     0,     0,
     340,     0,   714,   341,   342,     0,     0,     0,     0,     0,
     715,   344,     0,   345,     0,   346,     0,   347,   348,     0,
       0,   716,     0,     0,     0,     0,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,   370,
     717,   371,   372,   373,   374,   718,   375,   376,     0,     0,
       0,     0,   377,   378,   379,   380,   719,   382,     0,     0,
     720,   384,   721,   385,     0,   386,   722,   723,   724,   725,
     726,   391,   392,   393,   394,   395,     0,   727,   396,   397,
       0,     0,   398,   399,   400,   401,   402,   728,   729,   730,
     403,   404,     0,   731,   732,   405,     0,   406,   407,     0,
     408,   409,   410,     0,     0,   411,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   412,   413,   414,   733,   415,
       0,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     734,   735,   426,   736,   427,     0,   428,   429,   430,     0,
     431,     0,   432,   433,   434,   435,   436,     0,   737,   438,
     439,     0,     0,   440,     0,     0,     0,   441,   442,     0,
     443,   444,     0,     0,   445,   446,   447,   448,   449,     0,
     450,   451,     0,   452,   453,   454,   738,   739,   455,   456,
     457,   458,   459,   460,   461,   462,     0,   463,     0,   464,
     465,     0,   466,   467,   468,     0,   740,     0,   741,   470,
     471,   472,   473,     0,   474,   742,   743,   476,   477,   478,
     479,     0,   744,   481,     0,     0,     0,   482,   483,   484,
     485,     0,     0,     0,   486,     0,     0,     0,   487,     0,
     488,   489,   490,   491,     0,   492,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,   499,     0,   500,
       0,     0,   501,     0,     0,   502,     0,   503,     0,   504,
     505,   506,   507,   508,   509,   745,   746,   510,   511,     0,
       0,   512,   513,   747,   515,   516,   517,   748,   749,   518,
     519,   520,   521,   750,   522,   523,     0,     0,   524,   525,
     526,   527,     0,   751,   528,   529,     0,   752,   753,   754,
     755,     0,     0,     0,     0,     0,   534,   535,     0,   756,
     757,   758,   537,   538,     0,   759,   539,   540,   760,   541,
     542,     0,   543,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   761,   549,     0,     0,   762,   763,   764,
     550,   765,   551,     0,     0,   552,   766,     0,   767,   553,
       0,   554,   555,   768,   769,     0,     0,     0,     0,     0,
       0,   558,   559,   560,     0,   561,   562,   563,   564,     0,
       0,   770,     0,     0,   566,   567,   568,   569,   570,     0,
     571,     0,     0,     0,     0,     0,   771,   772,     0,   572,
     573,   574,   773,   575,   576,   577,     0,   578,   774,   775,
     579,   776,   580,     0,   777,   778,   779,   780,   781,   581,
     582,     0,   782,   583,   783,   584,   784,   585,   586,     0,
       0,     0,   587,   588,   589,   590,   591,   592,   593,   594,
       0,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,     0,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,     0,   627,   628,   629,   630,   631,
     632,   633,     0,     0,     0,     0,     0,   785,   786,     0,
       0,     0,     0,   788,     0,  1147,     0,     0,     0,   790,
       0,     0,     0,   791,   792,   198,   199,     0,   675,   201,
     202,   203,   204,  1920,     0,   205,     0,     0,     0,     0,
    1921,     0,     0,   676,     0,   208,   209,   210,   211,   677,
     213,     0,   214,     0,     0,   678,   215,   679,   680,   681,
     216,   682,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,   683,   684,   224,   225,     0,   226,
     227,   685,   686,   229,     0,   230,   231,   232,   233,   687,
     235,     0,   688,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,   689,   690,   256,     0,
       0,     0,   691,   257,   692,     0,   258,   693,   694,     0,
     259,   260,   261,   695,   696,   697,     0,     0,     0,     0,
     698,   264,   699,     0,     0,   700,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,   701,     0,   291,   292,   293,   294,   295,   702,   703,
     296,   297,     0,   298,   299,   300,   301,   302,   704,     0,
     303,   304,     0,     0,     0,   705,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   706,   311,   707,     0,   313,
       0,   314,     0,   708,     0,   315,   316,     0,   317,   709,
       0,   318,   319,     0,     0,     0,   710,   321,   322,   323,
     711,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,   712,   328,   329,   330,   713,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,   714,   341,   342,     0,     0,     0,     0,     0,   715,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
     716,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,   717,
     371,   372,   373,   374,   718,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   719,   382,     0,     0,   720,
     384,   721,   385,     0,   386,   722,   723,   724,   725,   726,
     391,   392,   393,   394,   395,     0,   727,   396,   397,     0,
       0,   398,   399,   400,   401,   402,   728,     0,   730,   403,
     404,     0,   731,   732,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,   733,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   734,
     735,   426,   736,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   737,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,   738,   739,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   740,     0,   741,   470,   471,
     472,   473,     0,   474,   742,   743,   476,   477,   478,   479,
       0,   744,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,   745,   746,   510,   511,     0,     0,
     512,   513,   747,   515,   516,   517,   748,   749,   518,   519,
     520,   521,   750,   522,   523,     0,     0,   524,   525,   526,
     527,     0,   751,   528,   529,     0,   752,   753,   754,   755,
       0,     0,     0,     0,     0,   534,   535,     0,   756,   757,
     758,   537,   538,     0,   759,   539,   540,   760,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   761,   549,     0,     0,   762,   763,   764,   550,
     765,   551,     0,     0,   552,   766,     0,   767,   553,     0,
     554,   555,   768,   769,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     770,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,   771,   772,     0,   572,   573,
     574,   773,   575,   576,   577,     0,   578,   774,   775,   579,
     776,   580,     0,   777,   778,   779,   780,   781,   581,   582,
       0,   782,   583,   783,   584,   784,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,     0,   627,   628,   629,   630,   631,   632,
     633,     0,     0,     0,     0,     0,   785,   786,     0,     0,
       0,     0,   788,     0,   789,     0,     0,     0,   790,     0,
       0,     0,   791,   792,   198,   199,     0,   675,   201,   202,
     203,   204,     0,     0,   205,     0,     0,     0,     0,   206,
       0,     0,   676,     0,   208,   209,   210,   211,   677,   213,
       0,   214,     0,     0,   678,   215,   679,   680,   681,   216,
     682,     0,   217,   218,   219,     0,   220,     0,   221,   222,
       0,     0,   223,   683,   684,   224,   225,     0,   226,   227,
     685,   686,   229,     0,   230,   231,   232,   233,   687,   235,
       0,   688,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,     0,   251,
     252,   253,   254,   255,     0,   689,   690,   256,     0,     0,
       0,   691,   257,   692,     0,   258,   693,   694,     0,   259,
     260,   261,   695,   696,   697,     0,     0,     0,     0,   698,
     264,   699,     0,     0,  2209,   265,   266,     0,   267,     0,
       0,     0,     0,     0,   268,   269,   270,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,   276,     0,     0,
       0,   277,     0,   278,   279,     0,   280,   281,   282,     0,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
     701,     0,   291,   292,   293,   294,   295,   702,   703,   296,
     297,     0,   298,   299,   300,   301,   302,   704,     0,   303,
     304,     0,     0,     0,   705,   306,     0,   307,     0,     0,
       0,   308,     0,   309,   706,   311,   707,     0,   313,     0,
     314,     0,   708,     0,   315,   316,     0,   317,   709,     0,
     318,   319,     0,     0,     0,   710,   321,   322,   323,   711,
       0,   324,   325,   326,     0,     0,   327,     0,     0,     0,
     712,   328,   329,   330,   713,     0,     0,   331,     0,     0,
       0,   332,   333,     0,   334,   335,     0,     0,     0,   336,
       0,   337,     0,     0,   338,   339,     0,     0,   340,     0,
     714,   341,   342,     0,     0,     0,     0,     0,   715,   344,
       0,   345,     0,   346,     0,   347,   348,     0,     0,   716,
       0,     0,     0,     0,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,   370,   717,   371,
     372,   373,   374,   718,   375,   376,     0,     0,     0,     0,
     377,   378,   379,   380,   719,   382,     0,     0,   720,   384,
     721,   385,     0,   386,   722,   723,   724,   725,   726,   391,
     392,   393,   394,   395,     0,   727,   396,   397,     0,     0,
     398,   399,   400,   401,   402,   728,   729,   730,   403,   404,
       0,   731,   732,   405,     0,   406,   407,     0,   408,   409,
     410,     0,     0,   411,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   412,   413,   414,   733,   415,     0,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   734,   735,
     426,   736,   427,     0,   428,   429,   430,     0,   431,     0,
     432,   433,   434,   435,   436,     0,   737,   438,   439,     0,
       0,   440,     0,     0,     0,   441,   442,     0,   443,   444,
       0,     0,   445,   446,   447,   448,   449,     0,   450,   451,
       0,   452,   453,   454,   738,   739,   455,   456,   457,   458,
     459,   460,   461,   462,     0,   463,     0,   464,   465,     0,
     466,   467,   468,     0,   740,     0,   741,   470,   471,   472,
     473,     0,   474,   742,   743,   476,   477,   478,   479,     0,
     744,   481,     0,     0,     0,   482,   483,   484,   485,     0,
       0,     0,   486,     0,     0,     0,   487,     0,   488,   489,
     490,   491,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,   499,     0,   500,     0,     0,
     501,     0,     0,   502,     0,   503,     0,   504,   505,   506,
     507,   508,   509,   745,   746,   510,   511,     0,     0,   512,
     513,   747,   515,   516,   517,   748,   749,   518,   519,   520,
     521,   750,   522,   523,     0,     0,   524,   525,   526,   527,
       0,   751,   528,   529,     0,   752,   753,   754,   755,     0,
       0,     0,     0,     0,   534,   535,     0,   756,   757,   758,
     537,   538,     0,   759,   539,   540,   760,   541,   542,     0,
     543,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   761,   549,     0,     0,   762,   763,   764,   550,   765,
     551,     0,     0,   552,   766,     0,   767,   553,     0,   554,
     555,   768,   769,     0,     0,     0,     0,     0,     0,   558,
     559,   560,     0,   561,   562,   563,   564,     0,     0,   770,
       0,     0,   566,   567,   568,   569,   570,     0,   571,     0,
       0,     0,     0,     0,   771,   772,     0,   572,   573,   574,
     773,   575,   576,   577,     0,   578,   774,   775,   579,   776,
     580,     0,   777,   778,   779,   780,   781,   581,   582,     0,
     782,   583,   783,   584,   784,   585,   586,     0,     0,     0,
     587,   588,   589,   590,   591,   592,   593,   594,     0,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,     0,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,     0,   627,   628,   629,   630,   631,   632,   633,
       0,     0,     0,     0,     0,   785,   786,     0,     0,     0,
       0,   788,     0,   789,     0,     0,     0,   790,     0,     0,
       0,   791,   792,   198,   199,     0,   675,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   676,     0,   208,   209,   210,   211,   677,   213,     0,
     214,     0,     0,   678,   215,   679,   680,   681,   216,   682,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,   683,   684,   224,   225,     0,   226,   227,   685,
     686,   229,     0,   230,   231,   232,   233,   687,   235,     0,
     688,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,   689,   690,   256,     0,     0,     0,
     691,   257,   692,     0,   258,   693,   694,     0,   259,   260,
     261,   695,   696,   697,     0,     0,     0,     0,   698,   264,
     699,     0,     0,   700,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,   701,
       0,   291,   292,   293,   294,   295,   702,   703,   296,   297,
       0,   298,   299,   300,   301,   302,   704,     0,   303,   304,
       0,     0,     0,   705,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   706,   311,   707,     0,   313,     0,   314,
       0,   708,     0,   315,   316,     0,   317,   709,     0,   318,
     319,     0,     0,     0,   710,   321,   322,   323,   711,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,   712,
     328,   329,   330,  3232,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,   714,
     341,   342,     0,     0,     0,     0,     0,   715,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,   716,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,   717,   371,   372,
     373,   374,   718,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   719,   382,     0,     0,   720,   384,   721,
     385,     0,   386,   722,   723,   724,   725,   726,   391,   392,
     393,   394,   395,     0,   727,   396,   397,     0,     0,   398,
     399,   400,   401,   402,   728,   729,   730,   403,   404,     0,
     731,   732,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,   733,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   734,   735,   426,
     736,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   737,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,   738,   739,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   740,     0,   741,   470,   471,   472,   473,
       0,   474,   742,   743,   476,   477,   478,   479,     0,   744,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,   745,   746,   510,   511,     0,     0,   512,   513,
     747,   515,   516,   517,   748,   749,   518,   519,   520,   521,
     750,   522,   523,     0,     0,   524,   525,   526,   527,     0,
     751,   528,   529,     0,   752,   753,   754,   755,     0,     0,
       0,     0,     0,   534,   535,     0,   756,   757,   758,   537,
     538,     0,   759,   539,   540,   760,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     761,   549,     0,     0,   762,   763,   764,   550,   765,   551,
       0,     0,   552,   766,     0,   767,   553,     0,   554,   555,
     768,   769,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   770,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,   771,   772,     0,   572,   573,   574,   773,
     575,   576,   577,     0,   578,   774,   775,   579,   776,   580,
       0,   777,   778,   779,   780,   781,   581,   582,     0,   782,
     583,   783,   584,   784,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,     0,   627,   628,   629,   630,   631,   632,   633,     0,
       0,     0,     0,     0,   785,   786,     0,     0,     0,     0,
     788,     0,   789,     0,     0,     0,   790,     0,     0,     0,
     791,   792,   198,   199,     0,   675,   201,   202,   203,   204,
       0,     0,   205,     0,     0,     0,     0,   206,     0,     0,
     676,     0,   208,   209,   210,   211,   677,   213,     0,   214,
       0,     0,   678,   215,   679,   680,   681,   216,   682,     0,
     217,   218,   219,     0,   220,     0,   221,   222,     0,     0,
     223,   683,   684,   224,   225,     0,   226,   227,   685,   686,
     229,     0,   230,   231,   232,   233,   687,   235,     0,   688,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   250,     0,   251,   252,   253,
     254,   255,     0,   689,   690,   256,     0,     0,     0,   691,
     257,   692,     0,   258,   693,   694,     0,   259,   260,   261,
     695,   696,   697,     0,     0,     0,     0,   698,   264,   699,
       0,     0,   700,   265,   266,     0,   267,     0,     0,     0,
       0,     0,   268,   269,   270,   271,   272,     0,     0,     0,
     273,     0,     0,   274,   275,   276,     0,     0,     0,   277,
       0,   278,   279,     0,   280,   281,   282,     0,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,   701,     0,
     291,   292,   293,   294,   295,   702,   703,   296,   297,     0,
     298,   299,   300,   301,   302,   704,     0,   303,   304,     0,
       0,     0,   705,   306,     0,   307,     0,     0,     0,   308,
       0,   309,   706,   311,   707,     0,   313,     0,   314,     0,
     708,     0,   315,   316,     0,   317,   709,     0,   318,   319,
       0,     0,     0,   710,   321,   322,   323,   711,     0,   324,
     325,   326,     0,     0,   327,     0,     0,     0,   712,   328,
     329,   330,  3293,     0,     0,   331,     0,     0,     0,   332,
     333,     0,   334,   335,     0,     0,     0,   336,     0,   337,
       0,     0,   338,   339,     0,     0,   340,     0,   714,   341,
     342,     0,     0,     0,     0,     0,   715,   344,     0,   345,
       0,   346,     0,   347,   348,     0,     0,   716,     0,     0,
       0,     0,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,   370,   717,   371,   372,   373,
     374,   718,   375,   376,     0,     0,     0,     0,   377,   378,
     379,   380,   719,   382,     0,     0,   720,   384,   721,   385,
       0,   386,   722,   723,   724,   725,   726,   391,   392,   393,
     394,   395,     0,   727,   396,   397,     0,     0,   398,   399,
     400,   401,   402,   728,   729,   730,   403,   404,     0,   731,
     732,   405,     0,   406,   407,     0,   408,   409,   410,     0,
       0,   411,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   412,   413,   414,   733,   415,     0,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   734,   735,   426,   736,
     427,     0,   428,   429,   430,     0,   431,     0,   432,   433,
     434,   435,   436,     0,   737,   438,   439,     0,     0,   440,
       0,     0,     0,   441,   442,     0,   443,   444,     0,     0,
     445,   446,   447,   448,   449,     0,   450,   451,     0,   452,
     453,   454,   738,   739,   455,   456,   457,   458,   459,   460,
     461,   462,     0,   463,     0,   464,   465,     0,   466,   467,
     468,     0,   740,     0,   741,   470,   471,   472,   473,     0,
     474,   742,   743,   476,   477,   478,   479,     0,   744,   481,
       0,     0,     0,   482,   483,   484,   485,     0,     0,     0,
     486,     0,     0,     0,   487,     0,   488,   489,   490,   491,
       0,   492,   493,   494,   495,   496,     0,     0,     0,     0,
       0,   497,   498,   499,     0,   500,     0,     0,   501,     0,
       0,   502,     0,   503,     0,   504,   505,   506,   507,   508,
     509,   745,   746,   510,   511,     0,     0,   512,   513,   747,
     515,   516,   517,   748,   749,   518,   519,   520,   521,   750,
     522,   523,     0,     0,   524,   525,   526,   527,     0,   751,
     528,   529,     0,   752,   753,   754,   755,     0,     0,     0,
       0,     0,   534,   535,     0,   756,   757,   758,   537,   538,
       0,   759,   539,   540,   760,   541,   542,     0,   543,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   761,
     549,     0,     0,   762,   763,   764,   550,   765,   551,     0,
       0,   552,   766,     0,   767,   553,     0,   554,   555,   768,
     769,     0,     0,     0,     0,     0,     0,   558,   559,   560,
       0,   561,   562,   563,   564,     0,     0,   770,     0,     0,
     566,   567,   568,   569,   570,     0,   571,     0,     0,     0,
       0,     0,   771,   772,     0,   572,   573,   574,   773,   575,
     576,   577,     0,   578,   774,   775,   579,   776,   580,     0,
     777,   778,   779,   780,   781,   581,   582,     0,   782,   583,
     783,   584,   784,   585,   586,     0,     0,     0,   587,   588,
     589,   590,   591,   592,   593,   594,     0,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,     0,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
       0,   627,   628,   629,   630,   631,   632,   633,     0,     0,
       0,     0,     0,   785,   786,     0,     0,     0,     0,   788,
       0,   789,     0,     0,     0,   790,     0,     0,     0,   791,
     792,   198,   199,     0,   675,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   676,
       0,   208,   209,   210,   211,   677,   213,     0,   214,     0,
       0,   678,   215,   679,   680,   681,   216,   682,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
     683,   684,   224,   225,     0,   226,   227,   685,   686,   229,
       0,   230,   231,   232,   233,   687,   235,     0,   688,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,   689,   690,   256,     0,     0,     0,   691,   257,
     692,     0,   258,   693,   694,     0,   259,   260,   261,   695,
     696,   697,     0,     0,     0,     0,   698,   264,   699,     0,
       0,   700,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   701,     0,   291,
     292,   293,   294,   295,   702,   703,   296,   297,     0,   298,
     299,   300,   301,   302,   704,     0,   303,   304,     0,     0,
       0,   705,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   706,   311,   707,     0,   313,     0,   314,     0,   708,
       0,   315,   316,     0,   317,   709,     0,   318,   319,     0,
       0,     0,   710,   321,   322,   323,   711,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,   712,   328,   329,
     330,   713,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,   714,   341,   342,
       0,     0,     0,     0,     0,   715,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,   716,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,   717,   371,   372,   373,   374,
     718,   375,   376,  5030,     0,     0,     0,   377,   378,   379,
     380,   719,   382,     0,     0,   720,   384,   721,   385,     0,
     386,   722,   723,   724,   725,   726,   391,   392,   393,   394,
     395,     0,   727,   396,   397,     0,     0,   398,   399,   400,
     401,   402,   728,     0,   730,   403,   404,     0,   731,   732,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,   733,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   734,   735,   426,   736,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   737,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,   738,   739,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   740,     0,   741,   470,   471,   472,   473,     0,   474,
     742,   743,   476,   477,   478,   479,     0,   744,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
     745,   746,   510,   511,     0,     0,   512,   513,   747,   515,
     516,   517,   748,   749,   518,   519,   520,   521,   750,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   751,   528,
     529,     0,   752,   753,   754,   755,     0,     0,     0,     0,
       0,   534,   535,     0,   756,   757,   758,   537,   538,     0,
     759,   539,   540,   760,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   761,   549,
       0,     0,   762,   763,   764,   550,   765,   551,     0,     0,
     552,   766,     0,   767,   553,     0,   554,   555,   768,   769,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   770,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,   771,   772,     0,   572,   573,   574,   773,   575,   576,
     577,     0,   578,   774,   775,   579,   776,   580,     0,   777,
     778,   779,   780,   781,   581,   582,     0,   782,   583,   783,
     584,   784,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,     0,
     627,   628,   629,   630,   631,   632,   633,     0,     0,     0,
       0,     0,   785,   786,     0,     0,     0,     0,   788,     0,
     789,     0,     0,     0,   790,     0,     0,     0,   791,   792,
     198,   199,     0,   675,   201,   202,   203,   204,     0,     0,
     205,     0,     0,     0,     0,   206,     0,     0,   676,     0,
     208,   209,   210,   211,   677,   213,     0,   214,     0,     0,
     678,   215,   679,   680,   681,   216,   682,     0,   217,   218,
     219,     0,   220,     0,   221,   222,     0,     0,   223,   683,
     684,   224,   225,     0,   226,   227,   685,   686,   229,     0,
     230,   231,   232,   233,   687,   235,     0,   688,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,     0,   251,   252,   253,   254,   255,
       0,   689,   690,   256,     0,     0,     0,   691,   257,   692,
       0,   258,   693,   694,     0,   259,   260,   261,   695,   696,
     697,     0,     0,     0,     0,   698,   264,   699,     0,     0,
     700,   265,   266,     0,   267,     0,     0,     0,     0,     0,
     268,   269,   270,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,   276,     0,     0,     0,   277,     0,   278,
     279,     0,   280,   281,   282,     0,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,   701,     0,   291,   292,
     293,   294,   295,   702,   703,   296,   297,     0,   298,   299,
     300,   301,   302,   704,     0,   303,   304,     0,     0,     0,
     705,   306,     0,   307,     0,     0,     0,   308,     0,   309,
     706,   311,   707,     0,   313,     0,   314,     0,   708,     0,
     315,   316,     0,   317,   709,     0,   318,   319,     0,     0,
       0,   710,   321,   322,   323,   711,     0,   324,   325,   326,
       0,     0,   327,     0,     0,     0,   712,   328,   329,   330,
     713,     0,     0,   331,     0,     0,     0,   332,   333,     0,
     334,   335,     0,     0,     0,   336,     0,   337,     0,     0,
     338,   339,     0,     0,   340,     0,   714,   341,   342,     0,
       0,     0,     0,     0,   715,   344,     0,   345,     0,   346,
       0,   347,   348,     0,     0,   716,     0,     0,     0,     0,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,   370,   717,   371,   372,   373,   374,   718,
     375,   376,     0,     0,     0,     0,   377,   378,   379,   380,
     719,   382,     0,     0,   720,   384,   721,   385,     0,   386,
     722,   723,   724,   725,   726,   391,   392,   393,   394,   395,
       0,   727,   396,   397,     0,     0,   398,   399,   400,   401,
     402,   728,     0,   730,   403,   404,     0,   731,   732,   405,
       0,   406,   407,     0,   408,   409,   410,     0,     0,   411,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   412,
     413,   414,   733,   415,     0,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   734,   735,   426,   736,   427,     0,
     428,   429,   430,     0,   431,     0,   432,   433,   434,   435,
     436,     0,   737,   438,   439,     0,     0,   440,     0,     0,
       0,   441,   442,     0,   443,   444,     0,     0,   445,   446,
     447,   448,   449,     0,   450,   451,     0,   452,   453,   454,
     738,   739,   455,   456,   457,   458,   459,   460,   461,   462,
       0,   463,     0,   464,   465,     0,   466,   467,   468,     0,
     740,     0,   741,   470,   471,   472,   473,     0,   474,   742,
     743,   476,   477,   478,   479,     0,   744,   481,     0,     0,
       0,   482,   483,   484,   485,     0,     0,     0,   486,     0,
       0,     0,   487,     0,   488,   489,   490,   491,     0,   492,
     493,   494,   495,   496,     0,     0,     0,     0,     0,   497,
     498,   499,     0,   500,     0,     0,   501,     0,     0,   502,
       0,   503,     0,   504,   505,   506,   507,   508,   509,   745,
     746,   510,   511,     0,     0,   512,   513,   747,   515,   516,
     517,   748,   749,   518,   519,   520,   521,   750,   522,   523,
       0,     0,   524,   525,   526,   527,     0,   751,   528,   529,
       0,   752,   753,   754,   755,     0,     0,     0,     0,     0,
     534,   535,     0,   756,   757,   758,   537,   538,     0,   759,
     539,   540,   760,   541,   542,     0,   543,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   761,   549,     0,
       0,   762,   763,   764,   550,   765,   551,     0,     0,   552,
     766,     0,   767,   553,     0,   554,   555,   768,   769,     0,
       0,     0,     0,     0,     0,   558,   559,   560,     0,   561,
     562,   563,   564,     0,     0,   770,     0,     0,   566,   567,
     568,   569,   570,     0,   571,     0,     0,     0,     0,     0,
     771,   772,     0,   572,   573,   574,   773,   575,   576,   577,
       0,   578,   774,   775,   579,   776,   580,     0,   777,   778,
     779,   780,   781,   581,   582,     0,   782,   583,   783,   584,
     784,   585,   586,     0,     0,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,     0,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,     0,   627,
     628,   629,   630,   631,   632,   633,     0,     0,     0,     0,
       0,   785,   786,     0,     0,     0,     0,   788,     0,   789,
       0,     0,     0,   790,     0,     0,     0,   791,   792,   198,
     199,     0,   675,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   676,     0,   208,
     209,   210,   211,   677,   213,     0,   214,     0,     0,   678,
     215,   679,   680,   681,   216,   682,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,   683,   684,
     224,   225,     0,   226,   227,   685,   686,   229,     0,   230,
     231,   232,   233,   687,   235,     0,   688,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
     689,   690,   256,     0,     0,     0,   691,   257,   692,     0,
     258,   693,   694,     0,   259,   260,   261,   695,   696,   697,
       0,     0,     0,     0,   698,   264,   699,     0,     0,   700,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,   701,     0,   291,   292,   293,
     294,   295,   702,   703,   296,   297,     0,   298,   299,   300,
     301,   302,   704,     0,   303,   304,     0,     0,     0,   705,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   706,
     311,   707,     0,   313,     0,   314,     0,   708,     0,   315,
     316,     0,   317,   709,     0,   318,   319,     0,     0,     0,
     710,   321,   322,   323,   711,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,   712,   328,   329,   330,  1938,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,   714,   341,   342,     0,     0,
       0,     0,     0,   715,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,   716,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,   717,   371,   372,   373,   374,   718,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   719,
     382,     0,     0,   720,   384,   721,   385,     0,   386,   722,
     723,   724,   725,   726,   391,   392,   393,   394,   395,     0,
     727,   396,   397,     0,     0,   398,   399,   400,   401,   402,
     728,     0,   730,   403,   404,     0,   731,   732,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,   733,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   734,   735,   426,   736,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   737,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,   738,
     739,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   740,
       0,   741,   470,   471,   472,   473,     0,   474,   742,   743,
     476,   477,   478,   479,     0,   744,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,   745,   746,
     510,   511,     0,     0,   512,   513,   747,   515,   516,   517,
     748,   749,   518,   519,   520,   521,   750,   522,   523,     0,
       0,   524,   525,   526,   527,     0,   751,   528,   529,     0,
     752,   753,   754,   755,     0,     0,     0,     0,     0,   534,
     535,     0,   756,   757,   758,   537,   538,     0,   759,   539,
     540,   760,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   761,   549,     0,     0,
     762,   763,   764,   550,   765,   551,     0,     0,   552,   766,
       0,   767,   553,     0,   554,   555,   768,   769,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   770,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,   771,
     772,     0,   572,   573,   574,   773,   575,   576,   577,     0,
     578,   774,   775,   579,   776,   580,     0,   777,   778,   779,
     780,   781,   581,   582,     0,   782,   583,   783,   584,   784,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,     0,   627,   628,
     629,   630,   631,   632,   633,     0,     0,     0,     0,     0,
     785,   786,     0,     0,     0,     0,   788,     0,   789,     0,
       0,     0,   790,     0,     0,     0,   791,   792,   198,   199,
       0,   675,   201,   202,   203,   204,     0,     0,   205,     0,
       0,     0,     0,   206,     0,     0,   676,     0,   208,   209,
     210,   211,   677,   213,     0,   214,     0,     0,   678,   215,
     679,   680,   681,   216,   682,     0,   217,   218,   219,     0,
     220,     0,   221,   222,     0,     0,   223,   683,   684,   224,
     225,     0,   226,   227,   685,   686,   229,     0,   230,   231,
     232,   233,   687,   235,     0,   688,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,     0,   251,   252,   253,   254,   255,     0,   689,
     690,   256,     0,     0,     0,   691,   257,   692,     0,   258,
     693,   694,     0,   259,   260,   261,   695,   696,   697,     0,
       0,     0,     0,   698,   264,   699,     0,     0,   700,   265,
     266,     0,   267,     0,     0,     0,     0,     0,   268,   269,
     270,   271,   272,     0,     0,     0,   273,     0,     0,   274,
     275,   276,     0,     0,     0,   277,     0,   278,   279,     0,
     280,   281,   282,     0,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,   701,     0,   291,   292,   293,   294,
     295,   702,   703,   296,   297,     0,   298,   299,   300,   301,
     302,   704,     0,   303,   304,     0,     0,     0,   705,   306,
       0,   307,     0,     0,     0,   308,     0,   309,   706,   311,
     707,     0,   313,     0,   314,     0,   708,     0,   315,   316,
       0,   317,   709,     0,   318,   319,     0,     0,     0,   710,
     321,   322,   323,   711,     0,   324,   325,   326,     0,     0,
     327,     0,     0,     0,   712,   328,   329,   330,  1940,     0,
       0,   331,     0,     0,     0,   332,   333,     0,   334,   335,
       0,     0,     0,   336,     0,   337,     0,     0,   338,   339,
       0,     0,   340,     0,   714,   341,   342,     0,     0,     0,
       0,     0,   715,   344,     0,   345,     0,   346,     0,   347,
     348,     0,     0,   716,     0,     0,     0,     0,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,   370,   717,   371,   372,   373,   374,   718,   375,   376,
       0,     0,     0,     0,   377,   378,   379,   380,   719,   382,
       0,     0,   720,   384,   721,   385,     0,   386,   722,   723,
     724,   725,   726,   391,   392,   393,   394,   395,     0,   727,
     396,   397,     0,     0,   398,   399,   400,   401,   402,   728,
       0,   730,   403,   404,     0,   731,   732,   405,     0,   406,
     407,     0,   408,   409,   410,     0,     0,   411,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   412,   413,   414,
     733,   415,     0,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   734,   735,   426,   736,   427,     0,   428,   429,
     430,     0,   431,     0,   432,   433,   434,   435,   436,     0,
     737,   438,   439,     0,     0,   440,     0,     0,     0,   441,
     442,     0,   443,   444,     0,     0,   445,   446,   447,   448,
     449,     0,   450,   451,     0,   452,   453,   454,   738,   739,
     455,   456,   457,   458,   459,   460,   461,   462,     0,   463,
       0,   464,   465,     0,   466,   467,   468,     0,   740,     0,
     741,   470,   471,   472,   473,     0,   474,   742,   743,   476,
     477,   478,   479,     0,   744,   481,     0,     0,     0,   482,
     483,   484,   485,     0,     0,     0,   486,     0,     0,     0,
     487,     0,   488,   489,   490,   491,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,   499,
       0,   500,     0,     0,   501,     0,     0,   502,     0,   503,
       0,   504,   505,   506,   507,   508,   509,   745,   746,   510,
     511,     0,     0,   512,   513,   747,   515,   516,   517,   748,
     749,   518,   519,   520,   521,   750,   522,   523,     0,     0,
     524,   525,   526,   527,     0,   751,   528,   529,     0,   752,
     753,   754,   755,     0,     0,     0,     0,     0,   534,   535,
       0,   756,   757,   758,   537,   538,     0,   759,   539,   540,
     760,   541,   542,     0,   543,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   761,   549,     0,     0,   762,
     763,   764,   550,   765,   551,     0,     0,   552,   766,     0,
     767,   553,     0,   554,   555,   768,   769,     0,     0,     0,
       0,     0,     0,   558,   559,   560,     0,   561,   562,   563,
     564,     0,     0,   770,     0,     0,   566,   567,   568,   569,
     570,     0,   571,     0,     0,     0,     0,     0,   771,   772,
       0,   572,   573,   574,   773,   575,   576,   577,     0,   578,
     774,   775,   579,   776,   580,     0,   777,   778,   779,   780,
     781,   581,   582,     0,   782,   583,   783,   584,   784,   585,
     586,     0,     0,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,     0,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,     0,   627,   628,   629,
     630,   631,   632,   633,     0,     0,     0,     0,     0,   785,
     786,     0,     0,     0,     0,   788,     0,   789,     0,     0,
       0,   790,     0,     0,     0,   791,   792,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,    42,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,    49,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,    54,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,    55,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,  2760,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,  2761,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,     0,   627,   628,   629,   630,
     631,   632,   633,     0,     0,     0,     0,     0,   198,   199,
       0,   200,   201,   202,   203,   204,  2762,     0,   205,     0,
       0,     0,     0,   206,     0,  2763,   207,     0,   208,   209,
     210,   211,   212,   213,     0,   214,     0,     0,     0,   215,
       0,     0,     0,   216,     0,     0,   217,   218,   219,     0,
     220,     0,   221,   222,     0,     0,   223,     0,     0,   224,
     225,     0,   226,   227,   228,     0,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,     0,   251,   252,   253,   254,   255,     0,     0,
       0,   256,     0,     0,     0,     0,   257,     0,     0,   258,
       0,     0,     0,   259,   260,   261,     0,     0,   262,     0,
       0,     0,     0,   263,   264,     0,     0,     0,     0,   265,
     266,     0,   267,     0,     0,     0,     0,     0,   268,   269,
     270,   271,   272,     0,     0,     0,   273,     0,  2759,   274,
     275,   276,     0,     0,     0,   277,     0,   278,   279,     0,
     280,   281,   282,     0,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,     0,     0,   291,   292,   293,   294,
     295,     0,     0,   296,   297,     0,   298,   299,   300,   301,
     302,     0,     0,   303,   304,     0,     0,     0,   305,   306,
       0,   307,     0,     0,     0,   308,     0,   309,   310,   311,
     312,     0,   313,     0,   314,     0,     0,     0,   315,   316,
       0,   317,     0,     0,   318,   319,     0,     0,     0,   320,
     321,   322,   323,     0,     0,   324,   325,   326,     0,     0,
     327,     0,     0,     0,     0,   328,   329,   330,     0,     0,
       0,   331,     0,     0,     0,   332,   333,     0,   334,   335,
       0,     0,     0,   336,     0,   337,     0,     0,   338,   339,
       0,     0,   340,     0,     0,   341,   342,     0,     0,     0,
       0,     0,   343,   344,     0,   345,     0,   346,     0,   347,
     348,     0,     0,     0,     0,     0,     0,     0,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,   370,     0,   371,   372,   373,   374,     0,   375,   376,
       0,     0,     0,     0,   377,   378,   379,   380,   381,   382,
       0,     0,   383,   384,     0,   385,     0,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,     0,     0,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
       0,     0,   403,   404,     0,     0,     0,   405,     0,   406,
     407,     0,   408,   409,   410,     0,     0,   411,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   412,   413,   414,
       0,   415,     0,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,     0,   427,     0,   428,   429,
     430,     0,   431,     0,   432,   433,   434,   435,   436,     0,
     437,   438,   439,     0,     0,   440,     0,     0,     0,   441,
     442,     0,   443,   444,     0,     0,   445,   446,   447,   448,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,     0,   463,
       0,   464,   465,     0,   466,   467,   468,     0,   469,     0,
       0,   470,   471,   472,   473,     0,   474,     0,   475,   476,
     477,   478,   479,     0,   480,   481,     0,     0,     0,   482,
     483,   484,   485,     0,     0,     0,   486,     0,     0,     0,
     487,     0,   488,   489,   490,   491,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,   499,
       0,   500,     0,     0,   501,     0,     0,   502,     0,   503,
       0,   504,   505,   506,   507,   508,   509,     0,     0,   510,
     511,     0,     0,   512,   513,   514,   515,   516,   517,     0,
       0,   518,   519,   520,   521,     0,   522,   523,     0,     0,
     524,   525,   526,   527,     0,     0,   528,   529,     0,   530,
     531,   532,   533,     0,     0,     0,     0,     0,   534,   535,
       0,     0,     0,   536,   537,   538,     0,     0,   539,   540,
       0,   541,   542,     0,   543,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,     0,     0,     0,
       0,     0,   550,     0,   551,     0,     0,   552,     0,     0,
       0,   553,     0,   554,   555,   556,   557,     0,     0,     0,
       0,     0,     0,   558,   559,   560,     0,   561,   562,   563,
     564,     0,     0,   565,     0,     0,   566,   567,   568,   569,
     570,     0,   571,     0,     0,     0,     0,     0,     0,     0,
       0,   572,   573,   574,     0,   575,   576,   577,     0,   578,
       0,     0,   579,     0,   580,     0,     0,     0,     0,     0,
       0,   581,   582,     0,     0,   583,     0,   584,     0,   585,
     586,     0,     0,  2760,   587,   588,   589,   590,   591,   592,
     593,   594,     0,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,  2761,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,     0,   627,   628,   629,
     630,   631,   632,   633,     0,     0,     0,     0,     0,   198,
     199,     0,   200,   201,   202,   203,   204,  2762,     0,   205,
       0,     0,     0,     0,   206,     0,  2763,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,     0,     0,
     224,   225,     0,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,   298,   299,   300,
     301,   302,     0,     0,   303,   304,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,   315,
     316,     0,   317,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,     0,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,   330,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,     0,   341,   342,     0,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,     0,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,     0,     0,   403,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   469,
       0,     0,   470,   471,   472,   473,     0,   474,     0,   475,
     476,   477,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,     0,     0,
     510,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,     0,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,   536,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
     578,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,  2760,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,  2761,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,     0,   627,   628,
     629,   630,   631,   632,   633,     0,     0,     0,     0,   198,
     199,     0,   200,   201,   202,   203,   204,     0,  2762,   205,
       0,     0,     0,     0,   206,     0,     0,  2763,     0,   208,
     209,   210,   211,   212,   213,     0,  -456,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,     0,     0,     0,     0,   223,  4867,     0,
     224,   225,     0,   226,   227,     0,     0,     0,     0,   230,
     231,   232,  4868,   234,   235,     0,   236,   237,     0,   238,
     239,     0,   241,     0,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,     0,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,     0,     0,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,     0,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,     0,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,     0,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,  4869,   298,   299,   300,
     301,   302,     0,     0,     0,     0,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,     0,
     316,     0,     0,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,  4870,     0,   324,     0,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,     0,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,  4871,     0,     0,   336,     0,   337,     0,     0,     0,
     339,     0,     0,   340,  4872,     0,   341,   342,     0,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,     0,     0,  -411,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,     0,     0,     0,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,  4873,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,     0,     0,     0,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,     0,   454,  -411,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
       0,     0,   464,   465,     0,   466,   467,   468,  4874,   469,
       0,     0,     0,   471,   472,   473,     0,   474,     0,   475,
     476,     0,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,     0,     0,     0,   489,     0,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,     0,   506,   507,   508,   509,     0,     0,
       0,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,     0,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,     0,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,     0,     0,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
    -411,     0,     0,     0,   558,   559,   560,     0,   561,     0,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
       0,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,     0,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,     0,     0,   628,
     629,   630,   631,   632,   633,     0,   198,   199,     0,   200,
     201,   202,   203,   204,     0,     0,   205,     0,     0,     0,
       0,   206,     0,  5280,   207,     0,   208,   209,   210,   211,
     212,   213,     0,   214,     0,     0,     0,   215,   679,     0,
       0,   216,     0,     0,   217,   218,   219,     0,   220,     0,
     221,   222,     0,     0,   223,     0,     0,   224,   225,     0,
     226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
       0,   251,   252,   253,   254,   255,     0,     0,     0,   256,
       0,     0,     0,     0,   257,     0,     0,   258,     0,     0,
       0,   259,   260,   261,     0,     0,  2677,     0,     0,     0,
       0,   263,   264,   699,     0,     0,     0,   265,   266,     0,
     267,     0,     0,     0,     0,     0,   268,   269,   270,   271,
     272,     0,     0,     0,   273,     0,     0,   274,   275,   276,
       0,     0,     0,   277,     0,   278,   279,     0,   280,   281,
     282,     0,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,     0,     0,   291,   292,   293,   294,   295,     0,
     703,   296,   297,     0,   298,   299,   300,   301,   302,   704,
       0,   303,   304,     0,     0,     0,   305,   306,     0,   307,
       0,     0,     0,   308,     0,   309,   310,   311,   312,     0,
     313,     0,   314,     0,     0,     0,   315,   316,     0,   317,
     709,     0,   318,   319,     0,     0,     0,   320,   321,   322,
     323,     0,     0,   324,   325,   326,     0,     0,   327,     0,
       0,     0,     0,   328,   329,   330,     0,     0,     0,   331,
       0,     0,     0,   332,   333,     0,   334,   335,     0,     0,
       0,   336,     0,   337,     0,     0,   338,   339,     0,     0,
     340,     0,     0,   341,   342,     0,     0,     0,     0,     0,
     343,   344,     0,   345,     0,   346,     0,   347,   348,     0,
       0,   716,     0,     0,     0,     0,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,   370,
       0,   371,   372,   373,   374,     0,   375,   376,     0,     0,
       0,     0,   377,   378,   379,   380,   381,   382,     0,     0,
     383,   384,     0,   385,     0,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,     0,   727,   396,   397,
       0,     0,   398,   399,   400,   401,   402,     0,     0,     0,
     403,   404,     0,   731,   732,   405,     0,   406,   407,     0,
     408,   409,   410,     0,     0,   411,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   412,   413,   414,     0,   415,
       0,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,     0,   427,     0,   428,   429,   430,     0,
     431,     0,   432,   433,   434,   435,   436,     0,   437,   438,
     439,     0,     0,   440,     0,     0,     0,   441,   442,     0,
     443,   444,     0,     0,   445,   446,   447,   448,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,     0,   463,     0,   464,
     465,     0,   466,   467,   468,     0,   469,     0,     0,   470,
     471,   472,   473,     0,   474,     0,   475,   476,   477,   478,
     479,     0,   480,   481,     0,     0,     0,   482,   483,   484,
     485,     0,     0,     0,   486,     0,     0,     0,   487,     0,
     488,   489,   490,   491,     0,   492,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,   499,     0,   500,
       0,     0,   501,     0,     0,   502,     0,   503,     0,   504,
     505,   506,   507,   508,   509,     0,     0,   510,   511,     0,
       0,   512,   513,   514,   515,   516,   517,     0,     0,   518,
     519,   520,   521,     0,   522,   523,     0,     0,   524,   525,
     526,   527,     0,   751,   528,   529,     0,  2678,   531,   532,
    2679,     0,     0,     0,     0,     0,   534,   535,     0,     0,
     757,   536,   537,   538,     0,   759,   539,   540,   760,   541,
     542,     0,   543,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,     0,     0,     0,     0,     0,
     550,     0,   551,     0,     0,   552,     0,     0,     0,   553,
       0,   554,   555,   556,   557,     0,     0,     0,     0,     0,
       0,   558,   559,   560,     0,   561,   562,   563,   564,     0,
       0,   565,     0,     0,   566,   567,   568,   569,   570,     0,
     571,     0,     0,     0,     0,     0,     0,     0,     0,   572,
     573,   574,     0,   575,   576,   577,     0,   578,     0,     0,
     579,     0,   580,     0,     0,     0,     0,     0,     0,   581,
     582,     0,     0,   583,     0,   584,     0,   585,   586,     0,
       0,     0,   587,   588,   589,   590,   591,   592,   593,   594,
       0,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,     0,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,     0,   627,   628,   629,   630,   631,
     632,   633,   198,   199,     0,   200,   201,   202,   203,   204,
       0,     0,   205,     0,     0,     0,     0,   206,     0,   790,
     207,     0,   208,   209,   210,   211,   212,   213,     0,   214,
       0,     0,     0,   215,     0,     0,     0,   216,     0,     0,
     217,   218,   219,     0,   220,     0,   221,   222,     0,     0,
     223,     0,     0,   224,   225,     0,   226,   227,   228,     0,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   250,     0,   251,   252,   253,
     254,   255,     0,     0,     0,   256,     0,     0,     0,     0,
     257,     0,     0,   258,     0,     0,     0,   259,   260,   261,
       0,     0,   262,     0,     0,     0,     0,   263,   264,     0,
       0,     0,     0,   265,   266,     0,   267,     0,     0,     0,
       0,     0,   268,   269,   270,   271,   272,     0,     0,     0,
     273,     0,     0,  1538,   275,   276,     0,     0,     0,   277,
       0,   278,   279,     0,   280,   281,   282,     0,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,     0,     0,
     291,   292,   293,   294,   295,     0,     0,   296,   297,     0,
     298,   299,   300,   301,   302,     0,     0,   303,   304,     0,
       0,     0,   305,   306,     0,   307,     0,     0,     0,   308,
       0,   309,   310,   311,   312,     0,   313,     0,   314,     0,
       0,     0,   315,   316,     0,   317,     0,     0,   318,   319,
       0,     0,     0,   320,   321,   322,   323,     0,     0,   324,
     325,   326,     0,     0,   327,     0,     0,     0,     0,   328,
     329,   330,     0,     0,     0,   331,     0,     0,     0,   332,
     333,     0,   334,   335,     0,     0,     0,   336,     0,   337,
       0,     0,   338,   339,     0,     0,   340,     0,     0,   341,
     342,  1016,     0,     0,     0,     0,   343,   344,     0,   345,
       0,   346,     0,   347,   348,     0,     0,     0,     0,     0,
       0,     0,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,   370,     0,   371,   372,   373,
     374,     0,   375,   376,     0,     0,     0,     0,   377,   378,
     379,   380,   381,   382,     0,     0,   383,   384,     0,   385,
       0,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,     0,     0,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,     0,     0,   403,   404,     0,     0,
       0,   405,     0,   406,   407,     0,   408,   409,   410,     0,
       0,   411,     0,     0,     0,     0,     0,     0,     0,  1539,
       0,   412,   413,   414,     0,   415,     0,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,     0,
     427,     0,   428,   429,   430,     0,   431,     0,   432,   433,
     434,   435,   436,     0,   437,   438,   439,     0,     0,   440,
       0,     0,     0,   441,   442,     0,   443,   444,     0,     0,
     445,   446,   447,   448,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,     0,   463,     0,   464,   465,     0,   466,   467,
     468,     0,   469,     0,     0,   470,   471,   472,   473,     0,
     474,     0,   475,   476,   477,   478,   479,     0,   480,   481,
       0,     0,     0,   482,   483,   484,   485,     0,     0,     0,
     486,     0,     0,     0,   487,     0,   488,   489,   490,   491,
       0,   492,   493,   494,   495,   496,     0,     0,     0,     0,
       0,   497,   498,   499,     0,   500,     0,     0,   501,     0,
       0,   502,     0,   503,     0,   504,   505,   506,   507,   508,
     509,     0,     0,   510,   511,     0,     0,   512,   513,   514,
     515,   516,   517,     0,     0,   518,   519,   520,   521,     0,
     522,   523,     0,     0,   524,   525,   526,   527,     0,   195,
     528,   529,     0,   530,   531,   532,   533,     0,     0,     0,
       0,     0,   534,   535,     0,     0,     0,   536,   537,   538,
       0,     0,   539,   540,     0,   541,   542,     0,   543,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,     0,     0,     0,     0,     0,   550,     0,   551,     0,
       0,   552,     0,     0,     0,   553,     0,   554,   555,   556,
     557,     0,     0,     0,     0,     0,     0,   558,   559,   560,
       0,   561,   562,   563,   564,     0,     0,   565,     0,     0,
     566,   567,   568,   569,   570,     0,   571,     0,     0,     0,
       0,     0,     0,     0,     0,   572,   573,   574,     0,   575,
     576,   577,     0,   578,     0,     0,   579,     0,   580,     0,
       0,     0,     0,     0,     0,   581,   582,     0,     0,   583,
       0,   584,     0,   585,   586,     0,     0,     0,   587,   588,
     589,   590,   591,   592,   593,   594,     0,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,     0,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
       0,   627,   628,   629,   630,   631,   632,   633,   198,   199,
       0,   200,   201,   202,   203,   204,     0,     0,   205,     0,
       0,     0,     0,   206,     0,  1540,   207,     0,   208,   209,
     210,   211,   212,   213,     0,   214,     0,     0,     0,   215,
       0,     0,     0,   216,     0,     0,   217,   218,   219,     0,
     220,     0,   221,   222,     0,     0,   223,     0,     0,   224,
     225,     0,   226,   227,   939,   940,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,     0,   251,   252,   253,   254,   255,     0,     0,
       0,   256,     0,     0,     0,     0,   257,     0,     0,   258,
       0,     0,     0,   259,   260,   261,     0,     0,   262,     0,
       0,     0,     0,   263,   264,     0,     0,     0,   941,   265,
     266,     0,   267,     0,     0,     0,     0,     0,   268,   269,
     270,   271,   272,     0,     0,     0,   273,     0,     0,   274,
     275,   276,     0,     0,     0,   277,     0,   278,   279,     0,
     280,   281,   282,     0,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,     0,     0,   291,   292,   293,   294,
     295,     0,     0,   296,   297,     0,   298,   299,   300,   301,
     302,     0,     0,   303,   304,     0,     0,     0,   305,   306,
       0,   307,     0,     0,     0,   308,     0,   309,   310,   311,
     312,     0,   942,     0,   314,     0,     0,     0,   315,   316,
       0,   317,     0,     0,   318,   319,     0,     0,     0,   320,
     321,   322,   323,     0,     0,   324,   325,   326,     0,     0,
     327,     0,     0,     0,     0,   328,   329,   330,     0,     0,
       0,   331,     0,     0,     0,   332,   333,     0,   334,   335,
       0,     0,     0,   336,     0,   337,     0,     0,   338,   339,
       0,     0,   340,     0,     0,   341,   342,     0,     0,     0,
       0,     0,   343,   344,     0,   943,     0,   346,     0,   347,
     348,     0,     0,     0,     0,     0,     0,     0,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,   370,     0,   371,   372,   373,   374,     0,   375,   376,
       0,     0,     0,     0,   377,   378,   379,   380,   381,   382,
       0,     0,   383,   384,     0,   385,     0,   386,     0,   387,
     388,   389,   390,   391,   392,   944,   394,   395,     0,     0,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
       0,     0,   403,   404,     0,     0,     0,   405,     0,   406,
     407,     0,   408,   409,   410,     0,     0,   411,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   412,   413,   414,
       0,   415,     0,   416,     0,   417,   418,   945,   420,   421,
     422,   423,   424,   425,   426,     0,   427,     0,   428,   429,
     430,     0,   431,     0,   432,   433,   434,   435,   436,     0,
     437,   438,   439,     0,     0,   440,     0,     0,     0,   441,
     442,     0,   443,   444,     0,     0,   445,   446,   447,   448,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,     0,   463,
       0,   464,   465,     0,   466,   467,   468,     0,   469,     0,
       0,   470,   471,   472,   473,     0,   474,     0,   475,   476,
     477,   478,   479,     0,   480,   481,     0,     0,     0,   482,
     483,   946,   485,     0,     0,     0,   486,     0,     0,     0,
     487,     0,   488,   489,   490,   491,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,   499,
       0,   500,     0,     0,   501,     0,     0,   502,     0,   503,
       0,   504,   505,   506,   507,   508,   509,     0,     0,   510,
     511,     0,     0,   512,   513,   514,   515,   516,   517,     0,
       0,   518,   519,   520,   521,     0,   522,   523,     0,     0,
     524,   525,   526,   527,     0,     0,   528,   529,     0,   530,
     531,   532,   533,     0,     0,     0,     0,     0,   947,   535,
       0,     0,     0,   536,   537,   538,     0,     0,   539,   540,
       0,   541,   542,     0,   543,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,     0,     0,     0,
       0,     0,   550,     0,   551,     0,     0,   552,     0,     0,
       0,   553,     0,   554,   555,   556,   557,     0,     0,     0,
       0,     0,     0,   558,   559,   560,     0,   561,   562,   563,
     564,     0,     0,   565,     0,     0,   948,   949,   568,   569,
     570,     0,   571,     0,     0,     0,     0,     0,     0,     0,
       0,   572,   573,   574,     0,   950,   576,   577,     0,   578,
       0,     0,   579,     0,   580,     0,     0,     0,     0,     0,
       0,   581,   582,     0,     0,   583,     0,   584,     0,   585,
     586,     0,     0,     0,   587,   588,   589,   590,   591,   592,
     593,   951,     0,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,     0,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,     0,   627,   628,   629,
     630,   631,   632,   633,   198,   199,     0,   200,   201,   202,
     203,   204,     0,     0,   205,     0,     0,     0,     0,   206,
       0,   952,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,     0,     0,   215,     0,     0,     0,   216,
       0,     0,   217,   218,   219,     0,   220,     0,   221,   222,
       0,     0,   223,     0,     0,   224,   225,     0,   226,   227,
     228,     0,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,     0,   251,
     252,   253,   254,   255,     0,     0,     0,   256,     0,     0,
       0,     0,   257,     0,     0,   258,     0,     0,     0,   259,
     260,   261,     0,     0,   262,     0,     0,     0,     0,   263,
     264,     0,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,     0,     0,   268,   269,   270,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,   276,     0,     0,
       0,   277,     0,   278,   279,     0,   280,   281,   282,     0,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
       0,     0,   291,   292,   293,   294,   295,     0,     0,   296,
     297,     0,   298,   299,   300,   301,   302,     0,     0,   303,
     304,     0,     0,     0,   305,   306,     0,   307,     0,     0,
       0,   308,     0,   309,   310,   311,   312,     0,   313,     0,
     314,     0,     0,     0,   315,   316,     0,   317,     0,     0,
     318,   319,     0,     0,     0,   320,   321,   322,   323,     0,
       0,   324,   325,   326,     0,     0,   327,     0,     0,     0,
       0,   328,   329,   330,     0,     0,     0,   331,     0,     0,
       0,   332,   333,     0,   334,   335,     0,     0,     0,   336,
       0,   337,     0,     0,   338,   339,     0,     0,   340,     0,
       0,   341,   342,  1016,     0,     0,     0,     0,   343,   344,
       0,   345,     0,   346,     0,   347,   348,     0,     0,     0,
       0,     0,     0,     0,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,   370,     0,   371,
     372,   373,   374,     0,   375,   376,     0,     0,     0,     0,
     377,   378,   379,   380,   381,   382,     0,     0,   383,   384,
       0,   385,     0,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,     0,     0,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,     0,     0,   403,   404,
       0,     0,     0,   405,     0,   406,   407,     0,   408,   409,
     410,     0,     0,   411,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   412,   413,   414,     0,   415,     0,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,     0,   427,     0,   428,   429,   430,     0,   431,     0,
     432,   433,   434,   435,   436,     0,   437,   438,   439,     0,
       0,   440,     0,     0,     0,   441,   442,     0,   443,   444,
       0,     0,   445,   446,   447,   448,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,     0,   463,     0,   464,   465,     0,
     466,   467,   468,     0,   469,     0,     0,   470,   471,   472,
     473,     0,   474,     0,   475,   476,   477,   478,   479,     0,
     480,   481,     0,     0,     0,   482,   483,   484,   485,     0,
       0,     0,   486,     0,     0,     0,   487,     0,   488,   489,
     490,   491,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,   499,     0,   500,     0,     0,
     501,     0,     0,   502,     0,   503,     0,   504,   505,   506,
     507,   508,   509,     0,     0,   510,   511,     0,     0,   512,
     513,   514,   515,   516,   517,     0,     0,   518,   519,   520,
     521,     0,   522,   523,     0,     0,   524,   525,   526,   527,
       0,   195,   528,   529,     0,   530,   531,   532,   533,     0,
       0,     0,     0,     0,   534,   535,     0,     0,     0,   536,
     537,   538,     0,     0,   539,   540,     0,   541,   542,     0,
     543,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,     0,     0,     0,     0,     0,   550,     0,
     551,     0,     0,   552,     0,     0,     0,   553,     0,   554,
     555,   556,   557,     0,     0,     0,     0,     0,     0,   558,
     559,   560,     0,   561,   562,   563,   564,     0,     0,   565,
       0,     0,   566,   567,   568,   569,   570,     0,   571,     0,
       0,     0,     0,     0,     0,     0,     0,   572,   573,   574,
       0,   575,   576,   577,     0,   578,     0,     0,   579,     0,
     580,     0,     0,     0,     0,     0,     0,   581,   582,     0,
       0,   583,     0,   584,     0,   585,   586,     0,     0,     0,
     587,   588,   589,   590,   591,   592,   593,   594,     0,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,     0,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,     0,   627,   628,   629,   630,   631,   632,   633,
     198,   199,     0,   200,   201,   202,   203,   204,     0,     0,
     205,     0,     0,     0,     0,   206,     0,  1226,   207,     0,
     208,   209,   210,   211,   212,   213,     0,   214,     0,     0,
       0,   215,     0,     0,     0,   216,     0,     0,   217,   218,
     219,     0,   220,     0,   221,   222,     0,     0,   223,     0,
       0,   224,   225,     0,   226,   227,   228,     0,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,     0,   251,   252,   253,   254,   255,
       0,     0,     0,   256,     0,     0,     0,     0,   257,     0,
       0,   258,     0,     0,     0,   259,   260,   261,     0,     0,
     262,     0,     0,     0,     0,   263,   264,     0,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,     0,     0,
     268,   269,   270,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,   276,     0,     0,     0,   277,     0,   278,
     279,     0,   280,   281,   282,     0,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,     0,     0,   291,   292,
     293,   294,   295,     0,     0,   296,   297,     0,   298,   299,
     300,   301,   302,     0,     0,   303,   304,     0,     0,     0,
     305,   306,     0,   307,     0,     0,     0,   308,     0,   309,
     310,   311,   312,     0,   313,     0,   314,     0,     0,     0,
     315,   316,     0,   317,     0,     0,   318,   319,     0,     0,
       0,   320,   321,   322,   323,     0,     0,   324,   325,   326,
       0,     0,   327,     0,     0,     0,     0,   328,   329,   330,
       0,     0,     0,   331,     0,     0,     0,   332,   333,     0,
     334,   335,     0,     0,     0,   336,     0,   337,     0,     0,
     338,   339,     0,     0,   340,     0,     0,   341,   342,  1016,
       0,     0,     0,     0,   343,   344,     0,   345,     0,   346,
       0,   347,   348,     0,     0,     0,     0,     0,     0,     0,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,   370,     0,   371,   372,   373,   374,     0,
     375,   376,     0,     0,     0,     0,   377,   378,   379,   380,
     381,   382,     0,     0,   383,   384,     0,   385,     0,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,     0,     0,   398,   399,   400,   401,
     402,     0,     0,     0,   403,   404,     0,     0,     0,   405,
       0,   406,   407,     0,   408,   409,   410,     0,     0,   411,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   412,
     413,   414,     0,   415,     0,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,     0,   427,     0,
     428,   429,   430,     0,   431,     0,   432,   433,   434,   435,
     436,     0,   437,   438,   439,     0,     0,   440,     0,     0,
       0,   441,   442,     0,   443,   444,     0,     0,   445,   446,
     447,   448,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
       0,   463,     0,   464,   465,     0,   466,   467,   468,     0,
     469,     0,     0,   470,   471,   472,   473,     0,   474,     0,
     475,   476,   477,   478,   479,     0,   480,   481,     0,     0,
       0,   482,   483,   484,   485,     0,     0,     0,   486,     0,
       0,     0,   487,     0,   488,   489,   490,   491,     0,   492,
     493,   494,   495,   496,     0,     0,     0,     0,     0,   497,
     498,   499,     0,   500,     0,     0,   501,     0,     0,   502,
       0,   503,     0,   504,   505,   506,   507,   508,   509,     0,
       0,   510,   511,     0,     0,   512,   513,   514,   515,   516,
     517,     0,     0,   518,   519,   520,   521,     0,   522,   523,
       0,     0,   524,   525,   526,   527,     0,   195,   528,   529,
       0,   530,   531,   532,   533,     0,     0,     0,     0,     0,
     534,   535,     0,     0,     0,   536,   537,   538,     0,     0,
     539,   540,     0,   541,   542,     0,   543,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,     0,
       0,     0,     0,     0,   550,     0,   551,     0,     0,   552,
       0,     0,     0,   553,     0,   554,   555,   556,   557,     0,
       0,     0,     0,     0,     0,   558,   559,   560,     0,   561,
     562,   563,   564,     0,     0,   565,     0,     0,   566,   567,
     568,   569,   570,     0,   571,     0,     0,     0,     0,     0,
       0,     0,     0,   572,   573,   574,     0,   575,   576,   577,
       0,   578,     0,     0,   579,     0,   580,     0,     0,     0,
       0,     0,     0,   581,   582,     0,     0,   583,     0,   584,
       0,   585,   586,     0,     0,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,     0,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,     0,   627,
     628,   629,   630,   631,   632,   633,   198,   199,     0,   200,
     201,   202,   203,   204,     0,     0,   205,     0,     0,     0,
       0,   206,     0,  1407,   207,     0,   208,   209,   210,   211,
     212,   213,     0,   214,     0,     0,     0,   215,     0,     0,
       0,   216,     0,     0,   217,   218,   219,     0,   220,     0,
     221,   222,     0,     0,   223,     0,     0,   224,   225,     0,
     226,   227,   939,   940,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
       0,   251,   252,   253,   254,   255,     0,     0,     0,   256,
       0,     0,     0,     0,   257,     0,     0,   258,     0,     0,
       0,   259,   260,   261,     0,     0,   262,     0,     0,     0,
       0,   263,   264,     0,     0,     0,  1415,   265,   266,     0,
     267,     0,     0,     0,     0,     0,   268,   269,   270,   271,
     272,     0,     0,     0,   273,     0,     0,   274,   275,   276,
       0,     0,     0,   277,     0,   278,   279,     0,   280,   281,
     282,     0,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,     0,     0,   291,   292,   293,   294,   295,     0,
       0,   296,   297,     0,   298,   299,   300,   301,   302,     0,
       0,   303,   304,     0,     0,     0,   305,   306,     0,   307,
       0,     0,     0,   308,     0,   309,   310,   311,   312,     0,
     942,     0,   314,     0,     0,     0,   315,   316,     0,   317,
       0,     0,   318,   319,     0,     0,     0,   320,   321,   322,
     323,     0,     0,   324,   325,   326,     0,     0,   327,     0,
       0,     0,     0,   328,   329,   330,     0,     0,     0,   331,
       0,     0,     0,   332,   333,     0,   334,   335,     0,     0,
       0,   336,     0,   337,     0,     0,   338,   339,     0,     0,
     340,     0,     0,   341,   342,     0,     0,     0,     0,     0,
     343,   344,     0,   943,     0,   346,     0,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,   370,
       0,   371,   372,   373,   374,     0,   375,   376,     0,     0,
       0,     0,   377,   378,   379,   380,   381,   382,     0,     0,
     383,   384,     0,   385,     0,   386,     0,   387,   388,   389,
     390,   391,   392,   944,   394,   395,     0,     0,   396,   397,
       0,     0,   398,   399,   400,   401,   402,     0,     0,     0,
     403,   404,     0,     0,     0,   405,     0,   406,   407,     0,
     408,   409,   410,     0,     0,   411,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   412,   413,   414,     0,   415,
       0,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,     0,   427,     0,   428,   429,   430,     0,
     431,     0,   432,   433,   434,   435,   436,     0,   437,   438,
     439,     0,     0,   440,     0,     0,     0,   441,   442,     0,
     443,   444,     0,     0,   445,   446,   447,   448,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,     0,   463,     0,   464,
     465,     0,   466,   467,   468,     0,   469,     0,     0,   470,
     471,   472,   473,     0,   474,     0,   475,   476,   477,   478,
     479,     0,   480,   481,     0,     0,     0,   482,   483,   946,
     485,     0,     0,     0,   486,     0,     0,     0,   487,     0,
     488,   489,   490,   491,     0,   492,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,   499,     0,   500,
       0,     0,   501,     0,     0,   502,     0,   503,     0,   504,
     505,   506,   507,   508,   509,     0,     0,   510,   511,     0,
       0,   512,   513,   514,   515,   516,   517,     0,     0,   518,
     519,   520,   521,     0,   522,   523,     0,     0,   524,   525,
     526,   527,     0,     0,   528,   529,     0,   530,   531,   532,
     533,     0,     0,     0,     0,     0,   534,   535,     0,     0,
       0,   536,   537,   538,     0,     0,   539,   540,     0,   541,
     542,     0,   543,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,     0,     0,     0,     0,     0,
     550,     0,   551,     0,     0,   552,     0,     0,     0,   553,
       0,   554,   555,   556,   557,     0,     0,     0,     0,     0,
       0,   558,   559,   560,     0,   561,   562,   563,   564,     0,
       0,   565,     0,     0,   948,   567,   568,   569,   570,     0,
     571,     0,     0,     0,     0,     0,     0,     0,     0,   572,
     573,   574,     0,   950,   576,   577,     0,   578,     0,     0,
     579,     0,   580,     0,     0,     0,     0,     0,     0,   581,
     582,     0,     0,   583,     0,   584,     0,   585,   586,     0,
       0,     0,   587,   588,   589,   590,   591,   592,   593,   594,
       0,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,     0,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,     0,   627,   628,   629,   630,   631,
     632,   633,   198,   199,     0,   200,   201,   202,   203,   204,
       0,     0,   205,     0,     0,     0,     0,   206,     0,   952,
     207,     0,   208,   209,   210,   211,   212,   213,     0,   214,
       0,     0,     0,   215,     0,     0,     0,   216,     0,     0,
     217,   218,   219,     0,   220,     0,   221,   222,     0,     0,
     223,     0,     0,   224,   225,     0,   226,   227,   228,     0,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   250,     0,   251,   252,   253,
     254,   255,     0,     0,     0,   256,     0,     0,     0,     0,
     257,     0,     0,   258,     0,     0,     0,   259,   260,   261,
       0,     0,   262,     0,     0,     0,     0,   263,   264,     0,
       0,     0,     0,   265,   266,     0,   267,     0,     0,     0,
       0,     0,   268,   269,   270,   271,   272,     0,     0,     0,
     273,     0,     0,   274,   275,   276,     0,     0,     0,   277,
       0,   278,   279,     0,   280,   281,   282,     0,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,     0,     0,
     291,   292,   293,   294,   295,     0,     0,   296,   297,     0,
     298,   299,   300,   301,   302,     0,     0,   303,   304,     0,
       0,     0,   305,   306,     0,   307,     0,     0,     0,   308,
       0,   309,   310,   311,   312,     0,   313,     0,   314,     0,
       0,     0,   315,   316,     0,   317,     0,     0,   318,   319,
       0,     0,     0,   320,   321,   322,   323,     0,     0,   324,
     325,   326,     0,     0,   327,     0,     0,     0,     0,   328,
     329,   330,     0,     0,     0,   331,     0,     0,     0,   332,
     333,     0,   334,   335,     0,     0,     0,   336,     0,   337,
       0,     0,   338,   339,     0,     0,   340,     0,     0,   341,
     342,  1016,     0,     0,     0,     0,   343,   344,     0,   345,
       0,   346,     0,   347,   348,     0,     0,     0,     0,     0,
       0,     0,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,   370,     0,   371,   372,   373,
     374,     0,   375,   376,     0,     0,     0,     0,   377,   378,
     379,   380,   381,   382,     0,     0,   383,   384,     0,   385,
       0,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,     0,     0,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,     0,     0,   403,   404,     0,     0,
       0,   405,     0,   406,   407,     0,   408,   409,   410,     0,
       0,   411,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   412,   413,   414,     0,   415,     0,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,     0,
     427,     0,   428,   429,   430,     0,   431,     0,   432,   433,
     434,   435,   436,     0,   437,   438,   439,     0,     0,   440,
       0,     0,     0,   441,   442,     0,   443,   444,     0,     0,
     445,   446,   447,   448,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,     0,   463,     0,   464,   465,     0,   466,   467,
     468,     0,   469,     0,     0,   470,   471,   472,   473,     0,
     474,     0,   475,   476,   477,   478,   479,     0,   480,   481,
       0,     0,     0,   482,   483,   484,   485,     0,     0,     0,
     486,     0,     0,     0,   487,     0,   488,   489,   490,   491,
       0,   492,   493,   494,   495,   496,     0,     0,     0,     0,
       0,   497,   498,   499,     0,   500,     0,     0,   501,     0,
       0,   502,     0,   503,     0,   504,   505,   506,   507,   508,
     509,     0,     0,   510,   511,     0,     0,   512,   513,   514,
     515,   516,   517,     0,     0,   518,   519,   520,   521,     0,
     522,   523,     0,     0,   524,   525,   526,   527,     0,   195,
     528,   529,     0,   530,   531,   532,   533,     0,     0,     0,
       0,     0,   534,   535,     0,     0,     0,   536,   537,   538,
       0,     0,   539,   540,     0,   541,   542,     0,   543,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,     0,     0,     0,     0,     0,   550,     0,   551,     0,
       0,   552,     0,     0,     0,   553,     0,   554,   555,   556,
     557,     0,     0,     0,     0,     0,     0,   558,   559,   560,
       0,   561,   562,   563,   564,     0,     0,   565,     0,     0,
     566,   567,   568,   569,   570,     0,   571,     0,     0,     0,
       0,     0,     0,     0,     0,   572,   573,   574,     0,   575,
     576,   577,     0,   578,     0,     0,   579,     0,   580,     0,
       0,     0,     0,     0,     0,   581,   582,     0,     0,   583,
       0,   584,     0,   585,   586,     0,     0,     0,   587,   588,
     589,   590,   591,   592,   593,   594,     0,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,     0,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
       0,   627,   628,   629,   630,   631,   632,   633,   198,   199,
       0,   200,   201,   202,   203,   204,     0,     0,   205,     0,
       0,     0,     0,   206,     0,  1540,   207,     0,   208,   209,
     210,   211,   212,   213,     0,   214,     0,     0,     0,   215,
       0,     0,     0,   216,     0,     0,   217,   218,   219,     0,
     220,     0,   221,   222,     0,     0,   223,     0,     0,   224,
     225,     0,   226,   227,   228,     0,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,  2006,
     249,   250,     0,   251,   252,   253,   254,   255,     0,     0,
       0,   256,     0,     0,     0,     0,   257,     0,     0,   258,
       0,     0,     0,   259,   260,   261,     0,     0,   262,     0,
       0,     0,     0,   263,   264,     0,     0,     0,     0,   265,
     266,     0,   267,     0,     0,     0,     0,     0,   268,   269,
     270,   271,   272,     0,     0,     0,   273,     0,     0,   274,
     275,   276,     0,     0,     0,   277,     0,   278,   279,     0,
     280,   281,   282,     0,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,     0,     0,   291,   292,   293,   294,
     295,     0,     0,   296,   297,     0,   298,   299,   300,   301,
     302,     0,     0,   303,   304,     0,     0,     0,   305,   306,
       0,   307,     0,     0,     0,   308,     0,   309,   310,   311,
     312,     0,   313,     0,   314,     0,     0,     0,   315,   316,
       0,   317,     0,     0,   318,   319,     0,     0,     0,   320,
     321,   322,   323,     0,     0,   324,   325,   326,     0,     0,
     327,     0,     0,     0,     0,   328,   329,   330,     0,     0,
       0,   331,     0,     0,     0,   332,   333,     0,   334,   335,
       0,     0,     0,   336,     0,   337,     0,     0,   338,   339,
       0,     0,   340,     0,     0,   341,   342,     0,     0,     0,
       0,     0,   343,   344,     0,   345,     0,   346,     0,   347,
     348,     0,     0,     0,     0,     0,     0,     0,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,   370,     0,   371,   372,   373,   374,     0,   375,   376,
       0,     0,     0,     0,   377,   378,   379,   380,   381,   382,
       0,     0,   383,   384,     0,   385,     0,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,     0,     0,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
       0,     0,   403,   404,     0,     0,     0,   405,     0,   406,
     407,     0,   408,   409,   410,     0,     0,   411,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   412,   413,   414,
       0,   415,     0,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,     0,   427,     0,   428,   429,
     430,     0,   431,     0,   432,   433,   434,   435,   436,     0,
     437,   438,   439,     0,     0,   440,     0,     0,     0,   441,
     442,     0,   443,   444,     0,     0,   445,   446,   447,   448,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,     0,   463,
       0,   464,   465,     0,   466,   467,   468,     0,   469,     0,
       0,   470,   471,   472,   473,     0,   474,     0,   475,   476,
     477,   478,   479,     0,   480,   481,     0,     0,     0,   482,
     483,   484,   485,     0,     0,     0,   486,     0,     0,     0,
     487,     0,   488,   489,   490,   491,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,   499,
       0,   500,     0,     0,   501,     0,     0,   502,     0,   503,
       0,   504,   505,   506,   507,   508,   509,     0,     0,   510,
     511,     0,     0,   512,   513,   514,   515,   516,   517,     0,
       0,   518,   519,   520,   521,     0,   522,   523,     0,     0,
     524,   525,   526,   527,     0,     0,   528,   529,     0,   530,
     531,   532,   533,     0,     0,     0,     0,     0,   534,   535,
       0,     0,     0,   536,   537,   538,     0,     0,   539,   540,
       0,   541,   542,     0,   543,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,     0,     0,     0,
       0,     0,   550,     0,   551,     0,     0,   552,     0,     0,
       0,   553,     0,   554,   555,   556,   557,     0,     0,     0,
       0,     0,     0,   558,   559,   560,     0,   561,   562,   563,
     564,     0,     0,   565,     0,     0,   566,   567,   568,   569,
     570,     0,   571,     0,     0,     0,     0,     0,     0,     0,
       0,   572,   573,   574,     0,   575,   576,   577,     0,   578,
       0,     0,   579,     0,   580,     0,     0,     0,     0,     0,
       0,   581,   582,     0,     0,   583,     0,   584,     0,   585,
     586,     0,     0,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,     0,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,     0,   627,   628,   629,
     630,   631,   632,   633,   198,   199,     0,   200,   201,   202,
     203,   204,     0,     0,   205,     0,     0,     0,     0,   206,
       0,  2007,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,     0,     0,   215,     0,     0,     0,   216,
       0,     0,   217,   218,   219,     0,   220,     0,   221,   222,
       0,     0,   223,     0,     0,   224,   225,     0,   226,   227,
     228,     0,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,     0,   251,
     252,   253,   254,   255,     0,     0,     0,   256,     0,     0,
       0,     0,   257,     0,     0,   258,     0,     0,     0,   259,
     260,   261,     0,     0,   262,     0,     0,     0,     0,   263,
     264,     0,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,     0,     0,   268,   269,   270,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,   276,     0,     0,
       0,   277,     0,   278,   279,     0,   280,   281,   282,     0,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
       0,     0,   291,   292,   293,   294,   295,     0,     0,   296,
     297,     0,   298,   299,   300,   301,   302,     0,     0,   303,
     304,     0,     0,     0,   305,   306,     0,   307,     0,     0,
       0,   308,     0,   309,   310,   311,   312,     0,   313,     0,
     314,     0,     0,     0,   315,   316,     0,   317,     0,     0,
     318,   319,     0,     0,     0,   320,   321,   322,   323,     0,
       0,   324,   325,   326,     0,     0,   327,     0,     0,     0,
       0,   328,   329,   330,     0,     0,     0,   331,     0,     0,
       0,   332,   333,     0,   334,   335,     0,     0,     0,   336,
       0,   337,     0,     0,   338,   339,     0,     0,   340,     0,
       0,   341,   342,     0,     0,     0,     0,     0,   343,   344,
       0,   345,     0,   346,     0,   347,   348,     0,     0,     0,
       0,     0,     0,     0,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,   370,     0,   371,
     372,   373,   374,     0,   375,   376,     0,     0,     0,     0,
     377,   378,   379,   380,   381,   382,     0,     0,   383,   384,
       0,   385,     0,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,     0,     0,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,     0,     0,   403,   404,
       0,     0,     0,   405,     0,   406,   407,     0,   408,   409,
     410,     0,     0,   411,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   412,   413,   414,     0,   415,     0,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,     0,   427,     0,   428,   429,   430,     0,   431,     0,
     432,   433,   434,   435,   436,     0,   437,   438,   439,     0,
       0,   440,     0,     0,     0,   441,   442,     0,   443,   444,
       0,     0,   445,   446,   447,   448,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,     0,   463,     0,   464,   465,     0,
     466,   467,   468,     0,   469,     0,     0,   470,   471,   472,
     473,     0,   474,     0,   475,   476,   477,   478,   479,     0,
     480,   481,     0,     0,     0,   482,   483,   484,   485,     0,
       0,     0,   486,     0,     0,     0,   487,     0,   488,   489,
     490,   491,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,   499,     0,   500,     0,     0,
     501,     0,     0,   502,     0,   503,     0,   504,   505,   506,
     507,   508,   509,     0,     0,   510,   511,     0,     0,   512,
     513,   514,   515,   516,   517,     0,     0,   518,   519,   520,
     521,     0,   522,   523,     0,     0,   524,   525,   526,   527,
       0,     0,   528,   529,     0,   530,   531,   532,   533,     0,
       0,     0,     0,     0,   534,   535,     0,     0,     0,   536,
     537,   538,     0,     0,   539,   540,     0,   541,   542,     0,
     543,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,     0,     0,     0,     0,     0,   550,     0,
     551,     0,     0,   552,     0,     0,     0,   553,     0,   554,
     555,   556,   557,     0,     0,     0,     0,     0,     0,   558,
     559,   560,     0,   561,   562,   563,   564,     0,     0,   565,
       0,     0,   566,   567,   568,   569,   570,     0,   571,     0,
       0,     0,     0,     0,     0,     0,     0,   572,   573,   574,
       0,   575,   576,   577,     0,   578,     0,     0,   579,     0,
     580,     0,     0,     0,     0,     0,     0,   581,   582,     0,
       0,   583,     0,   584,     0,   585,   586,     0,     0,     0,
     587,   588,   589,   590,   591,   592,   593,   594,     0,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,     0,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,     0,   627,   628,   629,   630,   631,   632,   633,
     198,   199,     0,   200,   201,   202,   203,   204,     0,     0,
     205,     0,     0,     0,  5207,   206,     0,  5208,   207,     0,
     208,   209,   210,   211,   212,   213,     0,   214,     0,     0,
       0,   215,     0,     0,     0,   216,     0,     0,   217,   218,
     219,     0,   220,     0,   221,   222,     0,     0,   223,     0,
       0,   224,   225,     0,   226,   227,   228,     0,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,     0,   251,   252,   253,   254,   255,
       0,     0,     0,   256,     0,     0,     0,     0,   257,     0,
       0,   258,     0,     0,     0,   259,   260,   261,     0,     0,
     262,     0,     0,     0,     0,   263,   264,     0,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,     0,     0,
     268,   269,   270,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,   276,     0,     0,     0,   277,     0,   278,
     279,     0,   280,   281,   282,     0,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,     0,     0,   291,   292,
     293,   294,   295,     0,     0,   296,   297,     0,   298,   299,
     300,   301,   302,     0,     0,   303,   304,     0,     0,     0,
     305,   306,     0,   307,     0,     0,     0,   308,     0,   309,
     310,   311,   312,     0,   313,     0,   314,     0,     0,     0,
     315,   316,     0,   317,     0,     0,   318,   319,     0,     0,
       0,   320,   321,   322,   323,     0,     0,   324,   325,   326,
       0,     0,   327,     0,     0,     0,     0,   328,   329,   330,
       0,     0,     0,   331,     0,     0,     0,   332,   333,     0,
     334,   335,     0,     0,     0,   336,     0,   337,     0,     0,
     338,   339,     0,     0,   340,     0,     0,   341,   342,     0,
       0,     0,     0,     0,   343,   344,     0,   345,     0,   346,
       0,   347,   348,     0,     0,     0,     0,     0,     0,     0,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,   370,     0,   371,   372,   373,   374,     0,
     375,   376,     0,     0,     0,     0,   377,   378,   379,   380,
     381,   382,     0,     0,   383,   384,     0,   385,     0,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,     0,     0,   398,   399,   400,   401,
     402,     0,     0,     0,   403,   404,     0,     0,     0,   405,
       0,   406,   407,     0,   408,   409,   410,     0,     0,   411,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   412,
     413,   414,     0,   415,     0,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,     0,   427,     0,
     428,   429,   430,     0,   431,     0,   432,   433,   434,   435,
     436,     0,   437,   438,   439,     0,     0,   440,     0,     0,
       0,   441,   442,     0,   443,   444,     0,     0,   445,   446,
     447,   448,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
       0,   463,     0,   464,   465,     0,   466,   467,   468,     0,
     469,     0,     0,   470,   471,   472,   473,     0,   474,     0,
     475,   476,   477,   478,   479,     0,   480,   481,     0,     0,
       0,   482,   483,   484,   485,     0,     0,     0,   486,     0,
       0,     0,   487,     0,   488,   489,   490,   491,     0,   492,
     493,   494,   495,   496,     0,     0,     0,     0,     0,   497,
     498,   499,     0,   500,     0,     0,   501,     0,     0,   502,
       0,   503,     0,   504,   505,   506,   507,   508,   509,     0,
       0,   510,   511,     0,     0,   512,   513,   514,   515,   516,
     517,     0,     0,   518,   519,   520,   521,     0,   522,   523,
       0,     0,   524,   525,   526,   527,     0,     0,   528,   529,
       0,   530,   531,   532,   533,     0,     0,     0,     0,     0,
     534,   535,     0,     0,     0,   536,   537,   538,     0,     0,
     539,   540,     0,   541,   542,     0,   543,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,     0,
       0,     0,     0,     0,   550,     0,   551,     0,     0,   552,
       0,     0,     0,   553,     0,   554,   555,   556,   557,     0,
       0,     0,     0,     0,     0,   558,   559,   560,     0,   561,
     562,   563,   564,     0,     0,   565,     0,     0,   566,   567,
     568,   569,   570,     0,   571,     0,     0,     0,     0,     0,
       0,     0,     0,   572,   573,   574,     0,   575,   576,   577,
       0,   578,     0,     0,   579,     0,   580,     0,     0,     0,
       0,     0,     0,   581,   582,     0,     0,   583,     0,   584,
       0,   585,   586,     0,     0,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,     0,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,     0,   627,
     628,   629,   630,   631,   632,   633,   198,   199,     0,   200,
     201,   202,   203,   204,     0,     0,   205,     0,     0,     0,
       0,   206,     0,  2007,   207,     0,   208,   209,   210,   211,
     212,   213,     0,   214,     0,     0,     0,   215,     0,     0,
       0,   216,     0,     0,   217,   218,   219,     0,   220,     0,
     221,   222,     0,     0,   223,     0,     0,   224,   225,     0,
     226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
       0,   251,   252,   253,   254,   255,     0,     0,     0,   256,
       0,     0,     0,     0,   257,     0,     0,   258,     0,     0,
       0,   259,   260,   261,     0,     0,   262,     0,     0,     0,
       0,   263,   264,     0,     0,     0,     0,   265,   266,     0,
     267,     0,     0,     0,     0,     0,   268,   269,   270,   271,
     272,     0,     0,     0,   273,     0,     0,   274,   275,   276,
       0,     0,     0,   277,     0,   278,   279,     0,   280,   281,
     282,     0,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,     0,     0,   291,   292,   293,   294,   295,     0,
       0,   296,   297,     0,   298,   299,   300,   301,   302,     0,
       0,   303,   304,     0,     0,     0,   305,   306,     0,   307,
       0,     0,     0,   308,     0,   309,   310,   311,   312,     0,
     313,     0,   314,     0,     0,     0,   315,   316,     0,   317,
       0,     0,   318,   319,     0,     0,     0,   320,   321,   322,
     323,     0,     0,   324,   325,   326,     0,     0,   327,     0,
       0,     0,     0,   328,   329,   330,     0,     0,     0,   331,
       0,     0,     0,   332,   333,     0,   334,   335,     0,     0,
       0,   336,     0,   337,     0,     0,   338,   339,     0,     0,
     340,     0,     0,   341,   342,     0,     0,     0,     0,     0,
     343,   344,     0,   345,     0,   346,     0,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,   370,
       0,   371,   372,   373,   374,     0,   375,   376,     0,     0,
       0,     0,   377,   378,   379,   380,   381,   382,     0,     0,
     383,   384,     0,   385,     0,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,     0,     0,   396,   397,
       0,     0,   398,   399,   400,   401,   402,     0,     0,     0,
     403,   404,     0,     0,     0,   405,     0,   406,   407,     0,
     408,   409,   410,     0,     0,   411,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   412,   413,   414,     0,   415,
       0,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,     0,   427,     0,   428,   429,   430,     0,
     431,     0,   432,   433,   434,   435,   436,     0,   437,   438,
     439,     0,     0,   440,     0,     0,     0,   441,   442,     0,
     443,   444,     0,     0,   445,   446,   447,   448,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,     0,   463,     0,   464,
     465,     0,   466,   467,   468,     0,   469,     0,     0,   470,
     471,   472,   473,     0,   474,     0,   475,   476,   477,   478,
     479,     0,   480,   481,     0,     0,     0,   482,   483,   484,
     485,     0,     0,     0,   486,     0,     0,     0,   487,     0,
     488,   489,   490,   491,     0,   492,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,   499,     0,   500,
       0,     0,   501,     0,     0,   502,     0,   503,     0,   504,
     505,   506,   507,   508,   509,     0,     0,   510,   511,     0,
       0,   512,   513,   514,   515,   516,   517,     0,     0,   518,
     519,   520,   521,     0,   522,   523,     0,     0,   524,   525,
     526,   527,     0,     0,   528,   529,     0,   530,   531,   532,
     533,     0,     0,     0,     0,     0,   534,   535,     0,     0,
       0,   536,   537,   538,     0,     0,   539,   540,     0,   541,
     542,     0,   543,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,     0,     0,     0,     0,     0,
     550,     0,   551,     0,     0,   552,     0,     0,     0,   553,
       0,   554,   555,   556,   557,     0,     0,     0,     0,     0,
       0,   558,   559,   560,     0,   561,   562,   563,   564,     0,
       0,   565,     0,     0,   566,   567,   568,   569,   570,     0,
     571,     0,     0,     0,     0,     0,     0,     0,     0,   572,
     573,   574,     0,   575,   576,   577,     0,   578,     0,     0,
     579,     0,   580,     0,     0,     0,     0,     0,     0,   581,
     582,     0,     0,   583,     0,   584,     0,   585,   586,     0,
       0,     0,   587,   588,   589,   590,   591,   592,   593,   594,
       0,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,     0,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,     0,   627,   628,   629,   630,   631,
     632,   633,   198,   199,     0,   200,   201,   202,   203,   204,
       0,     0,   205,     0,     0,     0,     0,   206,     0,  5208,
     207,     0,   208,   209,   210,   211,   212,   213,     0,   214,
       0,     0,     0,   215,     0,     0,     0,   216,     0,     0,
     217,   218,   219,     0,   220,     0,   221,   222,     0,     0,
     223,     0,     0,   224,   225,     0,   226,   227,   228,     0,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   250,     0,   251,   252,   253,
     254,   255,     0,     0,     0,   256,     0,     0,     0,     0,
     257,     0,     0,   258,     0,     0,     0,   259,   260,   261,
       0,     0,   262,     0,     0,     0,     0,   263,   264,     0,
       0,     0,     0,   265,   266,     0,   267,     0,     0,     0,
       0,     0,   268,   269,   270,   271,   272,     0,     0,     0,
     273,     0,     0,   274,   275,   276,     0,     0,     0,   277,
       0,   278,   279,     0,   280,   281,   282,     0,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,     0,     0,
     291,   292,   293,   294,   295,     0,     0,   296,   297,     0,
     298,   299,   300,   301,   302,     0,     0,   303,   304,     0,
       0,     0,   305,   306,     0,   307,     0,     0,     0,   308,
       0,   309,   310,   311,   312,     0,   313,     0,   314,     0,
       0,     0,   315,   316,     0,   317,     0,     0,   318,   319,
       0,     0,     0,   320,   321,   322,   323,     0,     0,   324,
     325,   326,     0,     0,   327,     0,     0,     0,     0,   328,
     329,   330,     0,     0,     0,   331,     0,     0,     0,   332,
     333,     0,   334,   335,     0,     0,     0,   336,     0,   337,
       0,     0,   338,   339,     0,     0,   340,     0,     0,   341,
     342,     0,     0,     0,     0,     0,   343,   344,     0,   345,
       0,   346,     0,   347,   348,     0,     0,     0,     0,     0,
       0,     0,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,   370,     0,   371,   372,   373,
     374,     0,   375,   376,     0,     0,     0,     0,   377,   378,
     379,   380,   381,   382,     0,     0,   383,   384,     0,   385,
       0,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,     0,     0,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,     0,     0,   403,   404,     0,     0,
       0,   405,     0,   406,   407,     0,   408,   409,   410,     0,
       0,   411,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   412,   413,   414,     0,   415,     0,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,     0,
     427,     0,   428,   429,   430,     0,   431,     0,   432,   433,
     434,   435,   436,     0,   437,   438,   439,     0,     0,   440,
       0,     0,     0,   441,   442,     0,   443,   444,     0,     0,
     445,   446,   447,   448,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,     0,   463,     0,   464,   465,     0,   466,   467,
     468,     0,   469,     0,     0,   470,   471,   472,   473,     0,
     474,     0,   475,   476,   477,   478,   479,     0,   480,   481,
      42,     0,     0,   482,   483,   484,   485,     0,     0,     0,
     486,     0,     0,     0,   487,     0,   488,   489,   490,   491,
       0,   492,   493,   494,   495,   496,     0,     0,     0,     0,
       0,   497,   498,   499,     0,   500,     0,     0,   501,     0,
       0,   502,     0,   503,     0,   504,   505,   506,   507,   508,
     509,     0,     0,   510,   511,     0,     0,   512,   513,   514,
     515,   516,   517,     0,     0,   518,   519,   520,   521,     0,
     522,   523,     0,    49,   524,   525,   526,   527,     0,     0,
     528,   529,     0,   530,   531,   532,   533,     0,     0,     0,
       0,     0,   534,   535,     0,     0,     0,   536,   537,   538,
       0,     0,   539,   540,     0,   541,   542,     0,   543,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,     0,     0,     0,     0,     0,   550,    54,   551,     0,
       0,   552,     0,     0,     0,   553,     0,   554,   555,   556,
     557,     0,     0,     0,    55,     0,     0,   558,   559,   560,
       0,   561,   562,   563,   564,     0,     0,   565,     0,     0,
     566,   567,   568,   569,   570,     0,   571,     0,     0,     0,
       0,     0,     0,     0,     0,   572,   573,   574,     0,   575,
     576,   577,     0,   578,     0,     0,   579,     0,   580,     0,
       0,     0,     0,     0,     0,   581,   582,     0,     0,   583,
       0,   584,     0,   585,   586,     0,     0,     0,   587,   588,
     589,   590,   591,   592,   593,   594,     0,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,     0,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
       0,   627,   628,   629,   630,   631,   632,   633,   198,   199,
       0,   200,   201,   202,   203,   204,     0,     0,   205,     0,
       0,  1002,  3926,   206,     0,     0,   207,     0,   208,   209,
     210,   211,   212,   213,     0,   214,     0,     0,     0,   215,
       0,     0,     0,   216,     0,     0,   217,   218,   219,     0,
     220,     0,   221,   222,     0,     0,   223,     0,     0,   224,
     225,     0,   226,   227,   228,     0,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,     0,   251,   252,   253,   254,   255,     0,     0,
       0,   256,     0,     0,     0,     0,   257,     0,     0,   258,
       0,     0,     0,   259,   260,   261,     0,     0,   262,     0,
       0,     0,     0,   263,   264,     0,     0,     0,     0,   265,
     266,     0,   267,     0,     0,     0,     0,     0,   268,   269,
     270,   271,   272,     0,     0,     0,   273,     0,     0,   274,
     275,   276,     0,     0,     0,   277,     0,   278,   279,     0,
     280,   281,   282,     0,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,     0,     0,   291,   292,   293,   294,
     295,     0,     0,   296,   297,     0,   298,   299,   300,   301,
     302,     0,     0,   303,   304,     0,     0,     0,   305,   306,
       0,   307,     0,     0,     0,   308,     0,   309,   310,   311,
     312,     0,   313,     0,   314,     0,     0,     0,   315,   316,
       0,   317,     0,     0,   318,   319,     0,     0,     0,   320,
     321,   322,   323,     0,     0,   324,   325,   326,     0,     0,
     327,     0,     0,     0,     0,   328,   329,   330,     0,     0,
       0,   331,     0,     0,     0,   332,   333,     0,   334,   335,
       0,     0,     0,   336,     0,   337,     0,     0,   338,   339,
       0,     0,   340,     0,     0,   341,   342,     0,     0,     0,
       0,     0,   343,   344,     0,   345,     0,   346,     0,   347,
     348,     0,     0,     0,     0,     0,     0,     0,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,   370,     0,   371,   372,   373,   374,     0,   375,   376,
       0,     0,     0,     0,   377,   378,   379,   380,   381,   382,
       0,     0,   383,   384,     0,   385,     0,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,     0,     0,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
       0,     0,   403,   404,     0,     0,     0,   405,     0,   406,
     407,     0,   408,   409,   410,     0,     0,   411,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   412,   413,   414,
       0,   415,     0,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,     0,   427,     0,   428,   429,
     430,     0,   431,     0,   432,   433,   434,   435,   436,     0,
     437,   438,   439,     0,     0,   440,     0,     0,     0,   441,
     442,     0,   443,   444,     0,     0,   445,   446,   447,   448,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,     0,   463,
       0,   464,   465,     0,   466,   467,   468,     0,   469,     0,
       0,   470,   471,   472,   473,     0,   474,     0,   475,   476,
     477,   478,   479,     0,   480,   481,     0,     0,     0,   482,
     483,   484,   485,     0,     0,     0,   486,     0,     0,     0,
     487,     0,   488,   489,   490,   491,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,   499,
       0,   500,     0,     0,   501,     0,     0,   502,     0,   503,
       0,   504,   505,   506,   507,   508,   509,     0,     0,   510,
     511,     0,     0,   512,   513,   514,   515,   516,   517,     0,
       0,   518,   519,   520,   521,     0,   522,   523,     0,     0,
     524,   525,   526,   527,     0,     0,   528,   529,     0,   530,
     531,   532,   533,     0,     0,     0,     0,     0,   534,   535,
       0,     0,     0,   536,   537,   538,     0,     0,   539,   540,
       0,   541,   542,     0,   543,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,     0,     0,     0,
       0,     0,   550,     0,   551,     0,     0,   552,     0,     0,
       0,   553,     0,   554,   555,   556,   557,     0,     0,     0,
       0,     0,     0,   558,   559,   560,     0,   561,   562,   563,
     564,     0,     0,   565,     0,     0,   566,   567,   568,   569,
     570,     0,   571,     0,     0,     0,     0,     0,     0,     0,
       0,   572,   573,   574,     0,   575,   576,   577,     0,   578,
       0,     0,   579,     0,   580,     0,     0,     0,     0,     0,
       0,   581,   582,     0,     0,   583,     0,   584,     0,   585,
     586,     0,     0,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,     0,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,     0,   627,   628,   629,
     630,   631,   632,   633,   198,   199,     0,   200,   201,   202,
     203,   204,     0,     0,   205,     0,     0,     0,  4166,   206,
       0,     0,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,     0,     0,   215,     0,     0,     0,   216,
       0,     0,   217,   218,   219,     0,   220,     0,   221,   222,
       0,     0,   223,     0,     0,   224,   225,     0,   226,   227,
     228,     0,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,     0,   251,
     252,   253,   254,   255,     0,     0,     0,   256,     0,     0,
       0,     0,   257,     0,     0,   258,     0,     0,     0,   259,
     260,   261,     0,     0,   262,     0,     0,     0,     0,   263,
     264,     0,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,     0,     0,   268,   269,   270,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,   276,     0,     0,
       0,   277,     0,   278,   279,     0,   280,   281,   282,     0,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
       0,     0,   291,   292,   293,   294,   295,     0,     0,   296,
     297,     0,   298,   299,   300,   301,   302,     0,     0,   303,
     304,     0,     0,     0,   305,   306,     0,   307,     0,     0,
       0,   308,     0,   309,   310,   311,   312,     0,   313,     0,
     314,     0,     0,     0,   315,   316,     0,   317,     0,     0,
     318,   319,     0,     0,     0,   320,   321,   322,   323,     0,
       0,   324,   325,   326,     0,     0,   327,     0,     0,     0,
       0,   328,   329,   330,     0,     0,     0,   331,     0,     0,
       0,   332,   333,     0,   334,   335,     0,     0,     0,   336,
       0,   337,     0,     0,   338,   339,     0,     0,   340,     0,
       0,   341,   342,     0,     0,     0,     0,     0,   343,   344,
       0,   345,     0,   346,     0,   347,   348,     0,     0,     0,
       0,     0,     0,     0,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,   370,     0,   371,
     372,   373,   374,     0,   375,   376,     0,     0,     0,     0,
     377,   378,   379,   380,   381,   382,     0,     0,   383,   384,
       0,   385,     0,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,     0,     0,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,     0,     0,   403,   404,
       0,     0,     0,   405,     0,   406,   407,     0,   408,   409,
     410,     0,     0,   411,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   412,   413,   414,     0,   415,     0,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,     0,   427,     0,   428,   429,   430,     0,   431,     0,
     432,   433,   434,   435,   436,     0,   437,   438,   439,     0,
       0,   440,     0,     0,     0,   441,   442,     0,   443,   444,
       0,     0,   445,   446,   447,   448,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,     0,   463,     0,   464,   465,     0,
     466,   467,   468,     0,   469,     0,     0,   470,   471,   472,
     473,     0,   474,     0,   475,   476,   477,   478,   479,     0,
     480,   481,     0,     0,     0,   482,   483,   484,   485,     0,
       0,     0,   486,     0,     0,     0,   487,     0,   488,   489,
     490,   491,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,   499,     0,   500,     0,     0,
     501,     0,     0,   502,     0,   503,     0,   504,   505,   506,
     507,   508,   509,     0,     0,   510,   511,     0,     0,   512,
     513,   514,   515,   516,   517,     0,     0,   518,   519,   520,
     521,     0,   522,   523,     0,     0,   524,   525,   526,   527,
       0,     0,   528,   529,     0,   530,   531,   532,   533,     0,
       0,     0,     0,     0,   534,   535,     0,     0,     0,   536,
     537,   538,     0,     0,   539,   540,     0,   541,   542,     0,
     543,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,     0,     0,     0,     0,     0,   550,     0,
     551,     0,     0,   552,     0,     0,     0,   553,     0,   554,
     555,   556,   557,     0,     0,     0,     0,     0,     0,   558,
     559,   560,     0,   561,   562,   563,   564,     0,     0,   565,
       0,     0,   566,   567,   568,   569,   570,     0,   571,     0,
       0,     0,     0,     0,     0,     0,     0,   572,   573,   574,
       0,   575,   576,   577,     0,   578,     0,     0,   579,     0,
     580,     0,     0,     0,     0,     0,     0,   581,   582,     0,
       0,   583,     0,   584,     0,   585,   586,     0,     0,     0,
     587,   588,   589,   590,   591,   592,   593,   594,     0,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,     0,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,     0,   627,   628,   629,   630,   631,   632,   633,
     198,   199,     0,   200,   201,   202,   203,   204,     0,     0,
     205,     0,     0,     0,  4170,   206,     0,     0,   207,     0,
     208,   209,   210,   211,   212,   213,     0,   214,     0,     0,
       0,   215,     0,     0,     0,   216,     0,     0,   217,   218,
     219,     0,   220,     0,   221,   222,     0,     0,   223,     0,
       0,   224,   225,     0,   226,   227,   228,     0,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,  2328,   251,   252,   253,   254,   255,
       0,     0,     0,   256,     0,     0,     0,     0,   257,     0,
       0,   258,     0,     0,     0,   259,   260,   261,     0,     0,
     262,     0,     0,     0,     0,   263,   264,     0,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,     0,     0,
     268,   269,   270,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,   276,     0,     0,     0,   277,     0,   278,
     279,     0,   280,   281,   282,     0,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,     0,     0,   291,   292,
     293,   294,   295,     0,     0,   296,   297,     0,   298,   299,
     300,   301,   302,     0,     0,   303,   304,     0,     0,     0,
     305,   306,     0,   307,  2329,     0,     0,   308,     0,   309,
     310,   311,   312,     0,   313,     0,   314,     0,     0,     0,
     315,   316,     0,   317,     0,     0,   318,   319,     0,     0,
       0,   320,   321,   322,   323,     0,     0,   324,   325,   326,
    1698,     0,   327,     0,     0,     0,     0,   328,   329,   330,
       0,     0,     0,   331,     0,     0,     0,   332,   333,     0,
     334,   335,     0,     0,     0,   336,     0,   337,  1699,     0,
     338,   339,     0,     0,   340,     0,     0,   341,   342,     0,
    3767,     0,     0,     0,   343,   344,     0,   345,     0,   346,
       0,   347,   348,     0,     0,     0,     0,     0,     0,     0,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,   370,     0,   371,   372,   373,   374,     0,
     375,   376,     0,     0,     0,     0,   377,   378,   379,   380,
     381,   382,     0,     0,   383,   384,     0,   385,     0,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,     0,     0,   398,   399,   400,   401,
     402,     0,     0,     0,   403,   404,     0,     0,     0,   405,
       0,   406,   407,     0,   408,   409,   410,     0,     0,   411,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   412,
     413,   414,     0,   415,     0,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,     0,   427,     0,
     428,   429,   430,     0,   431,     0,   432,   433,   434,   435,
     436,     0,   437,   438,   439,     0,     0,   440,     0,     0,
       0,   441,   442,     0,   443,   444,     0,     0,   445,   446,
     447,   448,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
       0,   463,     0,   464,   465,     0,   466,   467,   468,     0,
     469,     0,     0,   470,   471,   472,   473,     0,   474,     0,
     475,   476,   477,   478,   479,     0,   480,   481,    42,     0,
       0,   482,   483,   484,   485,     0,     0,     0,   486,     0,
       0,     0,   487,     0,   488,   489,   490,   491,     0,   492,
     493,   494,   495,   496,  2331,     0,     0,     0,     0,   497,
     498,   499,     0,   500,     0,     0,   501,     0,     0,   502,
       0,   503,     0,   504,   505,   506,   507,   508,   509,     0,
       0,   510,   511,     0,     0,   512,   513,   514,   515,   516,
     517,     0,     0,   518,   519,   520,   521,     0,   522,   523,
       0,    49,   524,   525,   526,   527,     0,     0,   528,   529,
       0,   530,   531,   532,   533,     0,     0,     0,     0,     0,
     534,   535,     0,     0,     0,   536,   537,   538,     0,     0,
     539,   540,     0,   541,   542,     0,   543,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,     0,
       0,     0,     0,     0,   550,    54,   551,     0,     0,   552,
       0,     0,     0,   553,     0,   554,   555,   556,   557,     0,
       0,     0,    55,     0,     0,   558,   559,   560,     0,   561,
     562,   563,   564,     0,     0,   565,     0,     0,   566,   567,
     568,   569,   570,     0,   571,     0,     0,     0,     0,     0,
       0,     0,     0,   572,   573,   574,     0,   575,   576,   577,
       0,   578,     0,     0,   579,     0,   580,     0,     0,     0,
       0,     0,     0,   581,   582,     0,     0,   583,     0,   584,
       0,   585,   586,     0,     0,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,     0,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,     0,   627,
     628,   629,   630,   631,   632,   633,   198,   199,     0,   200,
     201,   202,   203,   204,     0,     0,   205,     0,     0,  1002,
       0,   206,     0,     0,   207,     0,   208,   209,   210,   211,
     212,   213,     0,   214,     0,     0,     0,   215,     0,     0,
       0,   216,     0,     0,   217,   218,   219,     0,   220,     0,
     221,   222,     0,     0,   223,     0,     0,   224,   225,     0,
     226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
       0,   251,   252,   253,   254,   255,     0,     0,     0,   256,
       0,     0,     0,     0,   257,     0,     0,   258,     0,     0,
       0,   259,   260,   261,     0,     0,   262,     0,     0,     0,
       0,   263,   264,     0,     0,     0,     0,   265,   266,     0,
     267,     0,     0,     0,     0,     0,   268,   269,   270,   271,
     272,     0,     0,     0,   273,     0,     0,   274,   275,   276,
       0,     0,     0,   277,     0,   278,   279,     0,   280,   281,
     282,     0,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,     0,     0,   291,   292,   293,   294,   295,     0,
       0,   296,   297,     0,   298,   299,   300,   301,   302,     0,
       0,   303,   304,     0,     0,     0,   305,   306,     0,   307,
       0,     0,     0,   308,     0,   309,   310,   311,   312,     0,
     313,     0,   314,     0,     0,     0,   315,   316,     0,   317,
       0,     0,   318,   319,     0,     0,     0,   320,   321,   322,
     323,     0,     0,   324,   325,   326,     0,     0,   327,     0,
       0,     0,     0,   328,   329,   330,     0,     0,     0,   331,
       0,     0,     0,   332,   333,     0,   334,   335,     0,     0,
       0,   336,     0,   337,     0,     0,   338,   339,     0,     0,
     340,     0,     0,   341,   342,     0,     0,     0,     0,     0,
     343,   344,     0,   345,     0,   346,     0,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,   370,
       0,   371,   372,   373,   374,     0,   375,   376,     0,     0,
       0,     0,   377,   378,   379,   380,   381,   382,     0,     0,
     383,   384,     0,   385,     0,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,     0,     0,   396,   397,
       0,     0,   398,   399,   400,   401,   402,     0,     0,     0,
     403,   404,     0,     0,     0,   405,     0,   406,   407,     0,
     408,   409,   410,     0,     0,   411,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   412,   413,   414,     0,   415,
       0,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,     0,   427,     0,   428,   429,   430,     0,
     431,     0,   432,   433,   434,   435,   436,     0,   437,   438,
     439,     0,     0,   440,     0,     0,     0,   441,   442,     0,
     443,   444,     0,     0,   445,   446,   447,   448,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,     0,   463,     0,   464,
     465,     0,   466,   467,   468,     0,   469,     0,     0,   470,
     471,   472,   473,     0,   474,     0,   475,   476,   477,   478,
     479,     0,   480,   481,     0,     0,     0,   482,   483,   484,
     485,     0,     0,     0,   486,     0,     0,     0,   487,     0,
     488,   489,   490,   491,     0,   492,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,   499,     0,   500,
       0,     0,   501,     0,     0,   502,     0,   503,     0,   504,
     505,   506,   507,   508,   509,     0,     0,   510,   511,     0,
       0,   512,   513,   514,   515,   516,   517,     0,     0,   518,
     519,   520,   521,     0,   522,   523,     0,     0,   524,   525,
     526,   527,     0,     0,   528,   529,     0,   530,   531,   532,
     533,     0,     0,     0,     0,     0,   534,   535,     0,     0,
       0,   536,   537,   538,     0,     0,   539,   540,     0,   541,
     542,     0,   543,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,     0,     0,     0,     0,     0,
     550,     0,   551,     0,     0,   552,     0,     0,     0,   553,
       0,   554,   555,   556,   557,     0,     0,     0,     0,     0,
       0,   558,   559,   560,     0,   561,   562,   563,   564,     0,
       0,   565,     0,     0,   566,   567,   568,   569,   570,     0,
     571,     0,     0,     0,     0,     0,     0,     0,     0,   572,
     573,   574,     0,   575,   576,   577,     0,   578,     0,     0,
     579,     0,   580,     0,     0,     0,     0,     0,     0,   581,
     582,     0,     0,   583,     0,   584,     0,   585,   586,     0,
       0,  2760,   587,   588,   589,   590,   591,   592,   593,   594,
       0,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,  2761,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,     0,   627,   628,   629,   630,   631,
     632,   633,   198,   199,     0,   200,   201,   202,   203,   204,
       0,     0,   205,     0,     0,  2762,     0,   206,     0,     0,
     207,     0,   208,   209,   210,   211,   212,   213,     0,   214,
       0,     0,     0,   215,     0,     0,     0,   216,     0,     0,
     217,   218,   219,     0,   220,     0,   221,   222,     0,     0,
     223,     0,     0,   224,   225,     0,   226,   227,   228,     0,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   250,     0,   251,   252,   253,
     254,   255,     0,     0,     0,   256,     0,     0,     0,     0,
     257,     0,     0,   258,     0,     0,     0,   259,   260,   261,
       0,     0,   262,     0,     0,     0,     0,   263,   264,     0,
       0,     0,     0,   265,   266,     0,   267,     0,     0,     0,
       0,     0,   268,   269,   270,   271,   272,     0,     0,     0,
     273,     0,     0,   274,   275,   276,     0,     0,     0,   277,
       0,   278,   279,     0,   280,   281,   282,     0,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,     0,     0,
     291,   292,   293,   294,   295,     0,     0,   296,   297,     0,
     298,   299,   300,   301,   302,     0,     0,   303,   304,     0,
       0,     0,   305,   306,     0,   307,     0,     0,     0,   308,
       0,   309,   310,   311,   312,     0,   313,     0,   314,     0,
       0,     0,   315,   316,     0,   317,     0,     0,   318,   319,
       0,     0,     0,   320,   321,   322,   323,     0,     0,   324,
     325,   326,     0,     0,   327,     0,     0,     0,     0,   328,
     329,   330,     0,     0,     0,   331,     0,     0,     0,   332,
     333,     0,   334,   335,     0,     0,     0,   336,     0,   337,
       0,     0,   338,   339,     0,     0,   340,     0,     0,   341,
     342,     0,     0,     0,     0,     0,   343,   344,     0,   345,
       0,   346,     0,   347,   348,     0,     0,     0,     0,     0,
       0,     0,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,   370,     0,   371,   372,   373,
     374,     0,   375,   376,     0,     0,     0,     0,   377,   378,
     379,   380,   381,   382,     0,     0,   383,   384,     0,   385,
       0,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,     0,     0,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,     0,     0,   403,   404,     0,     0,
       0,   405,     0,   406,   407,     0,   408,   409,   410,     0,
       0,   411,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   412,   413,   414,     0,   415,     0,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,     0,
     427,     0,   428,   429,   430,     0,   431,     0,   432,   433,
     434,   435,   436,     0,   437,   438,   439,     0,     0,   440,
       0,     0,     0,   441,   442,     0,   443,   444,     0,     0,
     445,   446,   447,   448,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,     0,   463,     0,   464,   465,     0,   466,   467,
     468,     0,   469,     0,     0,   470,   471,   472,   473,     0,
     474,     0,   475,   476,   477,   478,   479,     0,   480,   481,
       0,     0,     0,   482,   483,   484,   485,     0,     0,     0,
     486,     0,     0,     0,   487,     0,   488,   489,   490,   491,
       0,   492,   493,   494,   495,   496,     0,     0,     0,     0,
       0,   497,   498,   499,     0,   500,     0,     0,   501,     0,
       0,   502,     0,   503,     0,   504,   505,   506,   507,   508,
     509,     0,     0,   510,   511,     0,     0,   512,   513,   514,
     515,   516,   517,     0,     0,   518,   519,   520,   521,     0,
     522,   523,     0,     0,   524,   525,   526,   527,     0,     0,
     528,   529,     0,   530,   531,   532,   533,     0,     0,     0,
       0,     0,   534,   535,     0,     0,     0,   536,   537,   538,
       0,     0,   539,   540,     0,   541,   542,     0,   543,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,     0,     0,     0,     0,     0,   550,     0,   551,     0,
       0,   552,     0,     0,     0,   553,     0,   554,   555,   556,
     557,     0,     0,     0,     0,     0,     0,   558,   559,   560,
       0,   561,   562,   563,   564,     0,     0,   565,     0,     0,
     566,   567,   568,   569,   570,     0,   571,     0,     0,     0,
       0,     0,     0,     0,     0,   572,   573,   574,     0,   575,
     576,   577,     0,   578,     0,     0,   579,     0,   580,     0,
       0,     0,     0,     0,     0,   581,   582,     0,     0,   583,
       0,   584,     0,   585,   586,     0,     0,     0,   587,   588,
     589,   590,   591,   592,   593,   594,     0,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,     0,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
       0,   627,   628,   629,   630,   631,   632,   633,   198,   199,
       0,   200,   201,   202,   203,   204,     0,     0,   205,     0,
       0,  1151,     0,   206,     0,     0,   207,     0,   208,   209,
     210,   211,   212,   213,     0,   214,     0,     0,     0,   215,
       0,     0,     0,   216,     0,     0,   217,   218,   219,     0,
     220,     0,   221,   222,     0,     0,   223,     0,     0,   224,
     225,     0,   226,   227,   228,     0,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,     0,   251,   252,   253,   254,   255,     0,     0,
       0,   256,     0,     0,     0,     0,   257,     0,     0,   258,
       0,     0,     0,   259,   260,   261,     0,     0,   262,     0,
       0,     0,     0,   263,   264,     0,     0,     0,     0,   265,
     266,     0,   267,     0,     0,     0,     0,     0,   268,   269,
     270,   271,   272,     0,     0,     0,   273,     0,     0,   274,
     275,   276,     0,     0,     0,   277,     0,   278,   279,     0,
     280,   281,   282,     0,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,     0,     0,   291,   292,   293,   294,
     295,     0,     0,   296,   297,     0,   298,   299,   300,   301,
     302,     0,     0,   303,   304,     0,     0,     0,   305,   306,
       0,   307,     0,     0,     0,   308,     0,   309,   310,   311,
     312,     0,   313,     0,   314,     0,     0,     0,   315,   316,
       0,   317,     0,     0,   318,   319,     0,     0,     0,   320,
     321,   322,   323,     0,     0,   324,   325,   326,     0,     0,
     327,     0,     0,     0,     0,   328,   329,   330,     0,     0,
       0,   331,     0,     0,     0,   332,   333,     0,   334,   335,
       0,     0,     0,   336,     0,   337,     0,     0,   338,   339,
       0,     0,   340,     0,     0,   341,   342,     0,     0,     0,
       0,     0,   343,   344,     0,   345,     0,   346,     0,   347,
     348,     0,     0,     0,     0,     0,     0,     0,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,   370,     0,   371,   372,   373,   374,     0,   375,   376,
       0,     0,     0,     0,   377,   378,   379,   380,   381,   382,
       0,     0,   383,   384,     0,   385,     0,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,     0,     0,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
       0,     0,   403,   404,     0,     0,     0,   405,     0,   406,
     407,     0,   408,   409,   410,     0,     0,   411,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   412,   413,   414,
       0,   415,     0,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,     0,   427,     0,   428,   429,
     430,     0,   431,     0,   432,   433,   434,   435,   436,     0,
     437,   438,   439,     0,     0,   440,     0,     0,     0,   441,
     442,     0,   443,   444,     0,     0,   445,   446,   447,   448,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,     0,   463,
       0,   464,   465,     0,   466,   467,   468,     0,   469,     0,
       0,   470,   471,   472,   473,     0,   474,     0,   475,   476,
     477,   478,   479,     0,   480,   481,     0,     0,     0,   482,
     483,   484,   485,     0,     0,     0,   486,     0,     0,     0,
     487,     0,   488,   489,   490,   491,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,   499,
       0,   500,     0,     0,   501,     0,     0,   502,     0,   503,
       0,   504,   505,   506,   507,   508,   509,     0,     0,   510,
     511,     0,     0,   512,   513,   514,   515,   516,   517,     0,
       0,   518,   519,   520,   521,     0,   522,   523,     0,     0,
     524,   525,   526,   527,     0,     0,   528,   529,     0,   530,
     531,   532,   533,     0,     0,     0,     0,     0,   534,   535,
       0,     0,     0,   536,   537,   538,     0,     0,   539,   540,
       0,   541,   542,     0,   543,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,     0,     0,     0,
       0,     0,   550,     0,   551,     0,     0,   552,     0,     0,
       0,   553,     0,   554,   555,   556,   557,     0,     0,     0,
       0,     0,     0,   558,   559,   560,     0,   561,   562,   563,
     564,     0,     0,   565,     0,     0,   566,   567,   568,   569,
     570,     0,   571,     0,     0,     0,     0,     0,     0,     0,
       0,   572,   573,   574,     0,   575,   576,   577,     0,   578,
       0,     0,   579,     0,   580,     0,     0,     0,     0,     0,
       0,   581,   582,     0,     0,   583,     0,   584,     0,   585,
     586,     0,     0,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,     0,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,     0,   627,   628,   629,
     630,   631,   632,   633,   198,   199,     0,   200,   201,   202,
     203,   204,     0,     0,   205,     0,     0,  3010,     0,   206,
       0,     0,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,     0,     0,   215,     0,     0,     0,   216,
       0,     0,   217,   218,   219,     0,   220,     0,   221,   222,
       0,     0,   223,     0,     0,   224,   225,     0,   226,   227,
     228,     0,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,     0,   251,
     252,   253,   254,   255,     0,     0,     0,   256,     0,     0,
       0,     0,   257,     0,     0,   258,     0,     0,     0,   259,
     260,   261,     0,     0,   262,     0,     0,     0,     0,   263,
     264,     0,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,     0,     0,   268,   269,   270,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,   276,     0,     0,
       0,   277,     0,   278,   279,     0,   280,   281,   282,     0,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
       0,     0,   291,   292,   293,   294,   295,     0,     0,   296,
     297,     0,   298,   299,   300,   301,   302,     0,     0,   303,
     304,     0,     0,     0,   305,   306,     0,   307,     0,     0,
       0,   308,     0,   309,   310,   311,   312,     0,   313,     0,
     314,     0,     0,     0,   315,   316,     0,   317,     0,     0,
     318,   319,     0,     0,     0,   320,   321,   322,   323,     0,
       0,   324,   325,   326,     0,     0,   327,     0,     0,     0,
       0,   328,   329,   330,     0,     0,     0,   331,     0,     0,
       0,   332,   333,     0,   334,   335,     0,     0,     0,   336,
       0,   337,     0,     0,   338,   339,     0,     0,   340,     0,
       0,   341,   342,     0,     0,     0,     0,     0,   343,   344,
       0,   345,     0,   346,     0,   347,   348,     0,     0,     0,
       0,     0,     0,     0,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,   370,     0,   371,
     372,   373,   374,     0,   375,   376,     0,     0,     0,     0,
     377,   378,   379,   380,   381,   382,     0,     0,   383,   384,
       0,   385,     0,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,     0,     0,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,     0,     0,   403,   404,
       0,     0,     0,   405,     0,   406,   407,     0,   408,   409,
     410,     0,     0,   411,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   412,   413,   414,     0,   415,     0,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,     0,   427,     0,   428,   429,   430,     0,   431,     0,
     432,   433,   434,   435,   436,     0,   437,   438,   439,     0,
       0,   440,     0,     0,     0,   441,   442,     0,   443,   444,
       0,     0,   445,   446,   447,   448,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,     0,   463,     0,   464,   465,     0,
     466,   467,   468,     0,   469,     0,     0,   470,   471,   472,
     473,     0,   474,     0,   475,   476,   477,   478,   479,     0,
     480,   481,     0,     0,     0,   482,   483,   484,   485,     0,
       0,     0,   486,     0,     0,     0,   487,     0,   488,   489,
     490,   491,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,   499,     0,   500,     0,     0,
     501,     0,     0,   502,     0,   503,     0,   504,   505,   506,
     507,   508,   509,     0,     0,   510,   511,     0,     0,   512,
     513,   514,   515,   516,   517,     0,     0,   518,   519,   520,
     521,     0,   522,   523,     0,     0,   524,   525,   526,   527,
       0,     0,   528,   529,     0,   530,   531,   532,   533,     0,
       0,     0,     0,     0,   534,   535,     0,     0,     0,   536,
     537,   538,     0,     0,   539,   540,     0,   541,   542,     0,
     543,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,     0,     0,     0,     0,     0,   550,     0,
     551,     0,     0,   552,     0,     0,     0,   553,     0,   554,
     555,   556,   557,     0,     0,     0,     0,     0,     0,   558,
     559,   560,     0,   561,   562,   563,   564,     0,     0,   565,
       0,     0,   566,   567,   568,   569,   570,     0,   571,     0,
       0,     0,     0,     0,     0,     0,     0,   572,   573,   574,
       0,   575,   576,   577,     0,   578,     0,     0,   579,     0,
     580,     0,     0,     0,     0,     0,     0,   581,   582,     0,
       0,   583,     0,   584,     0,   585,   586,     0,     0,     0,
     587,   588,   589,   590,   591,   592,   593,   594,     0,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,     0,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,     0,   627,   628,   629,   630,   631,   632,   633,
     198,   199,     0,   200,   201,   202,   203,   204,     0,     0,
     205,     0,     0,  3318,     0,   206,     0,     0,   207,     0,
     208,   209,   210,   211,   212,   213,     0,   214,     0,     0,
       0,   215,     0,     0,     0,   216,     0,     0,   217,   218,
     219,     0,   220,     0,   221,   222,     0,     0,   223,     0,
       0,   224,   225,     0,   226,   227,   228,     0,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,     0,   251,   252,   253,   254,   255,
       0,     0,     0,   256,     0,     0,     0,     0,   257,     0,
       0,   258,     0,     0,     0,   259,   260,   261,     0,     0,
     262,     0,     0,     0,     0,   263,   264,     0,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,     0,     0,
     268,   269,   270,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,   276,     0,     0,     0,   277,     0,   278,
     279,     0,   280,   281,   282,     0,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,     0,     0,   291,   292,
     293,   294,   295,     0,     0,   296,   297,     0,   298,   299,
     300,   301,   302,     0,     0,   303,   304,     0,     0,     0,
     305,   306,     0,   307,     0,     0,     0,   308,     0,   309,
     310,   311,   312,     0,   313,     0,   314,     0,     0,     0,
     315,   316,     0,   317,     0,     0,   318,   319,     0,     0,
       0,   320,   321,   322,   323,     0,     0,   324,   325,   326,
       0,     0,   327,     0,     0,     0,     0,   328,   329,   330,
       0,     0,     0,   331,     0,     0,     0,   332,   333,     0,
     334,   335,     0,     0,     0,   336,     0,   337,     0,     0,
     338,   339,     0,     0,   340,     0,     0,   341,   342,     0,
       0,     0,     0,     0,   343,   344,     0,   345,     0,   346,
       0,   347,   348,     0,     0,     0,     0,     0,     0,     0,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,   370,     0,   371,   372,   373,   374,     0,
     375,   376,     0,     0,     0,     0,   377,   378,   379,   380,
     381,   382,     0,     0,   383,   384,     0,   385,     0,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,     0,     0,   398,   399,   400,   401,
     402,     0,     0,     0,   403,   404,     0,     0,     0,   405,
       0,   406,   407,     0,   408,   409,   410,     0,     0,   411,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   412,
     413,   414,     0,   415,     0,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,     0,   427,     0,
     428,   429,   430,     0,   431,     0,   432,   433,   434,   435,
     436,     0,   437,   438,   439,     0,     0,   440,     0,     0,
       0,   441,   442,     0,   443,   444,     0,     0,   445,   446,
     447,   448,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
       0,   463,     0,   464,   465,     0,   466,   467,   468,     0,
     469,     0,     0,   470,   471,   472,   473,     0,   474,     0,
     475,   476,   477,   478,   479,     0,   480,   481,     0,     0,
       0,   482,   483,   484,   485,     0,     0,     0,   486,     0,
       0,     0,   487,     0,   488,   489,   490,   491,     0,   492,
     493,   494,   495,   496,     0,     0,     0,     0,     0,   497,
     498,   499,     0,   500,     0,     0,   501,     0,     0,   502,
       0,   503,     0,   504,   505,   506,   507,   508,   509,     0,
       0,   510,   511,     0,     0,   512,   513,   514,   515,   516,
     517,     0,     0,   518,   519,   520,   521,     0,   522,   523,
       0,     0,   524,   525,   526,   527,     0,     0,   528,   529,
       0,   530,   531,   532,   533,     0,     0,     0,     0,     0,
     534,   535,     0,     0,     0,   536,   537,   538,     0,     0,
     539,   540,     0,   541,   542,     0,   543,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,     0,
       0,     0,     0,     0,   550,     0,   551,     0,     0,   552,
       0,     0,     0,   553,     0,   554,   555,   556,   557,     0,
       0,     0,     0,     0,     0,   558,   559,   560,     0,   561,
     562,   563,   564,     0,     0,   565,     0,     0,   566,   567,
     568,   569,   570,     0,   571,     0,     0,     0,     0,     0,
       0,     0,     0,   572,   573,   574,     0,   575,   576,   577,
       0,   578,     0,     0,   579,     0,   580,     0,     0,     0,
       0,     0,     0,   581,   582,     0,     0,   583,     0,   584,
       0,   585,   586,     0,     0,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,     0,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,     0,   627,
     628,   629,   630,   631,   632,   633,   198,   199,     0,   200,
     201,   202,   203,   204,     0,     0,   205,     0,     0,  4051,
       0,   206,     0,     0,   207,     0,   208,   209,   210,   211,
     212,   213,     0,   214,     0,     0,     0,   215,     0,     0,
       0,   216,     0,     0,   217,   218,   219,     0,   220,     0,
     221,   222,     0,     0,   223,     0,     0,   224,   225,     0,
     226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
       0,   251,   252,   253,   254,   255,     0,     0,     0,   256,
       0,     0,     0,     0,   257,     0,     0,   258,     0,     0,
       0,   259,   260,   261,     0,     0,   262,     0,     0,     0,
       0,   263,   264,     0,     0,     0,     0,   265,   266,     0,
     267,     0,     0,     0,     0,     0,   268,   269,   270,   271,
     272,     0,     0,     0,   273,     0,     0,   274,   275,   276,
       0,     0,     0,   277,     0,   278,   279,     0,   280,   281,
     282,     0,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,     0,     0,   291,   292,   293,   294,   295,     0,
       0,   296,   297,     0,   298,   299,   300,   301,   302,     0,
       0,   303,   304,     0,     0,     0,   305,   306,     0,   307,
       0,     0,     0,   308,     0,   309,   310,   311,   312,     0,
     313,     0,   314,     0,     0,     0,   315,   316,     0,   317,
       0,     0,   318,   319,     0,     0,     0,   320,   321,   322,
     323,     0,     0,   324,   325,   326,     0,     0,   327,     0,
       0,     0,     0,   328,   329,   330,     0,     0,     0,   331,
       0,     0,     0,   332,   333,     0,   334,   335,     0,     0,
       0,   336,     0,   337,     0,     0,   338,   339,     0,     0,
     340,     0,     0,   341,   342,     0,     0,     0,     0,     0,
     343,   344,     0,   345,     0,   346,     0,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,   370,
       0,   371,   372,   373,   374,     0,   375,   376,     0,     0,
       0,     0,   377,   378,   379,   380,   381,   382,     0,     0,
     383,   384,     0,   385,     0,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,     0,     0,   396,   397,
       0,     0,   398,   399,   400,   401,   402,     0,     0,     0,
     403,   404,     0,     0,     0,   405,     0,   406,   407,     0,
     408,   409,   410,     0,     0,   411,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   412,   413,   414,     0,   415,
       0,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,     0,   427,     0,   428,   429,   430,     0,
     431,     0,   432,   433,   434,   435,   436,     0,   437,   438,
     439,     0,     0,   440,     0,     0,     0,   441,   442,     0,
     443,   444,     0,     0,   445,   446,   447,   448,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,     0,   463,     0,   464,
     465,     0,   466,   467,   468,     0,   469,     0,     0,   470,
     471,   472,   473,     0,   474,     0,   475,   476,   477,   478,
     479,     0,   480,   481,     0,     0,     0,   482,   483,   484,
     485,     0,     0,     0,   486,     0,     0,     0,   487,     0,
     488,   489,   490,   491,     0,   492,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,   499,     0,   500,
       0,     0,   501,     0,     0,   502,     0,   503,     0,   504,
     505,   506,   507,   508,   509,     0,     0,   510,   511,     0,
       0,   512,   513,   514,   515,   516,   517,     0,     0,   518,
     519,   520,   521,     0,   522,   523,     0,     0,   524,   525,
     526,   527,     0,     0,   528,   529,     0,   530,   531,   532,
     533,     0,     0,     0,     0,     0,   534,   535,     0,     0,
       0,   536,   537,   538,     0,     0,   539,   540,     0,   541,
     542,     0,   543,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,     0,     0,     0,     0,     0,
     550,     0,   551,     0,     0,   552,     0,     0,     0,   553,
       0,   554,   555,   556,   557,     0,     0,     0,     0,     0,
       0,   558,   559,   560,     0,   561,   562,   563,   564,     0,
       0,   565,     0,     0,   566,   567,   568,   569,   570,     0,
     571,     0,     0,     0,     0,     0,     0,     0,     0,   572,
     573,   574,     0,   575,   576,   577,     0,   578,     0,     0,
     579,     0,   580,     0,     0,     0,     0,     0,     0,   581,
     582,     0,     0,   583,     0,   584,     0,   585,   586,     0,
       0,     0,   587,   588,   589,   590,   591,   592,   593,   594,
       0,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,     0,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,     0,   627,   628,   629,   630,   631,
     632,   633,     0,     0,     0,     0,     0,   198,   199,  1958,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,     0,   627,   628,   629,   630,
     631,   632,   633,     0,     0,     0,     0,     0,   198,   199,
    2692,   200,   201,   202,   203,   204,     0,     0,   205,     0,
       0,     0,     0,   206,     0,     0,   207,     0,   208,   209,
     210,   211,   212,   213,     0,   214,     0,     0,     0,   215,
       0,     0,     0,   216,     0,     0,   217,   218,   219,     0,
     220,     0,   221,   222,     0,     0,   223,     0,     0,   224,
     225,     0,   226,   227,   228,     0,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,     0,   251,   252,   253,   254,   255,     0,     0,
       0,   256,     0,     0,     0,     0,   257,     0,     0,   258,
       0,     0,     0,   259,   260,   261,     0,     0,   262,     0,
       0,     0,     0,   263,   264,     0,     0,     0,     0,   265,
     266,     0,   267,     0,     0,     0,     0,     0,   268,   269,
     270,   271,   272,     0,     0,     0,   273,     0,     0,   274,
     275,   276,     0,     0,     0,   277,     0,   278,   279,     0,
     280,   281,   282,     0,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,     0,     0,   291,   292,   293,   294,
     295,     0,     0,   296,   297,     0,   298,   299,   300,   301,
     302,     0,     0,   303,   304,     0,     0,     0,   305,   306,
       0,   307,     0,     0,     0,   308,     0,   309,   310,   311,
     312,     0,   313,     0,   314,     0,     0,     0,   315,   316,
       0,   317,     0,     0,   318,   319,     0,     0,     0,   320,
     321,   322,   323,     0,     0,   324,   325,   326,     0,     0,
     327,     0,     0,     0,     0,   328,   329,   330,     0,     0,
       0,   331,     0,     0,     0,   332,   333,     0,   334,   335,
       0,     0,     0,   336,     0,   337,     0,     0,   338,   339,
       0,     0,   340,     0,     0,   341,   342,     0,     0,     0,
       0,     0,   343,   344,     0,   345,     0,   346,     0,   347,
     348,     0,     0,     0,     0,     0,     0,     0,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,   370,     0,   371,   372,   373,   374,     0,   375,   376,
       0,     0,     0,     0,   377,   378,   379,   380,   381,   382,
       0,     0,   383,   384,     0,   385,     0,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,     0,     0,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
       0,     0,   403,   404,     0,     0,     0,   405,     0,   406,
     407,     0,   408,   409,   410,     0,     0,   411,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   412,   413,   414,
       0,   415,     0,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,     0,   427,     0,   428,   429,
     430,     0,   431,     0,   432,   433,   434,   435,   436,     0,
     437,   438,   439,     0,     0,   440,     0,     0,     0,   441,
     442,     0,   443,   444,     0,     0,   445,   446,   447,   448,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,     0,   463,
       0,   464,   465,     0,   466,   467,   468,     0,   469,     0,
       0,   470,   471,   472,   473,     0,   474,     0,   475,   476,
     477,   478,   479,     0,   480,   481,     0,     0,     0,   482,
     483,   484,   485,     0,     0,     0,   486,     0,     0,     0,
     487,     0,   488,   489,   490,   491,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,   499,
       0,   500,     0,     0,   501,     0,     0,   502,     0,   503,
       0,   504,   505,   506,   507,   508,   509,     0,     0,   510,
     511,     0,     0,   512,   513,   514,   515,   516,   517,     0,
       0,   518,   519,   520,   521,     0,   522,   523,     0,     0,
     524,   525,   526,   527,     0,     0,   528,   529,     0,   530,
     531,   532,   533,     0,     0,     0,     0,     0,   534,   535,
       0,     0,     0,   536,   537,   538,     0,     0,   539,   540,
       0,   541,   542,     0,   543,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,     0,     0,     0,
       0,     0,   550,     0,   551,     0,     0,   552,     0,     0,
       0,   553,     0,   554,   555,   556,   557,     0,     0,     0,
       0,     0,     0,   558,   559,   560,     0,   561,   562,   563,
     564,     0,     0,   565,     0,     0,   566,   567,   568,   569,
     570,     0,   571,     0,     0,     0,     0,     0,     0,     0,
       0,   572,   573,   574,     0,   575,   576,   577,     0,   578,
       0,     0,   579,     0,   580,     0,     0,     0,     0,     0,
       0,   581,   582,     0,     0,   583,     0,   584,     0,   585,
     586,     0,     0,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,     0,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,     0,   627,   628,   629,
     630,   631,   632,   633,     0,     0,     0,     0,     0,   198,
     199,  3348,   200,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,     0,     0,
     224,   225,     0,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,   298,   299,   300,
     301,   302,     0,     0,   303,   304,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,   315,
     316,     0,   317,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,     0,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,   330,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,     0,   341,   342,     0,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,     0,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,     0,     0,   403,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   469,
       0,     0,   470,   471,   472,   473,     0,   474,     0,   475,
     476,   477,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,     0,     0,
     510,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,     0,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,   536,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
     578,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,     0,   627,   628,
     629,   630,   631,   632,   633,     0,     0,     0,     0,     0,
     198,   199,  3529,   200,   201,   202,   203,   204,     0,     0,
     205,     0,     0,     0,     0,   206,     0,     0,   207,     0,
     208,   209,   210,   211,   212,   213,     0,   214,     0,     0,
       0,   215,     0,     0,     0,   216,     0,     0,   217,   218,
     219,     0,   220,     0,   221,   222,     0,     0,   223,     0,
       0,   224,   225,     0,   226,   227,   228,     0,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,     0,   251,   252,   253,   254,   255,
       0,     0,     0,   256,     0,     0,     0,     0,   257,     0,
       0,   258,     0,     0,     0,   259,   260,   261,     0,     0,
     262,     0,     0,     0,     0,   263,   264,     0,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,     0,     0,
     268,   269,   270,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,   276,     0,     0,     0,   277,     0,   278,
     279,     0,   280,   281,   282,     0,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,     0,     0,   291,   292,
     293,   294,   295,     0,     0,   296,   297,     0,   298,   299,
     300,   301,   302,     0,     0,   303,   304,     0,     0,     0,
     305,   306,     0,   307,     0,     0,     0,   308,     0,   309,
     310,   311,   312,     0,   313,     0,   314,     0,     0,     0,
     315,   316,     0,   317,     0,     0,   318,   319,     0,     0,
       0,   320,   321,   322,   323,     0,     0,   324,   325,   326,
       0,     0,   327,     0,     0,     0,     0,   328,   329,   330,
       0,     0,     0,   331,     0,     0,     0,   332,   333,     0,
     334,   335,     0,     0,     0,   336,     0,   337,     0,     0,
     338,   339,     0,     0,   340,     0,     0,   341,   342,     0,
       0,     0,     0,     0,   343,   344,     0,   345,     0,   346,
       0,   347,   348,     0,     0,     0,     0,     0,     0,     0,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,   370,     0,   371,   372,   373,   374,     0,
     375,   376,     0,     0,     0,     0,   377,   378,   379,   380,
     381,   382,     0,     0,   383,   384,     0,   385,     0,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,     0,     0,   398,   399,   400,   401,
     402,     0,     0,     0,   403,   404,     0,     0,     0,   405,
       0,   406,   407,     0,   408,   409,   410,     0,     0,   411,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   412,
     413,   414,     0,   415,     0,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,     0,   427,     0,
     428,   429,   430,     0,   431,     0,   432,   433,   434,   435,
     436,     0,   437,   438,   439,     0,     0,   440,     0,     0,
       0,   441,   442,     0,   443,   444,     0,     0,   445,   446,
     447,   448,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
       0,   463,     0,   464,   465,     0,   466,   467,   468,     0,
     469,     0,     0,   470,   471,   472,   473,     0,   474,     0,
     475,   476,   477,   478,   479,     0,   480,   481,     0,     0,
       0,   482,   483,   484,   485,     0,     0,     0,   486,     0,
       0,     0,   487,     0,   488,   489,   490,   491,     0,   492,
     493,   494,   495,   496,     0,     0,     0,     0,     0,   497,
     498,   499,     0,   500,     0,     0,   501,     0,     0,   502,
       0,   503,     0,   504,   505,   506,   507,   508,   509,     0,
       0,   510,   511,     0,     0,   512,   513,   514,   515,   516,
     517,     0,     0,   518,   519,   520,   521,     0,   522,   523,
       0,     0,   524,   525,   526,   527,     0,     0,   528,   529,
       0,   530,   531,   532,   533,     0,     0,     0,     0,     0,
     534,   535,     0,     0,     0,   536,   537,   538,     0,     0,
     539,   540,     0,   541,   542,     0,   543,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,     0,
       0,     0,     0,     0,   550,     0,   551,     0,     0,   552,
       0,     0,     0,   553,     0,   554,   555,   556,   557,     0,
       0,     0,     0,     0,     0,   558,   559,   560,     0,   561,
     562,   563,   564,     0,     0,   565,     0,     0,   566,   567,
     568,   569,   570,     0,   571,     0,     0,     0,     0,     0,
       0,     0,     0,   572,   573,   574,     0,   575,   576,   577,
       0,   578,     0,     0,   579,     0,   580,     0,     0,     0,
       0,     0,     0,   581,   582,     0,     0,   583,     0,   584,
       0,   585,   586,     0,     0,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,     0,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,     0,   627,
     628,   629,   630,   631,   632,   633,     0,     0,     0,     0,
       0,   198,   199,  3902,   200,   201,   202,   203,   204,   847,
     848,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,   849,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,   850,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
     851,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   852,   288,   289,   853,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   854,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,   855,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,   856,     0,   327,     0,     0,     0,   857,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
     858,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,   859,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,     0,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   860,   433,   434,
     435,   861,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,   862,     0,   445,
     446,   447,   448,   449,     0,   863,   451,     0,   452,   453,
     454,     0,     0,   864,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,   865,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,   866,   867,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   868,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,   869,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,   870,   547,   871,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,     0,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,     0,
     627,   628,   629,   630,   631,   632,   633,   198,   199,     0,
     200,   201,   202,   203,   204,   921,   848,   205,     0,     0,
       0,     0,   206,     0,     0,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,   849,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,   850,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,   851,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   852,
     288,   289,   853,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   854,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,   855,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,   856,     0,   327,
       0,     0,     0,   857,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,   858,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,   859,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,     0,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   860,   433,   434,   435,   922,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,   862,     0,   445,   446,   447,   448,   449,
       0,   863,   451,     0,   452,   453,   454,     0,     0,   864,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,   865,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,   866,   867,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     868,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,   195,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,   869,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,   870,   547,   871,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
       0,     0,   595,   596,   597,     0,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,     0,   627,   628,   629,   630,
     631,   632,   633,   198,   199,     0,   200,   201,   202,   203,
     204,     0,   848,   205,     0,     0,     0,     0,   206,     0,
       0,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,     0,     0,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,     0,     0,   224,   225,     0,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,     0,     0,   256,   849,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,     0,   265,   266,     0,   267,   850,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,   851,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   852,   288,   289,   853,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,   854,   299,   300,   301,   302,     0,     0,   303,   304,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,   855,   314,
       0,     0,     0,   315,   316,     0,   317,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,     0,     0,
     324,   325,   326,   856,     0,   327,     0,     0,     0,   857,
     328,   329,   330,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,     0,
     341,   342,   858,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,   859,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,     0,     0,     0,     0,   403,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   427,     0,   428,   429,   430,     0,   431,     0,   860,
     433,   434,   435,     0,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,   862,
       0,   445,   446,   447,   448,   449,     0,   863,   451,     0,
     452,   453,   454,     0,     0,   864,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   469,     0,     0,   470,   471,   472,   473,
       0,   474,     0,   475,   476,   477,   478,   479,     0,   480,
     481,   865,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,   866,   867,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,     0,     0,   510,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   868,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
     195,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,   869,     0,     0,   536,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,   870,   547,   871,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,   578,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,     0,     0,   595,   596,
     597,     0,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,     0,   627,   628,   629,   630,   631,   632,   633,   198,
     199,     0,   200,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,     0,     0,
     224,   225,     0,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,  2914,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,   298,   299,   300,
     301,   302,  2915,     0,   303,   304,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,   315,
     316,     0,   317,  2916,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,     0,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,   330,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,     0,   341,   342,     0,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,  2917,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
    1257,  1258,     0,   403,   404,     0,     0,  2918,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   469,
       0,     0,   470,   471,   472,   473,     0,   474,     0,   475,
     476,   477,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,  5268,   916,  5269,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,     0,     0,
     510,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,     0,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,   536,   537,   538,     0,  2919,   539,
     540,     0,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
     578,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,     0,   627,   628,
     629,   630,   631,   632,   633,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,  1231,  1232,
     206,  1233,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,  1234,     0,     0,
    1235,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,  1236,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,  1237,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,     0,   627,   628,   629,   630,   631,   632,
     633,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,  1384,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,  1385,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,  1386,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
    1016,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,  1387,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,     0,
     627,   628,   629,   630,   631,   632,   633,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,  2328,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,  2329,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,  1698,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,  1699,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,  2331,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,     0,   627,   628,   629,   630,
     631,   632,   633,   198,   199,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,     0,  1409,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,     0,     0,   224,   225,     0,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,  1410,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,   298,   299,   300,   301,   302,     0,     0,   303,   304,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,   315,   316,     0,   317,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,     0,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,   330,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,     0,
     341,   342,  1016,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,     0,     0,   403,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   469,     0,     0,   470,   471,   472,   473,
       0,   474,     0,   475,   476,   477,   478,   479,     0,   480,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,     0,     0,   510,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   518,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
     195,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,   536,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,   578,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,     0,   627,   628,   629,   630,   631,   632,   633,   198,
     199,     0,   200,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,     0,     0,
     224,   225,     0,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,   298,   299,   300,
     301,   302,     0,     0,   303,   304,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,   315,
     316,     0,   317,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,     0,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,   330,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,     0,   341,   342,     0,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,  1555,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,     0,     0,   403,   404,     0,     0,  1556,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,   733,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   469,
       0,     0,   470,   471,   472,   473,     0,   474,     0,   475,
     476,   477,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,     0,     0,
     510,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,     0,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,   536,   537,   538,     0,  1557,   539,
     540,     0,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
     578,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,     0,   627,   628,
     629,   630,   631,   632,   633,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,  1384,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,  3645,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,  1016,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,   195,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,     0,   627,   628,   629,   630,   631,   632,
     633,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
    1015,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
    1016,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,  1017,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,     0,
     627,   628,   629,   630,   631,   632,   633,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,  1015,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,  1016,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,   195,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,     0,   627,   628,   629,   630,
     631,   632,   633,   198,   199,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,     0,     0,   215,  1486,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,     0,     0,   224,   225,     0,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,     0,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,   298,   299,   300,   301,   302,     0,     0,   303,   304,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,   315,   316,     0,   317,  1487,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,     0,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,   330,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,     0,
     341,   342,     0,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,     0,     0,   403,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   469,     0,     0,   470,   471,   472,   473,
       0,   474,     0,   475,   476,   477,   478,   479,     0,   480,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,     0,     0,   510,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   518,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
    1276,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,   536,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,   578,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,     0,   627,   628,   629,   630,   631,   632,   633,   198,
     199,     0,   200,   201,   202,   203,   204,  2151,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,     0,     0,
     224,   225,     0,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,   298,   299,   300,
     301,   302,     0,     0,   303,   304,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,   315,
     316,     0,   317,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,     0,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,   330,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,     0,   341,   342,  1016,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,     0,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,     0,     0,   403,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   469,
       0,     0,   470,   471,   472,   473,     0,   474,     0,   475,
     476,   477,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,     0,     0,
     510,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,   195,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,   536,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
     578,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,     0,   627,   628,
     629,   630,   631,   632,   633,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,  2782,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,  1016,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,   195,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,     0,   627,   628,   629,   630,   631,   632,
     633,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
    1016,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,  3088,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,     0,
     627,   628,   629,   630,   631,   632,   633,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,  1384,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,  1016,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,   195,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,     0,   627,   628,   629,   630,
     631,   632,   633,   198,   199,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,     0,     0,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,     0,     0,   224,   225,     0,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,     0,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,   298,   299,   300,   301,   302,     0,     0,   303,   304,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,   315,   316,     0,   317,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,     0,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,   330,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,     0,
     341,   342,  1016,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,     0,     0,   403,   404,     0,
    3711,     0,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   469,     0,     0,   470,   471,   472,   473,
       0,   474,     0,   475,   476,   477,   478,   479,     0,   480,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,     0,     0,   510,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   518,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
     195,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,   536,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,   578,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,     0,   627,   628,   629,   630,   631,   632,   633,   198,
     199,     0,   200,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,     0,     0,
     224,   225,     0,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,   298,   299,   300,
     301,   302,     0,     0,   303,   304,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,   315,
     316,     0,   317,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,     0,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,   330,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,     0,   341,   342,  1016,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,     0,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,     0,     0,   403,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   469,
       0,     0,   470,   471,   472,   473,     0,   474,     0,   475,
     476,   477,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,     0,     0,
     510,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,   195,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,   536,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
     578,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,     0,   627,   628,
     629,   630,   631,   632,   633,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,  5178,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,  5179,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,     0,   627,   628,   629,   630,   631,   632,
     633,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,   916,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,     0,
     627,   628,   629,   630,   631,   632,   633,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,   985,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,     0,   627,   628,   629,   630,
     631,   632,   633,   198,   199,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,  1047,     0,     0,   206,     0,
       0,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,     0,     0,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,     0,     0,   224,   225,     0,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,     0,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,   298,   299,   300,   301,   302,     0,     0,   303,   304,
       0,     0,     0,  1048,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,   315,   316,     0,   317,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,     0,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,   330,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,     0,
     341,   342,     0,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,     0,     0,   403,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   469,     0,     0,   470,   471,   472,   473,
       0,   474,     0,   475,   476,   477,   478,   479,     0,   480,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,     0,     0,   510,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   518,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
       0,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,   536,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,   578,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,     0,   627,   628,   629,   630,   631,   632,   633,   198,
     199,     0,   200,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,     0,     0,
     224,   225,     0,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,   298,   299,   300,
     301,   302,     0,     0,   303,   304,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,   315,
     316,     0,   317,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,     0,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,   330,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,     0,   341,   342,     0,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,     0,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,     0,     0,   403,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   469,
       0,     0,   470,   471,   472,   473,     0,   474,     0,   475,
     476,   477,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,     0,     0,
     510,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,  1236,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,   536,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
     578,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,     0,   627,   628,
     629,   630,   631,   632,   633,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,  2294,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,     0,   627,   628,   629,   630,   631,   632,
     633,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,  2422,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,     0,
     627,   628,   629,   630,   631,   632,   633,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,  3012,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,     0,   627,   628,   629,   630,
     631,   632,   633,   198,   199,     0,   200,   201,   202,   203,
     204,  3024,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,     0,     0,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,     0,     0,   224,   225,     0,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,     0,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,   298,   299,   300,   301,   302,     0,     0,   303,   304,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,   315,   316,     0,   317,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,     0,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,   330,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,     0,
     341,   342,     0,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,     0,     0,   403,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   469,     0,     0,   470,   471,   472,   473,
       0,   474,     0,   475,   476,   477,   478,   479,     0,   480,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,     0,     0,   510,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   518,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
       0,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,   536,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,   578,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,     0,   627,   628,   629,   630,   631,   632,   633,   198,
     199,     0,   200,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,     0,     0,
     224,   225,     0,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,  3053,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,   298,   299,   300,
     301,   302,     0,     0,   303,   304,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,   315,
     316,     0,   317,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,     0,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,   330,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,     0,   341,   342,     0,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,     0,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,     0,     0,   403,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   469,
       0,     0,   470,   471,   472,   473,     0,   474,     0,   475,
     476,   477,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,     0,     0,
     510,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,     0,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,   536,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
     578,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,     0,   627,   628,
     629,   630,   631,   632,   633,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,  3117,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,     0,   627,   628,   629,   630,   631,   632,
     633,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,     0,
     627,   628,   629,   630,   631,   632,   633,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,  2028,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,  2029,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,     0,   627,   628,   629,   630,
     631,   632,   633,   198,   199,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,     0,     0,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,     0,     0,   224,   225,     0,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,     0,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,   298,   299,   300,   301,   302,     0,     0,   303,   304,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,   315,   316,     0,   317,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,     0,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,   330,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,     0,
     341,   342,     0,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,     0,     0,   403,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   469,     0,     0,   470,   471,   472,   473,
       0,   474,     0,   475,   476,   477,   478,   479,     0,   480,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,     0,     0,   510,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   518,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
       0,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,   536,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,   578,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,  4929,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,     0,   627,   628,   629,   630,   631,   632,   633,   198,
     199,     0,   200,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,     0,     0,
     224,   225,     0,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,  1415,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,   298,   299,   300,
     301,   302,     0,     0,   303,   304,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,     0,     0,   314,     0,     0,     0,   315,
     316,     0,   317,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,     0,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,   330,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,     0,   341,   342,     0,     0,
       0,     0,     0,   343,   344,     0,     0,     0,   346,     0,
     347,   348,     0,     0,     0,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,     0,     0,   403,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   469,
       0,     0,   470,   471,   472,   473,     0,   474,     0,   475,
     476,   477,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,     0,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,     0,     0,
     510,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,     0,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,  1416,
     535,     0,     0,     0,   536,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   565,     0,     0,     0,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,     0,   576,   577,     0,
     578,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,     0,   627,   628,
     629,   630,   631,   632,   633,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,  1415,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,     0,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,     0,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,     0,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,     0,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,     0,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,     0,   627,   628,   629,   630,   631,   632,
     633,   198,   199,     0,   200,   201,   202,   203,   204,  1400,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,  1401,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,     0,   288,   289,     0,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,     0,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
     858,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,  1402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,     0,   433,   434,
     435,     0,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,     0,   451,     0,   452,   453,
     454,     0,     0,     0,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,     0,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,     0,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,     0,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,     0,
     627,   628,   629,   630,   631,   632,   633,   198,   199,     0,
     200,   201,   202,   203,   204,  5011,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,  5012,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,     0,
     288,   289,     0,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,     0,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,   858,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,  5013,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,     0,   433,   434,   435,     0,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,     0,   451,     0,   452,   453,   454,     0,     0,     0,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,     0,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
       0,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,   195,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
       0,     0,   595,   596,   597,     0,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,     0,   627,   628,   629,   630,
     631,   632,   633,   198,   199,     0,   200,   201,   202,   203,
     204,  2089,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,     0,     0,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,     0,     0,   224,   225,     0,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,     0,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,     0,   288,   289,     0,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,     0,   299,   300,   301,   302,     0,     0,   303,   304,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,   315,   316,     0,   317,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,     0,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,   330,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,     0,
     341,   342,   858,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,  2090,     0,     0,     0,   403,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   427,     0,   428,   429,   430,     0,   431,     0,     0,
     433,   434,   435,     0,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,     0,   451,     0,
     452,   453,   454,     0,     0,     0,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   469,     0,     0,   470,   471,   472,   473,
       0,   474,     0,   475,   476,   477,   478,   479,     0,   480,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,     0,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,     0,     0,   510,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,     0,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
     195,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,   536,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,   578,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,     0,     0,   595,   596,
     597,     0,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,     0,   627,   628,   629,   630,   631,   632,   633,   198,
     199,     0,   200,   201,   202,   203,   204,  2879,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,     0,     0,
     224,   225,     0,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,     0,   288,   289,     0,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,     0,   299,   300,
     301,   302,     0,     0,   303,   304,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,   315,
     316,     0,   317,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,     0,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,   330,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,     0,   341,   342,   858,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,     0,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,  2880,
       0,     0,     0,   403,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,   427,     0,   428,
     429,   430,     0,   431,     0,     0,   433,   434,   435,     0,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,     0,   451,     0,   452,   453,   454,     0,
       0,     0,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   469,
       0,     0,   470,   471,   472,   473,     0,   474,     0,   475,
     476,   477,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,     0,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,     0,     0,
     510,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,     0,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,   195,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,   536,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
     578,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,     0,     0,   595,   596,   597,     0,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,     0,   627,   628,
     629,   630,   631,   632,   633,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,     0,   288,   289,
       0,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,     0,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,   858,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,     0,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,     0,   433,   434,   435,     0,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,     0,
     451,     0,   452,   453,   454,     0,     0,     0,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,     0,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,     0,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,   195,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,     0,     0,
     595,   596,   597,     0,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,     0,   627,   628,   629,   630,   631,   632,
     633,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,     0,
       0,   208,   209,   210,   211,   212,   213,     0,  -456,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,     0,     0,     0,     0,   223,
    4867,     0,   224,   225,     0,   226,   227,     0,     0,     0,
       0,   230,   231,   232,  4868,   234,   235,     0,   236,   237,
       0,   238,   239,     0,   241,     0,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,     0,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,     0,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,  -426,  -426,   277,     0,
    -426,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,     0,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,  4869,   298,
     299,   300,   301,   302,     0,     0,     0,     0,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,     0,   316,     0,     0,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,  4870,     0,   324,     0,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
       0,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,  4871,     0,     0,   336,     0,   337,     0,
       0,     0,   339,     0,     0,   340,  4872,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,  -411,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,     0,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,  4873,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,     0,
       0,     0,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,     0,
     454,  -411,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,     0,     0,   464,   465,     0,   466,   467,   468,
    4874,   469,     0,     0,     0,   471,   472,   473,     0,   474,
       0,   475,   476,     0,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,     0,     0,     0,   489,     0,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,     0,   506,   507,   508,   509,
       0,     0,     0,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,     0,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,     0,     0,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,  -411,     0,     0,     0,   558,   559,   560,     0,
     561,     0,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,     0,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,     0,
       0,   628,   629,   630,   631,   632,   633,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,     0,     0,   208,   209,   210,
     211,   212,   213,     0,  -456,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,     0,     0,     0,     0,   223,  4867,     0,   224,   225,
       0,   226,   227,     0,     0,     0,     0,   230,   231,   232,
    4868,   234,   235,     0,   236,   237,     0,   238,   239,     0,
     241,     0,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,     0,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,     0,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,     0,     0,     0,   274,   275,
     276,     0,  -447,     0,   277,     0,  -447,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,     0,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,  4869,   298,   299,   300,   301,   302,
       0,     0,     0,     0,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,     0,   316,     0,
       0,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,  4870,     0,   324,     0,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,     0,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,  4871,
       0,     0,   336,     0,   337,     0,     0,     0,   339,     0,
       0,   340,  4872,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,  -411,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,     0,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,  4873,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,     0,     0,     0,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,     0,   454,  -411,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,     0,     0,
     464,   465,     0,   466,   467,   468,  4874,   469,     0,     0,
       0,   471,   472,   473,     0,   474,     0,   475,   476,     0,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,     0,
       0,     0,   489,     0,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,     0,   506,   507,   508,   509,     0,     0,     0,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,     0,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,     0,     0,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,  -447,     0,  -411,     0,
       0,     0,   558,   559,   560,     0,   561,     0,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,     0,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,     0,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,     0,     0,   628,   629,   630,
     631,   632,   633,   198,   199,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,     0,     0,   208,   209,   210,   211,   212,   213,     0,
    -456,     0,     0,     0,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,     0,     0,     0,
       0,   223,  4867,     0,   224,   225,     0,   226,   227,     0,
       0,     0,     0,   230,   231,   232,  4868,   234,   235,     0,
     236,   237,     0,   238,   239,     0,   241,     0,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,     0,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,     0,
       0,     0,     0,     0,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,     0,     0,     0,   274,   275,   276,     0,  -444,     0,
     277,     0,  -444,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,     0,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
    4869,   298,   299,   300,   301,   302,     0,     0,     0,     0,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,     0,   316,     0,     0,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,  4870,     0,
     324,     0,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,     0,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,  4871,     0,     0,   336,     0,
     337,     0,     0,     0,   339,     0,     0,   340,  4872,     0,
     341,   342,     0,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
    -411,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,     0,     0,     0,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,  4873,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,     0,     0,     0,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,     0,   454,  -411,     0,   455,   456,   457,   458,   459,
     460,   461,   462,     0,     0,     0,   464,   465,     0,   466,
     467,   468,  4874,   469,     0,     0,     0,   471,   472,   473,
       0,   474,     0,   475,   476,     0,   478,   479,     0,   480,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,     0,     0,     0,   489,     0,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,     0,   506,   507,
     508,   509,     0,     0,     0,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   518,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
       0,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,     0,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,     0,
       0,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,  -444,     0,  -411,     0,     0,     0,   558,   559,
     560,     0,   561,     0,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,     0,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,     0,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,     0,     0,   628,   629,   630,   631,   632,   633,   198,
     199,     0,   200,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,     0,     0,   208,
     209,   210,   211,   212,   213,     0,  -456,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,     0,     0,     0,     0,   223,  4867,     0,
     224,   225,     0,   226,   227,     0,     0,     0,     0,   230,
     231,   232,  4868,   234,   235,     0,   236,   237,     0,   238,
     239,     0,   241,     0,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,     0,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,     0,     0,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,     0,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,  5122,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,     0,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,  4869,   298,   299,   300,
     301,   302,     0,     0,     0,     0,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,     0,
     316,     0,     0,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,  4870,     0,   324,     0,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,     0,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,  4871,     0,     0,   336,     0,   337,     0,     0,     0,
     339,     0,     0,   340,  4872,     0,   341,   342,     0,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,     0,     0,  -411,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,     0,     0,     0,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,  4873,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,     0,     0,     0,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,     0,   454,  -411,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
       0,     0,   464,   465,     0,   466,   467,   468,  4874,   469,
       0,     0,     0,   471,   472,   473,     0,   474,     0,   475,
     476,     0,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,     0,     0,     0,   489,     0,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,     0,   506,   507,   508,   509,     0,     0,
       0,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,     0,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,     0,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,     0,     0,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
    -411,     0,     0,     0,   558,   559,   560,     0,   561,     0,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
       0,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,     0,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,     0,     0,   628,
     629,   630,   631,   632,   633,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,     0,     0,   208,   209,   210,   211,   212,
     213,     0,  -456,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,     0,
       0,     0,     0,   223,  4867,     0,   224,   225,     0,   226,
     227,     0,     0,     0,     0,   230,   231,   232,  4868,   234,
     235,     0,   236,   237,     0,   238,   239,     0,   241,     0,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,     0,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,     0,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,     0,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,  -449,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
       0,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,  4869,   298,   299,   300,   301,   302,     0,     0,
       0,     0,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,     0,   316,     0,     0,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
    4870,     0,   324,     0,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,     0,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,  4871,     0,     0,
     336,     0,   337,     0,     0,     0,   339,     0,     0,   340,
    4872,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,  -411,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,     0,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,  4873,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,     0,     0,     0,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,     0,   454,  -411,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,     0,     0,   464,   465,
       0,   466,   467,   468,  4874,   469,     0,     0,     0,   471,
     472,   473,     0,   474,     0,   475,   476,     0,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,     0,     0,     0,
     489,     0,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,     0,
     506,   507,   508,   509,     0,     0,     0,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
       0,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,     0,     0,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,  -411,     0,     0,     0,
     558,   559,   560,     0,   561,     0,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,     0,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,     0,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,     0,     0,   628,   629,   630,   631,   632,
     633,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,     0,
       0,   208,   209,   210,   211,   212,   213,     0,  -456,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,     0,     0,     0,     0,   223,
    4867,     0,   224,   225,     0,   226,   227,     0,     0,     0,
       0,   230,   231,   232,  4868,   234,   235,     0,   236,   237,
       0,   238,   239,     0,   241,     0,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,     0,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,     0,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
    5183,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,     0,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,  4869,   298,
     299,   300,   301,   302,     0,     0,     0,     0,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,     0,   316,     0,     0,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,  4870,     0,   324,     0,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
       0,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,  4871,     0,     0,   336,     0,   337,     0,
       0,     0,   339,     0,     0,   340,  4872,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,  -411,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,     0,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,  4873,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,     0,
       0,     0,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,     0,
     454,  -411,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,     0,     0,   464,   465,     0,   466,   467,   468,
    4874,   469,     0,     0,     0,   471,   472,   473,     0,   474,
       0,   475,   476,     0,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,     0,     0,     0,   489,     0,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,     0,   506,   507,   508,   509,
       0,     0,     0,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,     0,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,     0,     0,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,  -411,     0,     0,     0,   558,   559,   560,     0,
     561,     0,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,     0,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,     0,
       0,   628,   629,   630,   631,   632,   633,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,     0,     0,   208,   209,   210,
     211,   212,   213,     0,  -456,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,     0,     0,     0,     0,   223,  4867,     0,   224,   225,
       0,   226,   227,     0,     0,     0,     0,   230,   231,   232,
    4868,   234,   235,     0,   236,   237,     0,   238,   239,     0,
     241,     0,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,     0,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,     0,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,     0,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,  5227,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,     0,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,  4869,   298,   299,   300,   301,   302,
       0,     0,     0,     0,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,     0,   316,     0,
       0,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,  4870,     0,   324,     0,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,     0,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,  4871,
       0,     0,   336,     0,   337,     0,     0,     0,   339,     0,
       0,   340,  4872,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,  -411,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,     0,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,  4873,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,     0,     0,     0,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,     0,   454,  -411,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,     0,     0,
     464,   465,     0,   466,   467,   468,  4874,   469,     0,     0,
       0,   471,   472,   473,     0,   474,     0,   475,   476,     0,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,     0,
       0,     0,   489,     0,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,     0,   506,   507,   508,   509,     0,     0,     0,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,     0,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,     0,     0,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,  -411,     0,
       0,     0,   558,   559,   560,     0,   561,     0,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,     0,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,     0,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,     0,     0,   628,   629,   630,
     631,   632,   633,   198,   199,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,     0,     0,   208,   209,   210,   211,   212,   213,     0,
    -456,     0,     0,     0,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,     0,     0,     0,
       0,   223,  4867,     0,   224,   225,     0,   226,   227,     0,
       0,     0,     0,   230,   231,   232,  4868,   234,   235,     0,
     236,   237,     0,   238,   239,     0,   241,     0,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,     0,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,     0,
       0,     0,     0,     0,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,     0,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,  -430,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,     0,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
    4869,   298,   299,   300,   301,   302,     0,     0,     0,     0,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,     0,   316,     0,     0,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,  4870,     0,
     324,     0,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,     0,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,  4871,     0,     0,   336,     0,
     337,     0,     0,     0,   339,     0,     0,   340,  4872,     0,
     341,   342,     0,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
    -411,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,     0,     0,     0,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,  4873,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,     0,     0,     0,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,     0,   454,  -411,     0,   455,   456,   457,   458,   459,
     460,   461,   462,     0,     0,     0,   464,   465,     0,   466,
     467,   468,  4874,   469,     0,     0,     0,   471,   472,   473,
       0,   474,     0,   475,   476,     0,   478,   479,     0,   480,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,     0,     0,     0,   489,     0,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,     0,   506,   507,
     508,   509,     0,     0,     0,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   518,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
       0,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,     0,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,     0,
       0,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,  -411,     0,     0,     0,   558,   559,
     560,     0,   561,     0,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,     0,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,     0,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,     0,     0,   628,   629,   630,   631,   632,   633,   198,
     199,     0,   200,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,     0,     0,   208,
     209,   210,   211,   212,   213,     0,  -456,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,     0,     0,     0,     0,   223,  4867,     0,
     224,   225,     0,   226,   227,     0,     0,     0,     0,   230,
     231,   232,  4868,   234,   235,     0,   236,   237,     0,   238,
     239,     0,   241,     0,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,     0,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,     0,     0,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,     0,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,     0,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,     0,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,  4869,   298,   299,   300,
     301,   302,     0,     0,     0,     0,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,     0,
     316,     0,     0,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,  4870,     0,   324,     0,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,     0,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,  4871,     0,     0,   336,     0,   337,     0,     0,     0,
     339,     0,     0,   340,  4872,     0,   341,   342,     0,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,     0,     0,  -411,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,     0,     0,     0,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,  4873,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,     0,     0,     0,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,     0,   454,  -411,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
       0,     0,   464,   465,     0,   466,   467,   468,  4874,   469,
       0,     0,     0,   471,   472,   473,     0,   474,     0,   475,
     476,     0,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,     0,     0,     0,   489,     0,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,     0,   506,   507,   508,   509,     0,     0,
       0,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,     0,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,     0,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,     0,     0,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
    -411,     0,     0,     0,   558,   559,   560,     0,   561,     0,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
       0,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,     0,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,     0,     0,   628,
     629,   630,   631,   632,   633,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,     0,     0,   208,   209,   210,   211,   212,
     213,     0,  -456,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,     0,
       0,     0,     0,   223,  4867,     0,   224,   225,     0,   226,
     227,     0,     0,     0,     0,   230,   231,   232,  4868,   234,
     235,     0,   236,   237,     0,   238,   239,     0,   241,     0,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,     0,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,     0,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,     0,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,     0,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
       0,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,  4869,   298,   299,   300,   301,   302,     0,     0,
       0,     0,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,     0,   316,     0,     0,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
    4870,     0,   324,     0,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,     0,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,  4871,     0,     0,
     336,     0,   337,     0,     0,     0,   339,     0,     0,   340,
    4872,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,  -411,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,     0,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,  4873,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,     0,     0,     0,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,     0,   454,  -411,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,     0,     0,   464,   465,
       0,   466,   467,   468,  4874,   469,     0,     0,     0,   471,
     472,   473,     0,   474,     0,   475,   476,     0,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,     0,     0,     0,
     489,     0,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,     0,
     506,   507,   508,   509,     0,     0,     0,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
       0,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,     0,     0,     0,     0,   545,     0,     0,  5125,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,  -411,     0,     0,     0,
     558,   559,   560,     0,   561,     0,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,     0,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,     0,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,     0,     0,   628,   629,   630,   631,   632,
     633,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,     0,
       0,   208,   209,   210,   211,   212,   213,     0,     0,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,     0,     0,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,     0,     0,     0,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,     0,   241,     0,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,     0,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,     0,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
       0,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,     0,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,     0,     0,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,     0,   316,     0,     0,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,     0,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
       0,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,     0,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,     0,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,     0,
       0,     0,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,     0,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,     0,   471,   472,   473,     0,   474,
       0,   475,   476,     0,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,     0,     0,     0,   489,     0,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,     0,   506,   507,   508,   509,
       0,     0,     0,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,     0,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,     0,     0,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,     0,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,     0,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,     0,
       0,   628,   629,   630,   631,   632,   633,  3579,  3580,     0,
       0,     0,     0,  3581,     0,  3582,     0,  3583,  3584,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3585,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3586,     0,     0,  3587,     0,
       0,     0,     0,     0,     0,     0,  3588,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3249,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3589,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3590,     0,  3591,     0,     0,     0,     0,  5020,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3592,  3593,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3594,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3595,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3596,     0,     0,     0,     0,     0,     0,     0,
       0,  3597,  3598,     0,  3599,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3600,  3601,  3602,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3603,  3604,  3605,     0,     0,     0,     0,  3606,     0,     0,
    3607,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3608,  3609,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3610,  3611,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3254,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3612,     0,     0,     0,  3613,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3614,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3615,     0,     0,  3616,
       0,     0,  3617,  3618,  3619,  3620,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3621,  3622,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3623
};

static const yytype_int16 yycheck[] =
{
       6,   944,   945,     0,    57,   800,    43,   965,     0,    15,
       0,  1049,    18,   813,  1050,  1039,    22,  1148,  1099,  1041,
    1043,   964,   717,    21,   114,    31,   114,  1327,     6,  2495,
    1199,    60,    38,  2042,    43,    41,  1290,  1032,  1290,  1251,
      46,    39,  1539,    49,  1615,    43,  2857,    53,  1671,    55,
    1199,  2049,  2611,  2288,  2289,  2180,  2031,  1008,  1063,    60,
    2006,  2049,  1063,  2361,  1635,    19,  2006,  2246,  2745,    96,
    1702,    63,  2712,    63,    59,  1375,    30,    22,  2488,  2940,
    2522,    35,  1653,  1034,  2526,  3062,  1587,  1121,  1122,  2613,
      96,  2320,  2321,  1971,  1141,  1587,  3113,   678,  1615,  3091,
    1587,   661,   662,  2099,    49,   665,  3531,  3625,  3483,  1889,
    1890,  2086,  1376,  2328,  2323,  2488,  1150,  1897,  1898,  1899,
    2122,  1428,  2086,    21,  2488,  2488,   181,   119,  1162,  1163,
    1164,  2488,  1026,  3625,  1168,  2775,  4214,  2753,  1617,   962,
     146,    39,  1621,  2268,  1451,  1452,  1453,  1454,  1455,  2681,
    1457,  2081,  3167,  3645,  3646,  2342,  1635,  3167,  3401,  2302,
    3722,  2299,  2497,   119,  1598,  2513,  2514,  2515,  1647,   175,
      22,   177,    21,  1207,   180,   181,   182,   183,   647,   648,
       5,  2529,    18,    19,  4180,  2607,  2331,  2374,  2375,    35,
      21,   197,    73,  2163,  2403,    11,    18,    19,    35,   177,
     125,   146,   180,    48,   785,   786,  2554,   788,  3598,  3599,
    2558,  2181,  3602,    52,  1295,    18,    19,     9,    21,    21,
     801,  2762,   160,  2193,    21,   125,  2574,  2575,    71,  2199,
    3620,    59,  2580,    37,    18,    19,   156,    29,   183,   156,
      18,    19,    34,   162,  2263,    71,    73,   176,  2596,  2597,
      62,  2789,   197,   825,   826,   827,    71,  2605,   830,   831,
      52,   263,   834,   103,   836,   837,   838,   197,   840,   197,
      68,    48,  1223,   194,    18,    19,    18,    19,    31,   131,
     194,    33,    21,    18,    19,    78,   144,    18,    19,    23,
     194,  1086,    73,    21,    18,    19,    18,    19,   194,   158,
      39,  1382,  1736,    64,    43,   190,   160,    19,    73,   150,
     230,   246,    18,    19,  1106,  1107,   194,   249,    18,    19,
      67,   130,   316,   194,  2343,   156,  2345,    61,    62,  2317,
     130,   125,  2320,  2321,   373,  2354,  2461,  3530,   327,   671,
     150,    81,   914,   109,    18,    19,  2471,  2885,   176,   235,
     246,   103,   180,  2372,   156,   373,    18,    19,  1114,  1115,
    1116,  2664,   156,    64,   377,    21,   194,    18,    19,  1125,
     122,   285,   212,    74,  2393,   125,   200,   156,  2397,  3926,
     176,    18,    19,    39,  4390,    12,   204,   125,    89,   285,
      44,   176,  4291,   156,   156,   243,    71,   692,   473,  4119,
    1156,   193,  4122,  1159,   388,  3795,   156,   285,  1430,    18,
      19,   197,   501,   977,   231,   219,   125,   198,   156,  3436,
     156,   407,  1178,  1179,   156,    23,  1182,   583,  1450,   128,
     139,   572,   193,    21,    70,   111,   188,    35,  4962,    85,
     316,   241,  1137,   615,  1200,  1201,   422,   639,   378,  1205,
    1206,    49,  1247,   156,    73,    13,  1151,  3058,  4154,   635,
     246,    13,   197,    61,    62,  1408,    22,   762,   282,   430,
     316,   372,    26,    43,   276,   194,  1419,   572,  1278,  1279,
      37,    73,   100,  3908,    13,   243,    19,  2485,   138,  4485,
    2932,   156,   193,   245,    18,    19,   293,  2485,   199,   503,
     429,   369,   216,   331,   197,   150,   239,  4626,   156,    35,
     449,     9,  1507,   276,  4094,   757,   249,   511,   401,    18,
      19,   482,    70,   765,   282,    86,   103,   246,   681,   369,
      84,  3208,    65,    31,   235,   130,    62,   231,   290,   692,
     276,   480,  1564,  1565,   105,  1105,   389,  2672,   235,   263,
    4130,   387,  3430,  1548,   390,  2495,   249,   371,    77,   235,
      77,  2971,   263,   389,   502,   387,   285,   450,   390,  4688,
    1370,    18,    19,   572,   389,   131,   263,   769,   228,   404,
     448,   457,   140,  2602,   387,  3144,   388,   390,   140,    77,
    2799,  3033,   733,   769,   293,  4113,   420,   769,   770,   401,
     655,   429,  1071,   387,   158,   609,   390,  2786,  2787,   387,
     586,   140,   390,   769,  3993,   203,  5140,  5141,  4696,   603,
     238,   373,  3997,   332,  2762,  2750,   259,    18,    19,    18,
      19,   470,   163,   429,  1215,   433,   433,    18,    19,   456,
     258,   647,   648,   387,   429,   397,   390,   293,   502,   655,
    3092,   657,   387,   271,  2652,   390,   387,   418,   285,   390,
     393,  2870,   219,   387,  2652,   387,   390,  4566,   390,   764,
      23,   572,   701,   659,  1255,    52,   373,  4673,  4674,  4069,
     769,   387,    35,   237,   390,  4405,   158,   387,   547,  4079,
     390,  2900,  2901,   511,  1275,   770,    49,  4087,    18,    19,
     701,   355,   647,   648,  3381,    18,    19,   192,    61,    62,
    1964,   717,  1964,   387,   389,   563,   390,   418,   566,  4797,
    1015,   682,  1974,   256,   112,   387,  1298,   115,   390,   583,
     769,  4121,  2260,  2708,  2262,   790,   387,   355,   756,   390,
    3043,   743,   566,   262,  2708,   262,   231,   741,   488,  2747,
     387,   609,  1786,   390,  4760,  4302,   769,  3167,  2329,  2747,
    2331,  3423,  3424,   388,   511,   493,   637,  2776,   572,   323,
    1334,  3433,  3434,  3071,   262,   764,  1108,  2655,   387,   615,
     699,   390,   563,  2998,   790,  3000,   792,   672,  1032,    18,
      19,   797,   637,   634,  1828,    18,    19,   789,   563,   789,
     609,  2302,   595,  2778,  3328,   194,  3330,  2753,  2946,   609,
    2302,   623,   648,  2753,  2778,  2302,   370,   613,   519,  3028,
      18,    19,   828,   723,   634,  1294,   648,   833,   613,   884,
     583,   717,   770,   635,   769,  4028,  2616,   769,   566,   769,
     769,   769,   594,   604,   769,   648,   643,   767,   769,  2156,
     767,   765,   769,  2160,  4932,  2874,   696,   673,  2165,   477,
     637,  3006,   628,   387,   648,   769,   390,   601,  1902,   765,
     648,   583,   635,  2892,  2893,  2894,  2895,  2500,   884,  1348,
     907,  2877,  3423,   764,   890,  3525,  3234,   765,   387,   944,
    1359,   390,   620,  2200,  2201,   741,  3318,   952,   953,   635,
     906,   907,  1694,   604,   648,  1900,   648,   543,  4904,   637,
     769,   769,   764,   648,   739,   740,  3264,   648,  3266,  1009,
     769,  1009,   765,  3940,   648,  4487,   648,   764,   965,   935,
     769,   549,  3280,   769,  3282,  2944,   767,   764,   944,   765,
     387,   769,   648,   390,   563,   697,   952,   953,   648,  3297,
     765,   949,   774,   962,  1044,  3493,  1044,  2976,  3496,   536,
      18,    19,   765,  3824,   962,   767,   769,    18,    19,   975,
     976,   647,   770,   767,   648,  1030,  1768,  3578,  2479,   985,
     572,   765,   743,   769,   769,   769,   648,  2479,   767,   634,
     769,   769,  2479,   547,  4690,   543,   387,   648,   387,   390,
     694,   390,  1057,   601,   767,   767,   387,   769,  1014,   390,
    1002,   648,  1002,  3192,   609,   572,  1772,   767,  1010,   652,
     553,   765,  3165,  4515,  1030,   769,  2107,  1054,   626,   767,
     975,   767,   765,  1039,   769,   767,   764,   769,   769,   648,
    3641,   765,   743,   765,  1050,   769,   765,   769,  1054,   841,
    1056,  1057,  1049,  1059,  1010,  2489,    65,  1049,  1064,  1049,
    4303,  1067,  1068,   769,   767,  1071,   769,   387,   765,   769,
     390,  1098,  1078,   592,   387,   547,   630,   390,  4055,  3957,
    3958,  1087,  1088,  1089,  1840,  2717,  1092,  4466,  1844,  1095,
    1068,   765,  1098,   470,  1100,   769,   615,  1103,  1104,  3397,
     631,  1099,   767,  5181,   769,  4097,  3125,   769,  3127,  3128,
    1866,   903,  3131,  3132,   765,    65,  1169,   909,   769,   767,
     637,   769,  3141,  3142,   648,   111,  1071,  3146,   765,   614,
    3149,  1137,   769,  3152,  1224,  1379,  1224,   656,   657,   656,
     657,    18,    19,  1838,   769,  1151,   144,   765,   484,   648,
     433,   204,   219,  2096,   174,  1147,   765,  1147,   387,   123,
     769,   390,   276,  2244,   387,    47,   764,   390,   656,   657,
    3168,  4186,   367,   372,   222,  1735,  4186,   293,   285,  4100,
    3168,   275,    11,  2219,   575,   209,    18,    19,   576,   387,
    1750,   579,   390,  1199,   139,   749,    18,    19,   572,  1252,
    1253,   648,   235,  1256,   186,   194,  1259,  1260,  1261,  2378,
     949,  1264,  1265,  1266,  1267,  1268,  1269,  1270,  1271,  1274,
     380,  2718,   402,   962,  1230,  1254,   501,  1233,   356,  2378,
     380,  3423,   456,  1288,  2488,   641,  2488,  3572,  3573,   160,
    3432,   765,    57,   138,   465,   769,   378,   256,   601,  3926,
    4640,   255,  4642,  1254,   160,    18,    19,   648,   282,   648,
     158,    18,    19,  1507,  2288,  2289,   212,   648,  1274,  1324,
     769,  3458,   566,   194,   388,  1281,  1282,  1283,  1284,  3941,
    1286,  1287,  1288,   247,   266,  1291,  1292,  1293,  1294,  1316,
    1296,  1297,   141,   949,  2117,  1301,   285,  1295,    18,    19,
    3178,  3510,  2125,     9,    87,  1283,   256,  1313,  4800,  1287,
    1316,  2006,   258,  1291,    18,    19,  3495,   433,  1324,  3935,
    3499,  1327,   769,    18,    19,  1331,  1332,  2855,   648,   387,
    1328,   125,   390,   228,   216,   648,   387,  2137,   167,   390,
    3218,  1347,  1348,  3753,    18,    19,   456,  1374,  3563,  1294,
    3559,   626,  1358,  1359,   637,  1361,  1362,   243,    18,    19,
    1099,   572,    18,    19,  1391,  3897,    22,  1948,  1374,  1375,
      52,   200,  2266,   653,  1429,   353,   765,  1383,  2875,   263,
    3753,  3679,  3680,  1420,  1382,  1391,  3524,   332,   769,  3753,
    3753,  2691,   962,  4818,   768,  1967,  3753,    18,    19,  2653,
    1406,  2653,  1347,  1348,    33,  2410,  2411,  3416,  1414,  2410,
    2411,  1420,   122,  1358,  1359,   365,  1361,  4909,   356,   648,
    2632,  4910,  1420,  1429,  2688,   648,  3435,   407,   764,   433,
    1328,   278,  3970,  3971,    21,  3006,    18,    19,   572,  3010,
     194,  3371,   388,  1099,   572,   465,  3731,  3443,  3444,   769,
     648,   583,   765,  3455,   122,  4447,  2756,  4832,   511,  3478,
    1515,  3746,  4000,  4001,   179,    71,    18,    19,  4006,   597,
    4008,   435,   370,  3096,   498,   131,  1503,  1483,  1484,   465,
     186,   487,  3412,   643,   292,  1540,   566,   241,  4299,   603,
     122,  2755,  1498,   643,  1521,   543,   345,  1503,  3494,   606,
     158,  3471,  3472,   501,   728,   572,  2637,  2638,  1300,  1515,
     387,  2545,  1981,   390,    26,  1521,  4437,   153,  1573,  3867,
     188,  3750,  3751,  3094,  3095,   724,  2833,   643,   164,  5021,
    5048,   198,   585,   122,  1540,   730,   237,  2844,  2572,  2846,
     769,   635,  2849,  3752,   553,  3325,   769,  2128,   769,  3329,
    4567,   219,  3527,   764,   369,   387,  1295,   572,   390,   165,
    1552,    18,    19,  3527,  1570,   387,   654,  1573,   390,   156,
    1562,   769,    84,    18,    19,  3453,   197,  3094,   372,   237,
     290,   502,  2142,    21,   764,   535,   550,  2611,   191,  1328,
     648,   420,    18,    19,    18,    19,   502,   648,  3126,   188,
    2647,  3129,  3130,   553,   486,  3133,  3134,  3135,  3136,  3137,
    3138,  3139,  3140,    18,    19,  3143,  3095,  3145,   728,  3147,
     249,    32,   290,  3151,   387,  4302,   484,   390,  4070,  4039,
     387,   765,   276,   390,   572,   482,    74,   769,  1675,  1295,
     768,  3212,  5131,  1382,   231,   428,   275,   455,   258,   547,
    4627,   765,   125,  3256,  3863,   504,   505,   372,   290,   597,
      18,    19,   583,   373,  3165,  3543,  3685,   387,    79,   370,
     390,   401,  1328,  3165,  4535,   635,    71,   563,  3165,   659,
     566,  1420,   770,   387,   704,   705,   390,   369,  2710,   162,
    1696,  1697,   387,  1678,   644,   390,   401,   369,  2779,  2780,
    2781,   290,   456,   128,   533,   373,  1712,   122,  5200,   572,
     125,   769,   370,   387,    18,    19,   390,  2971,   769,  2971,
     604,   370,   160,   125,   612,   237,  1382,   387,    13,   125,
     390,   387,   630,   400,   390,   401,   714,   715,   716,   493,
    4264,   373,  1748,   154,   388,  1751,  1752,  1753,   238,   764,
     386,  3383,  1697,    18,    19,  1761,  4041,    53,   587,   333,
     162,  4046,  3750,  3751,  3973,  4050,   387,  1712,    64,   390,
     165,   648,   209,   188,  1752,  1753,  4186,   572,    18,    19,
     141,   271,    25,   389,   373,   197,   374,  3996,   470,  4766,
    3668,   764,   197,   186,   167,   220,   615,   235,   127,    18,
      19,  4010,  4479,  1748,   219,   387,  4015,   572,   390,   769,
     413,   323,   566,   442,   401,    40,   648,  4837,  2840,   501,
    4840,   709,  4360,  4002,  4362,   263,   648,   200,   636,    21,
      18,    19,  1838,  1839,   564,   387,    18,    19,   390,   231,
      18,    19,     0,   510,  4310,   282,   547,  3866,  2604,   245,
    1420,  1906,  3104,    13,   522,   140,   572,  3735,   370,   564,
     108,   471,  2805,   535,    18,    19,   620,   239,   293,   456,
     733,  4430,  4431,   266,   589,   290,   156,   249,  4871,  4872,
    1933,    18,    19,   637,   594,   648,  4234,    18,    19,   547,
     605,   648,   769,  1946,  1923,   415,  1949,   485,   547,   372,
    1906,   293,    18,    19,    18,    19,   493,   756,   757,   758,
     759,   760,   761,  3167,  2520,  3167,   637,   509,  1947,   248,
    4205,  2527,  1923,    18,    19,   168,   594,   608,   648,   630,
     387,    18,    19,   390,  1926,   571,  1926,   769,   733,  3191,
      18,    19,   387,    21,   648,   390,  1947,   769,  1954,   235,
     769,   363,  2007,   648,   367,  4184,  4185,  1963,   373,   603,
    4402,   387,   594,   387,   390,   361,   390,   287,   733,   194,
     372,    13,   630,   221,   648,  1981,   369,   263,   615,   566,
     140,   630,   387,  3586,   345,   390,   282,   477,   648,  3935,
     563,  2046,   648,   566,   389,  3935,   570,   493,   637,  2005,
    2006,  2007,   127,   416,   415,   594,   769,   122,  3983,  5029,
     764,   160,   769,  3616,  3617,   607,  2022,   733,  1963,  3983,
    2026,   393,   596,  4202,  2051,  2052,   437,   648,  2034,   387,
     350,  2037,   390,   620,  2615,   547,  1981,   429,  2093,   231,
    2046,    18,    19,    18,    19,  2051,  2052,   420,   769,   769,
     637,  4026,  4027,  2634,  2109,  2636,   637,  4032,  2753,   651,
    2005,   498,  4026,  4027,   160,   769,   648,   478,  4032,  4607,
     566,    18,    19,   188,   769,  2081,  3376,  2083,  1552,  2085,
    4720,    18,    19,   387,  2085,   137,   390,  2093,  1562,  2034,
      18,    19,  2037,   300,   301,   769,   648,  3877,   140,  3879,
     152,    64,   637,  2109,  3356,   765,   447,   212,  2117,  2107,
    4108,    74,  2110,  3194,  3414,   401,  2125,   548,   630,  2117,
    4108,  2148,   387,   248,   620,   390,    89,  2125,   539,    19,
     769,  3343,   769,   770,  2161,  5128,  5129,  2143,  2144,  2145,
    2146,  2147,  2148,  2149,   765,   583,   394,   387,  3771,   757,
     390,  2157,  4711,  2159,  4100,  2161,   404,   765,  2164,  4676,
     533,   564,  3462,   411,  4681,  2143,  2144,  2145,   387,  2147,
     572,   390,    18,    19,   681,   290,   543,   764,   212,   594,
     767,  2159,   769,  4129,  4363,   692,  2164,   769,   769,  2218,
     230,   648,  2247,   534,    18,    19,  4184,  4185,   629,   387,
      21,  2146,   390,   648,  2149,   387,    18,    19,   390,   387,
      13,   127,   390,   765,   587,  3245,   653,  2218,  4343,  3104,
      18,    19,   648,   543,   648,   615,  2281,    48,  3258,   681,
      18,    19,  3401,   387,   769,   672,   390,   749,   445,   446,
     692,  2247,  2279,   648,    18,    19,  2244,  4806,   167,  3398,
     387,   141,  3401,   390,    18,    19,   387,   624,   373,   390,
      18,    19,   764,   277,   456,  2271,   280,   515,   764,  3220,
    2307,   387,   235,   387,   390,  2281,   390,  4794,   234,   235,
    3912,   125,  2288,  2289,   770,    18,    19,  4585,  2294,  4587,
     648,   592,   387,  2299,   138,   390,   563,   185,  2299,   566,
     387,   493,   583,   390,  3338,   261,  3191,   216,   765,   387,
     681,  2366,   390,  4288,   615,  2352,  2322,    18,    19,   249,
     765,   692,  2328,   230,  4288,   433,    18,    19,  2334,  2335,
    2336,  2337,  2338,  2339,  2340,    18,    19,   140,  2344,   765,
    2346,   765,   272,    19,   648,   612,   454,  2402,  3353,  2294,
    2356,  3352,  2358,  2359,   263,  2361,  3378,  2363,  2364,   212,
    2366,  2367,  2368,    59,   612,    18,    19,  2373,  2107,    21,
    2376,  2110,  2378,   197,   566,   765,  2330,  2383,  2117,   769,
    2386,  2387,  3531,   648,   228,   730,  2125,  2341,   496,   137,
    2396,   456,  2398,  2347,    18,    19,  2402,   758,   759,   760,
     761,  3201,   537,   141,   152,   750,   623,   765,   648,   626,
     387,  2417,   387,   390,    21,   390,   430,   220,   763,   764,
     235,  2427,  2428,  2377,  2271,    18,    19,  2381,   620,   648,
      38,   194,    18,    19,  2388,  2389,   571,   668,    46,   670,
     387,    48,  2387,   390,  5003,   637,   493,  2294,   100,  5260,
     387,  2107,    77,   390,  2110,   345,  2520,   122,   564,   387,
     648,   765,   390,  2527,  4483,  2492,   648,  2522,    93,   764,
     648,  2526,  2417,   235,  2480,   770,    18,    19,  2484,   594,
     176,   764,   212,   246,   180,   768,  2492,  3656,  4059,   566,
      18,    19,    61,    62,   648,  2501,  2502,  2550,   194,  3753,
     765,  3753,    71,   100,   156,  2244,  4741,  3656,  2500,    18,
      19,   648,   764,    18,    19,    84,  2522,   648,   770,   566,
    2526,    12,   285,   188,  2502,   765,    61,    62,   764,    18,
      19,  4550,   648,   572,   648,  2480,    71,    18,    19,  2484,
     192,   387,   194,   764,   390,  3004,   765,  2117,   227,   764,
     229,  5017,  3582,   648,   219,  2125,  3015,  3016,    18,    19,
     212,   648,   227,   387,   229,   217,   390,  4585,   862,  4587,
     648,   865,   764,   620,   621,   387,   870,   765,   390,   231,
     764,   875,   769,   765,  4207,  3615,   238,   765,  2244,   387,
     637,   765,   390,  3623,   246,   769,   764,    18,    19,   387,
    3630,  2607,   390,   764,    18,    19,   258,   345,   493,   637,
    2665,   765,   640,   387,   504,   505,   390,   991,   992,   271,
     994,   764,   996,   387,   276,   290,   390,   212,   765,   387,
     764,  2658,   390,   285,   765,   331,  3936,  4846,   366,   367,
     265,   238,  2648,  2649,   764,    18,    19,   764,  2640,   765,
    2640,   765,  2658,   764,   387,   764,  3787,   390,   770,  2665,
     764,   258,  4190,  4191,  4192,  4193,   764,    23,   765,   717,
     765,   648,   769,   648,   271,  2681,   764,  3984,   765,    35,
    2686,   566,  3982,   764,  2690,  2691,   387,  3818,  3819,   390,
     765,   320,   321,    49,   769,   387,   325,   326,   390,  5165,
      21,   648,   764,   355,   387,    61,    62,   390,   373,    18,
      19,   648,  4123,  3844,  2720,  4126,  4127,   764,   343,   765,
     648,   764,    19,   769,   527,   528,   378,   530,   531,   532,
    2736,  2737,  2761,   429,   387,   620,   388,   390,   765,   765,
     718,   719,   769,   769,   369,  4764,   549,  2753,  5214,   764,
    2756,   764,   637,  2745,  4325,  4326,  2762,   764,   355,  3908,
    2761,  2762,   764,   387,  3345,   765,   390,    61,    62,   769,
    2762,  2808,  2762,   656,   657,  2720,  4556,  3772,   493,   100,
     765,  2779,  2780,  2781,   769,  4039,   564,  4039,   765,  3825,
     765,  2736,  2737,   764,   387,  4793,  3830,   390,   764,  2808,
     764,   387,   648,   765,   390,  4793,   431,   769,   212,  2815,
    2808,   764,  4821,   765,  2867,  5024,  2869,   769,  2845,   765,
     764,  2356,   765,   769,   648,   477,   769,   765,   765,   135,
     765,   769,   764,  2368,   769,   156,   648,   765,   122,  2845,
     764,  2847,  2848,   764,   141,   387,  4844,  4845,   390,   501,
     648,   566,  3886,  2859,   764,   765,  4844,  4845,  2864,   387,
     648,   764,   390,  2398,   754,   755,   756,   757,   758,   759,
     760,   761,   764,   194,   648,    18,    19,  2932,   387,   764,
     477,   390,   387,   765,   648,   390,   764,   769,   419,   765,
     648,   212,  2427,   769,   481,   765,   217,   549,   387,   769,
     764,   390,  2847,  2848,   188,   620,   387,   765,   533,   390,
     764,   769,   150,   151,   179,   648,    77,   238,   563,   765,
     765,   764,   637,   764,   769,   246,  2932,   387,   764,   594,
     390,   764,  4186,   764,  4186,   219,   764,   258,     7,  2994,
    2946,  2947,  2948,  2391,  2392,  2946,    82,   648,  2410,  2411,
     271,   603,   549,   765,  3976,   276,   648,    26,   764,  3981,
     764,    64,   614,   615,   285,   648,   387,   765,   765,   390,
     765,    74,   769,   387,   769,   765,   390,   765,  3033,   769,
    5218,  5219,  3925,   635,  4284,   637,    89,   764,  2994,   125,
     654,   765,  2998,    21,  3000,   648,    12,   158,   764,  3005,
     385,   765,   122,   378,  3010,   125,   290,   765,   764,  4309,
     103,   764,   148,  3019,   387,    84,  3022,   390,   756,   757,
     758,   759,   760,   761,   648,   197,   765,  3033,   764,   122,
     769,   765,   765,  3039,   355,   769,  3091,  3092,    77,  4075,
    2779,  2780,  2781,   765,  1186,  1187,   698,   769,   345,   764,
    4086,   187,   765,  3059,   197,   648,   769,   378,   381,   765,
     764,  3067,   648,   769,   765,  3071,  3072,   388,   188,  2808,
     765,   764,   100,   765,   769,   144,   237,  4980,   231,   765,
     765,  3087,   765,   769,   769,  3091,  3092,    33,   141,   373,
     193,   764,   108,   194,   765,   188,   765,    13,   769,   219,
     769,   366,   367,   156,   141,   122,   648,   372,  2197,  2198,
     764,   127,   765,   765,  3169,   767,  3122,   769,   667,   668,
     648,   670,   774,  2779,  2780,  2781,   765,    43,   156,   764,
     769,  3221,   235,  3221,  4303,   141,   764,   764,  3193,   648,
     246,   765,  3087,   648,  3150,   122,   765,   765,   125,  4298,
     769,   769,   245,   765,  4303,   764,   477,   769,   764,   648,
     263,   765,   764,  3169,  4494,   769,   194,   648,   237,  4499,
     290,   188,   765,   765,   764,   764,   481,   769,    94,   765,
     501,   765,    98,   199,   212,   769,   765,  3193,   648,   217,
     769,   764,   764,   764,   764,   141,  3194,   290,   237,   764,
     764,  3207,   575,   364,  3210,   764,  3212,   504,   505,   370,
     238,   188,  5231,  5116,   764,   194,  3208,   765,   246,   235,
    3212,   769,  3212,   765,   764,  3217,  3218,   648,   549,   197,
     258,  3223,  5251,    37,   648,   765,   246,   765,  2808,   769,
    3935,   764,   219,   271,   387,   601,   765,   390,   276,   764,
     769,   765,   764,   373,   323,   769,   765,   285,    35,   564,
     765,  5280,  3207,   764,   569,  3210,   622,   623,   764,   764,
     286,   764,  5175,   290,  5177,   648,   765,   765,   439,   765,
     373,   769,   603,   769,   765,   764,   621,   765,   764,  4619,
    5193,   769,   345,  4623,   615,   765,   765,   764,   108,   769,
     769,   370,   765,   249,   397,   765,   769,   612,   345,   764,
     594,   115,  3318,   290,   635,   418,   637,   764,   122,   764,
     300,   301,   122,   628,   589,   364,   765,   355,  3334,   275,
     769,   370,   122,   501,   378,  4371,  4372,   253,  4374,   345,
     605,  4472,  5245,  5246,   765,   501,   212,  4677,   770,   654,
     378,   765,  4682,   769,   764,   770,   373,   167,  4381,  4382,
     388,   769,   769,   764,    96,  3371,  3393,   770,   141,  3375,
    3376,   764,    48,   156,   390,   179,  3382,   698,   156,   197,
     397,   158,   451,   111,   188,   162,   547,  3393,   188,  3381,
     200,  3397,  3398,   765,   768,  3401,   373,   767,   188,   345,
     439,   764,    80,   612,    82,   249,  3412,    48,  3414,  3401,
     293,  3401,   276,   697,   160,   219,   332,  3423,  3424,   219,
     366,   367,  3423,  3424,   384,   202,  3432,  3433,  3434,   219,
     171,  3432,  3433,  3434,   533,  3488,   519,  3382,   599,   193,
     709,     7,   263,  4940,   765,   222,   767,   125,   769,   477,
     263,   504,   505,   774,    71,  3194,  3462,   754,   755,   756,
     757,   758,   759,   760,   761,   445,   446,   504,   505,   630,
     148,    13,   634,   501,   594,  3481,   765,  3483,   547,   765,
     396,   140,    10,   499,  3019,   770,   290,   769,   765,    26,
     290,   765,   765,   765,   765,   765,   442,   765,   504,   505,
     290,   594,   502,   519,    26,   648,   764,    12,   547,   187,
     287,   275,   667,   378,   709,   615,    37,   563,  3524,   516,
    3526,   549,   769,  3524,  3059,  3531,    50,   282,    30,    30,
     287,    31,  3067,   769,   108,   583,   769,  3072,  3194,   769,
      77,    71,   487,  4565,   524,   525,   526,    84,   564,   733,
     566,   572,   356,   569,   273,    77,   769,  3563,   504,   505,
     599,   630,    84,   769,   368,  3571,   493,   658,   372,   373,
     768,   517,   345,   373,   501,   603,  4612,   594,  4614,  4615,
     769,   166,   770,   373,   600,   764,   194,   615,   604,   543,
     563,   630,   543,   167,   115,   166,   612,   211,   287,   122,
     157,   122,   518,   108,   697,  4641,   383,   635,    88,   637,
     420,   769,   769,   194,    21,   769,   493,   594,   379,   559,
     646,   158,   127,   136,   501,   156,   200,   458,   459,   460,
     461,   462,   463,   464,   765,   729,    48,  3643,   654,   566,
     177,   654,   419,   141,   560,   729,   637,   184,   160,   160,
    3656,   160,   160,  3659,  3660,   177,   160,   160,   179,   769,
     404,   235,   184,  4621,   160,   188,   443,   188,   572,  4818,
     698,   769,    87,  3679,  3680,   503,   125,  3683,   369,   316,
     749,     7,   764,   110,   583,   158,   401,  4711,    74,   566,
     401,   468,   708,   620,   621,   200,   219,   401,   219,   583,
     237,   754,   755,   756,   757,   758,   759,   760,   761,   261,
     637,   136,   286,  3719,   261,   237,  3722,  4741,   755,   756,
     757,   758,   759,   760,   761,  3731,   401,   743,   744,   401,
     136,   504,   505,    48,   401,   512,   764,   765,   243,   767,
    3746,   769,  3748,   620,   621,   401,   774,   401,   754,   755,
     756,   757,   758,   759,   760,   761,   566,   401,   619,   765,
     637,  3767,   440,   141,   619,   769,   543,   290,   572,   290,
    3776,   769,   576,   710,   120,   579,   722,   587,   501,   492,
    4580,   286,  4806,   628,   765,   589,   323,   769,   764,  4920,
     594,   610,   141,   597,   594,   764,    57,  4755,   448,   171,
     378,   323,   612,     7,   594,   717,   111,   614,   754,   755,
     756,   757,   758,   759,   760,   761,   378,     7,   628,   228,
     592,   764,  3767,   200,   765,   769,   765,   364,   197,   765,
     765,   765,   765,   370,   765,   356,  1597,   764,  1599,  1600,
     765,   415,   364,  1604,   757,  4926,   420,   345,   370,   764,
     373,   372,   373,   690,   765,  1616,   765,   765,  1619,  1620,
     765,  1622,   765,   769,  1625,  1626,  1627,  1628,   769,   765,
    5001,  1632,   765,   765,    77,   769,  1637,   765,   764,   770,
     226,  1642,  1643,  1644,  1645,  1646,   761,   764,   770,  1650,
    1651,  3897,   770,    21,   764,  1656,  1657,  1658,  1659,    27,
    1661,  1662,  3908,  1664,   764,   192,  1667,   765,   111,  1670,
     769,   287,    64,   770,    15,   420,   769,   768,   160,   287,
      21,   287,    74,   287,   287,   499,   287,   769,   769,  3935,
    3936,   378,   583,   635,  3926,  3941,    64,    89,    39,   236,
    3941,   583,    43,    71,   769,   519,   769,    75,   401,    77,
     583,   100,   756,   757,   769,   158,    57,    58,    13,   160,
     764,    89,   210,   769,   741,   742,   197,   345,   745,   746,
     747,   748,   197,   378,    27,   456,  3982,   583,   583,  5003,
     255,   754,   755,   756,   757,   758,   759,   760,   761,   335,
     564,  3997,   765,   339,   499,   569,   345,   125,   433,   194,
     346,   770,   770,   770,   770,   770,   504,   505,   249,   100,
     547,    64,   252,   587,   181,  4070,   769,   561,    71,  5188,
     758,   194,    75,   194,    77,   547,   600,   769,  4065,   514,
      60,   765,   235,   769,   405,  4041,    89,  4043,   612,  5188,
    4046,   193,  4097,  5212,  4050,   402,   194,   199,   404,   771,
     404,   572,   572,  4059,   628,   576,   572,   122,   579,   564,
     125,   566,   572,  5212,  4070,   160,  5235,   126,   589,   669,
     342,   594,   125,   594,   769,   203,   597,   770,  5036,   478,
     654,   427,   263,   235,   598,   263,  5235,  4093,   263,   238,
    5259,  4097,   403,   630,   764,   600,   707,    21,  5134,   378,
     673,   141,   249,    27,    28,   673,   160,   612,   630,   258,
    5259,   263,   160,   160,    35,  4910,   160,   160,   160,   322,
     709,   160,   271,   188,   160,   160,   504,   505,  4134,  4135,
     286,   160,   160,   141,   708,   263,   160,   340,   160,    63,
     160,    62,   160,   160,   160,   491,   160,   238,  4093,  4155,
     160,   160,   642,    77,   219,   504,   505,    77,   160,    83,
      84,   364,   160,    87,   160,   160,   160,   258,   160,   160,
     744,   160,   160,    93,  4180,   160,   160,  4155,   160,   160,
     271,   160,   160,   160,   654,   465,   378,   111,   764,  4134,
     765,   112,   154,   765,   115,   245,   245,   572,   765,  4205,
     770,   125,   123,   708,   765,   129,   355,   765,   385,   249,
     263,  4217,   749,   769,   134,  4207,   765,   765,   583,  5257,
     770,   142,   572,   655,   572,   290,   764,   749,   769,   378,
     770,   770,   156,   197,   158,   756,   757,   770,   366,   367,
     583,   249,   731,   764,   372,   764,   764,   212,    35,   401,
     378,   733,   769,   728,   433,   197,   754,   755,   756,   757,
     758,   759,   760,   761,   355,   428,   418,   765,   189,   197,
     765,   615,  4217,   336,   156,   769,   764,   764,  4284,   555,
     764,    12,   404,   404,  4290,   160,   632,   378,   456,   406,
     418,   769,  4298,    73,   533,  5238,  5096,  4303,  4304,   533,
     533,   533,   378,  4309,   650,   345,   533,   231,   373,   492,
    4302,   235,   764,   366,   367,   263,   263,   615,   242,   372,
     116,   117,   118,   119,   120,   378,   764,   592,   477,  4335,
     367,   637,   769,   769,   564,   564,  5131,   345,   262,   260,
     583,   373,   451,  4349,   547,   265,   583,  4402,   765,   765,
     769,   275,   378,   378,   764,   212,   764,   572,   473,    62,
     764,   564,   764,   764,   764,   418,   764,   519,   765,   497,
     764,   158,   764,   764,   764,   162,   754,   755,   756,   757,
     758,   759,   760,   761,  4390,   247,   477,   765,  4394,   247,
    5190,   414,  4447,   721,    48,   765,  4402,   495,   322,   688,
     549,   285,   769,   765,   764,   754,   755,   756,   757,   758,
     759,   760,   761,   765,   765,   202,   340,   688,    12,   547,
     765,   547,   769,   343,   160,   758,   385,   223,   224,   225,
     226,   769,   231,   354,   643,   222,   357,   160,   161,  5239,
     282,  4447,   764,   160,   497,   197,   366,   367,   769,   369,
     258,   765,   604,   765,   258,   765,  5251,   765,   549,   391,
      48,   765,   217,   103,   504,   505,   615,   373,    48,   160,
     615,   395,   764,   160,   764,  2236,   604,   401,   201,  4485,
     404,  4487,  4488,   498,   228,  5280,   103,  4479,   245,   160,
     278,   214,   770,    64,   547,   186,   504,   505,   111,    56,
     287,   111,   162,    74,   764,   401,   764,   730,  4514,    66,
     201,   431,   764,   764,   435,   764,   441,  4523,    89,    76,
     764,   125,   125,   214,   615,   566,  3248,   765,  3250,   594,
     756,   254,   456,    90,    91,    92,  4563,   583,   384,   335,
     404,   337,   338,   339,   267,   764,   378,   516,   378,   106,
     346,   604,   373,   765,   765,   765,   637,  4563,   765,   483,
     765,   401,   197,     4,  4570,  2326,   765,   433,   210,   493,
     583,   294,    21,   378,   269,   266,   267,   678,   706,  4585,
      21,  4587,   683,   246,   769,   765,   770,   769,   509,   197,
     258,   743,  2353,   258,   258,   698,   383,   404,    39,   277,
     774,    48,   730,   294,   774,   774,   404,   153,    48,  2370,
      48,    48,   713,   533,   758,   743,   540,   541,   542,    35,
      35,   764,   193,   547,   730,  4570,   626,   125,   729,   609,
     263,   427,   419,   263,    64,   203,   359,   263,  4644,    35,
     564,   373,   566,   567,  2405,  2406,   764,   373,   373,   416,
     378,   378,  2413,   706,    77,    21,   443,   770,   579,   764,
     516,   765,   488,   765,   235,   342,   765,  4673,  4674,   769,
     265,   765,   363,   765,   428,   765,   765,   730,  4731,   603,
     765,   468,   765,   769,   785,   786,   607,   788,   789,   769,
     743,    48,   263,   175,   490,   491,   620,   385,   388,   285,
     801,   210,    21,   147,   765,   566,   258,   258,   764,   769,
     120,   120,   764,   637,   754,   755,   756,   757,   758,   759,
     760,   761,    48,    48,  4730,   512,   417,   765,    48,   388,
     620,   764,   373,  2494,   637,  4741,   368,    15,   621,    21,
      81,   511,   769,   143,   373,   764,   754,   755,   756,   757,
     758,   759,   760,   761,  4760,   228,   543,   769,   404,   765,
     194,   373,   769,    56,   342,   173,   765,    48,  4774,   385,
     263,    21,   194,    66,   276,   319,   563,   334,   764,   566,
     770,   744,  4819,    76,   637,   674,   769,   398,    48,   765,
     764,   473,   765,   894,   351,   149,   637,    90,    91,    92,
     609,   725,   769,   136,   765,   765,   764,   136,   765,   765,
     764,   764,  4818,   106,  4820,   764,   574,   378,   764,   764,
     136,  4827,  4828,   764,   158,   749,  4832,   538,   765,   769,
     401,   484,   484,   692,   935,   679,   632,   692,   692,   654,
     764,  4847,    48,   767,    48,   764,   535,   418,   949,   555,
     155,  4857,   634,   649,   650,    32,   771,    64,  3580,  3581,
     385,   962,  4868,  3585,    64,    19,   703,  4873,   482,   554,
     765,   634,    32,   197,   385,   385,   143,   765,   134,   692,
     228,  4878,   484,   689,   702,     6,  4878,   378,  4878,   465,
     378,   246,  4945,   154,   767,    48,   171,   609,  4904,  3621,
     130,  4956,   154,   230,  4959,  3627,  3628,  3629,   292,   124,
    3632,   771,   634,   231,   703,   472,   767,    54,   575,   143,
     767,   373,   154,   215,   575,   764,   769,   501,  4926,   767,
      54,   154,   489,   378,   455,    15,   194,   194,   575,   194,
     636,   125,   769,   378,  4999,   378,   162,   196,   699,  3162,
    4956,  4878,  3360,  4959,   741,   742,  3156,  3158,   745,   746,
     747,   748,  4487,  3160,  3153,  4483,  4972,  4490,  3744,  1107,
    4498,  3556,  4512,  5082,  4795,  1076,  5083,  4908,  1593,  4695,
    4514,  5280,  5231,    46,  2752,  3897,  2686,  5247,  5143,  5052,
    4781,   966,  4781,  4999,   551,  5143,  5129,  5078,  1099,  4781,
    5077,  4781,  3753,  2319,  1062,  4781,  4781,  4781,  4781,  1110,
    1111,   568,  4781,  5019,  4781,  2325,  3356,  4781,  1119,  1120,
    1121,  1122,  1123,  1124,  4781,  4781,  4039,  4186,  2481,  4207,
    3223,  1132,  1133,  3218,  1135,  1136,  3217,  3992,  4601,  1140,
    1141,   334,  4781,  1144,  1145,  1146,  1147,  5026,  1149,  1150,
    4387,  5105,  5105,  4755,  5036,  5038,  1157,  1158,   351,  1160,
    1161,  1162,  1163,  1164,  2410,  3774,  1167,  1168,  1169,  1170,
    1171,  1172,  1173,  1174,  1175,  4059,  1177,  2479,  4110,  1180,
    1181,  4060,  3212,  3599,  1185,  3632,  3631,  4416,  1189,  1190,
    1191,  5048,  4113,  4819,  3314,  4759,  2333,  4619,  4677,  4996,
    4682,  1202,  1203,  1204,  4631,  3005,  1207,  4623,  1747,  1210,
    1211,  1212,  1213,  1214,  1215,  3017,  4394,  4086,  3759,  2903,
    3196,  2896,  4464,    18,    19,  4781,  1572,  2410,  1229,  1230,
    2411,  2411,  4871,  4872,  2206,   971,  1237,  2202,  1239,  1240,
    3662,  2742,  5148,  1722,  3025,  2736,  1697,  3382,  3122,  5155,
    1251,  1252,  1253,  5208,  1255,  1256,  2717,  3913,  1259,  1260,
    1261,    63,  5059,  1264,  1265,  1266,  1267,  1268,  1269,  1270,
    1271,  2088,   936,   935,  1275,  1954,  1894,  5074,  2274,  1280,
    2646,  3327,  5188,  4729,  5003,  1230,  2527,  4926,  5194,  5096,
    5087,  4711,  5218,  5199,  1295,  2762,   489,  2958,  5219,  1151,
    2762,  4328,  5208,  4589,  2762,  2762,  5212,  4827,  5019,  3683,
    3969,  4781,  4828,  1125,   985,  4871,  4872,  1483,  4337,  4730,
    4551,   116,   117,   118,   119,   120,  3656,  1328,  3439,  5235,
    4706,  4618,  2281,    16,  1964,  2653,  3381,  1049,  1049,  1336,
    4979,  4980,  3381,  4306,  3932,  5251,  1481,  3379,  4289,  5146,
    2152,  4298,  1049,  5259,  1046,  1049,   965,  4996,   551,  5156,
    2841,  2674,  1571,  2061,  5161,  5257,  2842,  5257,  2178,  3087,
    4926,  5016,  3385,  4022,  5280,   568,  4378,  5235,  5259,  4129,
    4303,  1382,  5095,  4592,  2947,  4201,  2110,  3150,  1389,  1233,
    5011,  1418,  2808,    43,    43,  2125,  1416,  2105,  5195,   921,
    5197,  4871,  4872,    27,    28,    39,  2103,  1328,  2720,  2891,
    2492,  4560,  2493,  1521,  4713,   924,  1378,    11,    11,  1420,
    5059,  1422,  1040,  4979,  4980,  4145,  5223,  3762,   223,   224,
     225,   226,  1107,  1107,  1107,  5074,  5027,    61,    62,    63,
    4996,  4507,  4204,  3673,    -1,  3106,    -1,    71,  5087,    -1,
      -1,    -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    83,
      84,    -1,    -1,    87,    -1,    -1,    -1,    -1,  5265,  5266,
      -1,    -1,    -1,  5270,    -1,    -1,    -1,  5116,    -1,  1480,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   111,    -1,  5128,
    5129,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1499,    -1,
      -1,   125,    -1,  5059,    -1,   129,    -1,  5146,    -1,  4979,
    4980,    -1,  3173,  3174,  3175,  3176,    -1,  5156,  5074,    -1,
      -1,    -1,  5161,    -1,    -1,    -1,  4996,    -1,    -1,    -1,
      -1,  5087,    -1,    -1,   158,    -1,  5175,    -1,  5177,    -1,
     335,    -1,   337,   338,   339,    -1,    -1,    -1,  1549,    -1,
     891,   346,    -1,    -1,  5193,    -1,  5195,    -1,  5197,    -1,
    5116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5128,  5129,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5223,    -1,    -1,    -1,    -1,  5059,
    5146,    -1,   387,    -1,    -1,   390,    -1,    -1,    -1,    -1,
    5156,    -1,    -1,    -1,  5074,  5161,  5245,  5246,   949,    -1,
      -1,   235,    -1,    -1,    -1,    -1,    -1,  5087,   242,  5175,
      -1,  5177,    -1,    -1,    -1,    -1,  5265,  5266,    -1,    -1,
      -1,  5270,   427,    -1,    -1,    -1,   977,  5193,   262,  5195,
      -1,  5197,    -1,    -1,    -1,    -1,  5116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5128,  5129,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5223,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5146,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5156,    -1,    -1,  5245,
    5246,  5161,    -1,    -1,    -1,   490,   491,    -1,   322,    -1,
      -1,    -1,    -1,   683,    -1,  5175,    -1,  5177,    -1,  5265,
    5266,    -1,    -1,    -1,  5270,    -1,   340,    -1,    -1,    -1,
      -1,    -1,    -1,  5193,    -1,  5195,    -1,  5197,    -1,    -1,
      -1,    -1,    -1,   713,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   729,
      -1,    -1,    -1,  5223,    -1,    -1,    -1,    -1,  1099,    -1,
      -1,    -1,    -1,    -1,    -1,    27,    28,    -1,    -1,    -1,
      -1,   395,    -1,  1774,    -1,  5245,  5246,  1778,    -1,    -1,
     404,    -1,    -1,    -1,    -1,  1786,    -1,  1788,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5265,  5266,    -1,    -1,    -1,
    5270,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   789,
      -1,    -1,    -1,    -1,    -1,    77,    -1,    -1,    -1,    -1,
      -1,    83,    84,    -1,    -1,    87,    -1,  1828,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   632,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   111,
      -1,    -1,    -1,   648,   649,   650,    -1,    -1,    -1,   483,
      -1,    -1,    -1,   125,    -1,    -1,    -1,   129,    -1,    -1,
      -1,  1872,  1873,  1874,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   158,    -1,    -1,    -1,
      -1,  1902,    -1,    -1,    -1,    -1,  1907,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   894,    -1,   540,   541,   542,    -1,
      -1,    -1,    -1,   547,    -1,  1926,    -1,    -1,    -1,    -1,
      -1,    -1,  1933,    -1,    -1,    -1,    -1,  1938,    -1,  1940,
     564,    -1,    -1,   567,    -1,  1946,    -1,  1948,  1949,   232,
      -1,    -1,    -1,    -1,  1295,   935,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   235,    -1,    -1,    -1,    -1,    -1,   603,
     242,    -1,    -1,    -1,    -1,    -1,    -1,  1328,    -1,    -1,
      -1,    -1,    -1,  1334,    -1,    -1,    -1,    -1,    -1,    -1,
     262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1349,    -1,
      -1,    -1,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,    -1,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,    -1,   317,   318,    -1,    -1,    -1,    -1,
      -1,  1382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     322,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3732,  3733,    -1,    -1,    -1,    -1,    -1,   340,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   725,    -1,    -1,    -1,    -1,  2107,    -1,    -1,  2110,
      -1,    -1,    -1,    -1,    -1,    -1,  2117,  2118,    -1,    -1,
      -1,  2122,    -1,    -1,  2125,   749,    -1,  2128,    -1,    -1,
    1110,  1111,    -1,   395,    -1,    -1,    -1,  2138,    -1,  1119,
    1120,    -1,   404,  1123,  1124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1132,  1133,    -1,  1135,  1136,    -1,    -1,    -1,
    1140,    -1,   445,   446,  1144,  1145,  1146,  1147,    -1,  1149,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1157,  1158,    -1,
    1160,  1161,    -1,    -1,    -1,    -1,    -1,  1167,    -1,    -1,
    1170,  1171,  1172,  1173,  1174,  1175,    -1,  1177,    -1,    -1,
    1180,  1181,    -1,    -1,    -1,  1185,    -1,    -1,    -1,  1189,
    1190,  1191,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   483,  1202,  1203,  1204,    -1,    -1,    -1,    -1,    -1,
    1210,  1211,  1212,  1213,  1214,    -1,    -1,    -1,    -1,    14,
      -1,    -1,    17,  2244,    -1,    -1,    -1,    -1,    -1,  1229,
    1230,    -1,    -1,    -1,    -1,    -1,    -1,  1237,    -1,  1239,
    1240,    36,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    50,    51,    -1,   540,   541,
     542,    -1,    -1,    58,    -1,   547,    -1,    -1,    63,    64,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1280,    -1,   564,    -1,    79,   567,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2317,    -1,    -1,  2320,
    2321,    -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   603,    -1,    -1,    -1,    -1,   121,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   131,   132,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   143,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   170,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1389,
      -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   711,   712,
    2431,    -1,    -1,   208,    -1,   210,    -1,    -1,    -1,    -1,
     215,    -1,  1422,   218,    -1,    -1,    -1,    -1,    -1,   732,
      -1,   734,   735,   736,   737,   738,    -1,    -1,   233,    -1,
      -1,    -1,    -1,   725,    -1,    -1,   241,    -1,    -1,   244,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   749,    -1,   264,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1480,    -1,    -1,    -1,    -1,    -1,   281,  2508,    -1,    -1,
     285,    -1,    -1,    -1,    -1,    -1,  2517,  2518,    -1,  1499,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2537,  2538,    -1,  2540,
      -1,    -1,  2543,  2544,  2545,  2546,  2547,    -1,    -1,  2550,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2559,    -1,
      -1,    -1,    -1,  2564,    -1,  2566,    -1,  2568,  2569,  1549,
    2571,  2572,    -1,    -1,    -1,  2576,  2577,  2578,    -1,    -1,
      -1,  2582,  2583,  2584,    -1,  2586,    -1,  2588,    -1,  2590,
      -1,  2592,    -1,  2594,    -1,    -1,    -1,    -1,  2599,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   382,    -1,    -1,
      -1,    -1,    -1,    -1,  2615,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2632,    -1,  2634,    -1,  2636,    -1,    -1,    -1,  2640,
     415,    -1,    -1,    -1,    -1,  2646,  2647,    -1,    -1,    -1,
      -1,   426,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   448,    -1,    -1,   451,    -1,   453,    -1,
      -1,   456,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   466,   467,    -1,  2035,  2036,    -1,    -1,    -1,    -1,
      -1,   476,    -1,   478,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   487,    -1,    -1,    -1,    -1,    -1,   493,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   501,    -1,    -1,    -1,
    2731,   506,   507,   508,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   539,    -1,  2107,    -1,    -1,  2110,
      -1,   546,    -1,    -1,    -1,    -1,    -1,    -1,  2779,  2780,
    2781,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   566,    -1,    -1,  1774,    -1,    -1,    -1,  1778,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2808,  1788,    -1,
      -1,    -1,    -1,    -1,    -1,   590,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   602,    -1,    -1,
      -1,   606,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   614,
      -1,    -1,    -1,    -1,    -1,   620,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2857,    -1,    -1,    -1,
      -1,    -1,   637,    -1,    -1,    -1,  2867,    -1,  2869,    -1,
     645,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1872,  1873,  1874,    -1,    -1,    -1,    -1,    -1,
      -1,   676,    -1,  2244,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2260,
      -1,  2262,    -1,  2264,  2265,    -1,  2267,  1907,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    21,    -1,   713,  2940,
      -1,    -1,    27,    28,    -1,    -1,  1926,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1938,    -1,
    1940,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4629,    -1,
      -1,    -1,    -1,  2314,    -1,    -1,    -1,  2318,    63,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   764,
      -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    83,    84,
      -1,    -1,    87,    -1,    -1,    -1,    -1,  2348,  2349,  2350,
    2351,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2380,
     125,    -1,    -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   156,    -1,   158,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4747,    -1,    -1,  4750,
    4751,  4752,  4753,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    34,    35,
      -1,    -1,    -1,    -1,    40,    -1,    42,    -1,    44,    45,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    62,    -1,  2118,    -1,
      -1,    -1,  2122,    -1,    -1,    -1,   231,    -1,    -1,    -1,
     235,    -1,    -1,    -1,    -1,    -1,    -1,   242,  2138,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4833,    -1,    -1,    -1,    -1,   262,    -1,    -1,
      -1,  4842,  4843,    -1,    -1,    -1,   112,    -1,    -1,   115,
    4851,    -1,    -1,  3194,    -1,    -1,    -1,   123,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   142,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3232,    -1,   159,    -1,    -1,    -1,   322,    -1,  3240,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   340,    -1,    -1,    -1,    -1,
      -1,   187,    -1,   189,    -1,    -1,  3267,  3268,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   205,
     206,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3293,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3303,    -1,  3305,    -1,  3307,    -1,    -1,    -1,
     395,    -1,    -1,    -1,    -1,    -1,   401,    -1,    -1,   404,
      -1,   247,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   260,    -1,    -1,  3338,    -1,    -1,
      -1,    -1,  3343,    -1,  3345,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   279,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   288,   289,    -1,   291,    -1,    -1,    -1,    -1,
      -1,   456,    -1,    -1,    -1,    -1,    -1,    -1,  3379,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2732,    -1,    -1,    -1,    -1,    -1,    -1,   483,    -1,
      -1,    -1,   328,   329,   330,    -1,    -1,    -1,   493,    -1,
      -1,    -1,    -1,    -1,  3415,    -1,    -1,    -1,    -1,    -1,
      -1,   347,   348,   349,    -1,    -1,    -1,    -1,   354,    -1,
      -1,   357,    -1,    -1,    -1,    -1,    -1,    -1,  2779,  2780,
    2781,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,
     376,  2431,    -1,    -1,  3455,   540,   541,   542,    -1,    -1,
      -1,    -1,   547,    -1,    -1,    -1,    -1,    -1,    -1,  2810,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   564,
      -1,   566,   567,   409,   410,    -1,    -1,  3488,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   435,
      -1,    -1,    -1,    -1,  2855,    -1,    -1,    -1,   603,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2508,    -1,
      -1,    -1,    -1,    -1,    -1,   620,    -1,  2517,  2518,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   637,    -1,    -1,    -1,    -1,  2537,  2538,    -1,
    2540,  3562,    -1,  2543,  2544,  2545,  2546,  2547,    -1,    -1,
      -1,   497,    -1,    -1,    -1,   501,    -1,    -1,    -1,  2559,
      -1,    -1,    -1,    -1,  2564,  2926,  2566,   513,  2568,  2569,
      -1,  2571,    -1,    -1,    -1,    -1,  2576,  2577,  2578,    -1,
      -1,    -1,  2582,  2583,  2584,    -1,  2586,    -1,  2588,    -1,
    2590,    -1,  2592,    -1,  2594,    -1,    -1,    -1,  2959,  2599,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2970,
      -1,  2972,  2973,  2974,  2975,    -1,  2977,  2978,    -1,    -1,
     725,    -1,    -1,    -1,    -1,    -1,    -1,   573,    -1,    -1,
     576,    -1,    -1,   579,   580,   581,   582,    -1,    -1,    -1,
    2640,    -1,    -1,    -1,   749,    -1,  2646,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   764,
      -1,    -1,   767,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3034,    -1,    -1,   622,   623,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3047,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   650,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3750,
    3751,  2731,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3126,    -1,    -1,  3129,  3130,
    3791,    -1,  3133,  3134,  3135,  3136,  3137,  3138,  3139,  3140,
      -1,    -1,  3143,    -1,  3145,    -1,  3147,  3148,    -1,    -1,
    3151,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3822,    -1,  3824,    -1,    -1,  3827,  3828,    -1,  3830,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3841,    -1,    -1,   769,    -1,  3846,    -1,    -1,  3849,    -1,
      -1,  3852,  3853,  3194,    -1,    -1,    -1,    14,    -1,    -1,
      17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3874,    -1,    32,    -1,  2857,    -1,    36,
      -1,    -1,    -1,    35,    36,  3886,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    50,    51,    -1,    -1,    -1,    -1,    -1,
      -1,    58,    -1,    -1,    -1,    -1,    63,    64,    -1,    61,
      62,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      72,    73,    79,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3932,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    99,    -1,    -1,    97,    -1,    99,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,    -1,    -1,
    2940,    -1,    -1,    -1,   121,  3966,  3967,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   131,   132,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3985,    -1,   143,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   156,
      -1,    -1,    -1,    -1,    -1,   157,   158,    -1,    -1,    -1,
      -1,   163,    -1,   170,   166,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   176,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   190,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   198,    -1,   200,    -1,
    4051,   208,    -1,   210,    -1,    -1,    -1,   209,   215,   211,
      -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   241,    -1,    -1,   244,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   264,    -1,    34,
      35,    -1,    -1,    -1,    -1,    40,    -1,    42,    -1,    44,
      45,    -1,    -1,    -1,   281,    -1,    -1,    -1,   285,    -1,
     282,    -1,    -1,    -1,    -1,    -1,    -1,    62,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4152,  4153,    -1,    -1,    -1,    -1,  3498,    -1,    -1,
      -1,    -1,    -1,    -1,   316,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3517,    -1,    -1,    -1,
      -1,    -1,    -1,  4184,  4185,    -1,    -1,   112,    -1,    -1,
     115,  3532,    -1,    -1,    -1,    -1,    -1,    -1,   123,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   142,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   382,    -1,    -1,    -1,   381,
      -1,    -1,    -1,    -1,   159,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3232,    -1,    -1,    -1,   408,    -1,   415,    -1,
    3240,    -1,   187,    -1,   189,    -1,    -1,   419,   420,   426,
     422,   423,   424,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     205,   206,    -1,    -1,    -1,    -1,    -1,  3267,  3268,    -1,
      -1,   448,   444,    -1,   451,    -1,   453,    -1,  4299,   456,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,
     467,    -1,    -1,  3293,    -1,    -1,    -1,    -1,  4319,   476,
    4321,   478,   247,  3303,    -1,  3305,    -1,  3307,    -1,    -1,
     487,    -1,    -1,    -1,    -1,   260,   493,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   501,    -1,   498,    -1,    -1,   506,
     507,   508,    -1,    -1,   279,    -1,    -1,    -1,    -1,   511,
      -1,    -1,    -1,   288,   289,    -1,   291,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   539,    -1,  3725,    -1,    -1,    -1,    -1,   546,
      -1,   543,    -1,    -1,    -1,   547,    -1,    -1,    -1,  3379,
      -1,    -1,    -1,   328,   329,   330,    -1,    -1,  3749,   566,
      -1,   563,    -1,    -1,   566,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   347,   348,   349,    -1,    -1,    -1,    -1,   354,
      -1,  4432,   357,   590,   586,  3415,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   602,    -1,    -1,    -1,   606,
     375,   376,    -1,    -1,    -1,    -1,    -1,   614,    -1,    -1,
    4461,    -1,    -1,   620,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   624,    -1,    -1,  3455,    -1,    -1,    -1,   631,
     637,    -1,    -1,    -1,   409,   410,    -1,    -1,   645,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   661,   662,   663,   664,    -1,    -1,
     435,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   676,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4535,    -1,    -1,  4538,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     7,    -1,
    4551,    -1,    -1,    12,    -1,    14,   713,    -1,    17,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    27,    28,
      -1,    -1,   497,    -1,    -1,    -1,   501,    -1,    -1,    -1,
      -1,    -1,  3562,    -1,    -1,    -1,    -1,    -1,   513,    -1,
     742,  4592,    -1,   745,   746,   747,   748,    -1,   750,    58,
      -1,    -1,    61,    62,    63,    64,    -1,   764,    -1,    -1,
      69,    -1,    71,    -1,    -1,    -1,    -1,    -1,    77,    -1,
      -1,    -1,    -1,    -1,    83,    84,    -1,    -1,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   573,    -1,
      -1,   576,   111,    -1,   579,   580,   581,   582,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   125,    -1,    -1,    -1,
     129,    -1,    -1,    -1,    -1,    -1,  4017,    -1,   137,   138,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   152,    -1,    -1,    -1,   622,   623,   158,
      -1,    -1,    -1,    -1,    -1,  4706,    -1,    -1,    -1,    -1,
     169,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   650,    -1,    -1,    -1,    -1,
    4731,    -1,    -1,   192,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4099,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   233,  4776,   235,    -1,    -1,    -1,
    4781,    -1,    -1,   242,    -1,    -1,  4787,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   262,    -1,    -1,    -1,  4808,    -1,    -1,
      -1,  3791,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   285,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3822,    -1,  3824,    -1,    -1,  3827,  3828,  4190,
    4191,  4192,  4193,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4201,  3841,    -1,   322,  4865,    -1,  3846,    -1,    -1,  3849,
    4871,  4872,  3852,  3853,  4215,    -1,    -1,    -1,    -1,    -1,
      -1,   340,    -1,    -1,    -1,   344,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3874,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4913,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   382,    -1,  4926,    -1,    -1,    -1,   388,
      -1,    -1,    -1,    -1,    -1,    -1,   395,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4945,   404,    -1,    -1,    -1,    -1,
      -1,    -1,  3932,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4965,    -1,  4967,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4977,   436,  4979,  4980,
      -1,    -1,    -1,    -1,    -1,    -1,  3966,  3967,    -1,    -1,
      -1,    -1,   451,   452,   453,  4996,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3985,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4357,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   483,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5057,    -1,  5059,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4051,    -1,  5074,  5075,    -1,    -1,    -1,    -1,    -1,
      -1,   540,   541,   542,    -1,    -1,  5087,    -1,   547,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5105,   564,    -1,    -1,   567,    -1,
      -1,    -1,    -1,    -1,  5115,  5116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5128,  5129,    -1,
      -1,   590,    -1,    -1,    -1,    -1,  4477,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   603,  5146,    -1,    -1,    -1,  4490,
      -1,    -1,  5153,    -1,    -1,  5156,    -1,    -1,    -1,    -1,
    5161,    -1,    -1,    -1,    -1,    -1,    -1,  5168,    -1,    -1,
    4511,    -1,  4152,  4153,  5175,    -1,  5177,    -1,   637,    -1,
      -1,   640,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5193,    -1,  5195,    -1,  5197,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5223,    -1,    -1,    -1,    -1,     7,    -1,    -1,
      -1,    -1,    12,    -1,    14,    -1,    -1,    17,    -1,    -1,
      -1,    -1,    -1,    -1,  5245,  5246,    -1,    27,    28,    -1,
      -1,  5252,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5260,
      -1,    -1,    -1,    -1,  5265,  5266,   725,   726,   727,  5270,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    -1,
      -1,    -1,    -1,    63,    64,    -1,    -1,  4628,    -1,    69,
     749,    -1,    -1,    -1,    -1,    -1,    -1,    77,    -1,    -1,
      -1,    -1,    -1,    83,    84,    -1,    -1,    87,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    96,    -1,    -1,  4299,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4319,
      -1,  4321,    -1,    -1,    -1,   125,    -1,    -1,    -1,   129,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   137,   138,    -1,
      -1,    -1,     7,    -1,   144,    -1,    -1,    12,    -1,    14,
      -1,    -1,   152,    -1,    -1,    -1,    -1,    -1,   158,    -1,
      -1,    -1,    27,    28,    -1,    -1,    -1,    -1,    -1,   169,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   192,    58,    -1,    -1,    -1,    -1,    63,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    83,    84,
      -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    96,  4432,   233,    -1,   235,    -1,    -1,    -1,    -1,
      -1,    -1,   242,    -1,    -1,    -1,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     125,  4461,   262,    -1,   129,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   137,    -1,    -1,    -1,    -1,    -1,    -1,   144,
    4841,    -1,    -1,    -1,    -1,   285,    -1,   152,    -1,    -1,
      -1,    -1,    -1,   158,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   322,    -1,    -1,    -1,    -1,   192,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4535,    -1,    -1,  4538,    -1,
     340,    -1,    -1,    -1,   344,    -1,    -1,    -1,    -1,    -1,
      -1,  4551,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4926,    -1,    -1,    -1,    -1,
     235,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,    -1,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,   388,  4950,
    4951,    -1,  4592,    -1,    -1,   395,    -1,   262,    -1,    -1,
      -1,    -1,    -1,    -1,   404,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   436,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   451,   452,   453,    -1,    -1,    -1,   322,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   340,    -1,    -1,    -1,   344,
      -1,    -1,    -1,   483,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4706,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   388,    -1,    -1,    -1,    -1,    -1,    -1,
     395,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,
     540,   541,   542,    -1,    -1,    -1,    -1,   547,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   564,    -1,    -1,   567,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4776,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   451,    -1,    -1,    -1,
     590,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   603,    -1,    -1,    -1,    -1,  4808,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   637,    -1,    -1,
     640,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4865,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   540,   541,   542,    -1,    -1,
      -1,    -1,   547,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   564,
      -1,    -1,   567,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4913,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   725,   726,   727,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   603,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   749,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4965,    -1,  4967,    -1,    -1,
      -1,    -1,   637,    -1,    -1,   640,    -1,  4977,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5057,    -1,    -1,
     725,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5075,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   749,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5115,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,  5153,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,  5168,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,  5252,    -1,    -1,   135,   136,   137,   138,   139,
    5260,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,   192,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,   378,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,    -1,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,    -1,   676,   677,   678,   679,
     680,   681,    -1,   683,   684,   685,   686,   687,   688,   689,
      -1,   691,   692,   693,   694,   695,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,    -1,   744,   745,   746,   747,   748,   749,
     750,    -1,    -1,    -1,    -1,    -1,   756,   757,    -1,    -1,
      -1,    -1,   762,    -1,   764,    -1,    -1,    -1,   768,    -1,
      -1,    -1,   772,   773,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
      -1,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,   356,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,   477,   478,   479,   480,
     481,    -1,   483,   484,   485,   486,   487,   488,   489,    -1,
     491,   492,   493,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,    -1,   566,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,
     591,   592,    -1,   594,   595,   596,   597,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,   616,   617,   618,   619,   620,
     621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,   637,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,    -1,   676,   677,   678,   679,   680,
     681,    -1,   683,   684,   685,   686,   687,   688,   689,    -1,
     691,   692,   693,   694,   695,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,    -1,   744,   745,   746,   747,   748,   749,   750,
      -1,    -1,    -1,    -1,    -1,   756,   757,    -1,    -1,    -1,
      -1,   762,    -1,   764,    -1,    -1,    -1,   768,    -1,    -1,
      -1,   772,   773,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    46,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,   268,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,   477,   478,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,   584,   585,   586,    -1,   588,   589,   590,   591,
     592,    -1,   594,   595,   596,   597,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,   616,   617,   618,   619,   620,   621,
      -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,    -1,   676,   677,   678,   679,   680,   681,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,   691,
     692,   693,   694,   695,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,    -1,   744,   745,   746,   747,   748,   749,   750,    -1,
      -1,    -1,    -1,    -1,   756,   757,    -1,    -1,    -1,    -1,
     762,    -1,   764,    -1,    -1,    -1,   768,    -1,    -1,    -1,
     772,   773,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,   397,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,   477,   478,   479,   480,   481,    -1,
     483,   484,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,   588,   589,   590,   591,   592,
      -1,   594,   595,   596,   597,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,   616,   617,   618,   619,   620,   621,    -1,
      -1,   624,   625,    -1,   627,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,    -1,   676,   677,   678,   679,   680,   681,    -1,
     683,   684,   685,   686,   687,   688,   689,    -1,   691,   692,
     693,   694,   695,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
      -1,   744,   745,   746,   747,   748,   749,   750,    -1,    -1,
      -1,    -1,    -1,   756,   757,   758,    -1,    -1,    -1,   762,
      -1,   764,    -1,    -1,    -1,   768,    -1,    -1,    -1,   772,
     773,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,    -1,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,    -1,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,    -1,
     744,   745,   746,   747,   748,   749,   750,    -1,    -1,    -1,
      -1,    -1,   756,   757,   758,    -1,    -1,    -1,   762,    -1,
     764,    -1,    -1,    -1,   768,    -1,    -1,    -1,   772,   773,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,   197,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,    -1,   744,
     745,   746,   747,   748,   749,   750,    -1,    -1,    -1,    -1,
      -1,   756,   757,    -1,    -1,    -1,    -1,   762,    -1,   764,
      -1,    -1,    -1,   768,    -1,    -1,    -1,   772,   773,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,   197,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,   477,   478,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,   588,   589,   590,   591,   592,    -1,   594,   595,
     596,   597,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
     616,   617,   618,   619,   620,   621,    -1,    -1,   624,   625,
      -1,   627,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,    -1,
     676,   677,   678,   679,   680,   681,    -1,   683,   684,   685,
     686,   687,   688,   689,    -1,   691,   692,   693,   694,   695,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,    -1,   744,   745,
     746,   747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,
     756,   757,    -1,    -1,    -1,    -1,   762,    -1,   764,    -1,
      -1,    -1,   768,    -1,    -1,    -1,   772,   773,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
     197,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
     397,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
     477,   478,   479,   480,   481,    -1,   483,   484,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,   588,   589,   590,   591,   592,    -1,   594,   595,   596,
     597,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,
     617,   618,   619,   620,   621,    -1,    -1,   624,   625,    -1,
     627,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,    -1,   676,
     677,   678,   679,   680,   681,    -1,   683,   684,   685,   686,
     687,   688,   689,    -1,   691,   692,   693,   694,   695,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,    -1,   744,   745,   746,
     747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,   756,
     757,    -1,    -1,    -1,    -1,   762,    -1,   764,    -1,    -1,
      -1,   768,    -1,    -1,    -1,   772,   773,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,   477,
     478,   479,   480,   481,    -1,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
     588,   589,   590,   591,   592,    -1,   594,   595,   596,   597,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,
     618,   619,   620,   621,    -1,    -1,   624,   625,    -1,   627,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,    -1,   676,   677,
     678,   679,   680,   681,    -1,   683,   684,   685,   686,   687,
     688,   689,    -1,   691,   692,   693,   694,   695,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,    -1,   744,   745,   746,   747,
     748,   749,   750,    -1,    -1,    -1,    -1,    -1,   756,   757,
      -1,    -1,    -1,    -1,   762,    -1,   764,    -1,    -1,    -1,
     768,    -1,    -1,    -1,   772,   773,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,   477,   478,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,
     589,   590,   591,   592,    -1,   594,   595,   596,   597,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,   618,
     619,   620,   621,    -1,    -1,   624,   625,    -1,   627,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,    -1,   676,   677,   678,
     679,   680,   681,    -1,   683,   684,   685,   686,   687,   688,
     689,    -1,   691,   692,   693,   694,   695,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,    -1,   744,   745,   746,   747,   748,
     749,   750,    -1,    -1,    -1,    -1,    -1,   756,   757,    -1,
      -1,    -1,    -1,   762,    -1,   764,    -1,    -1,    -1,   768,
      -1,    -1,    -1,   772,   773,     5,     6,    -1,     8,     9,
      10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,    -1,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,    -1,   676,   677,   678,   679,
     680,   681,    -1,   683,   684,   685,   686,   687,   688,   689,
      -1,   691,   692,   693,   694,   695,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,    -1,   744,   745,   746,   747,   748,   749,
     750,    -1,    -1,    -1,    -1,    -1,   756,   757,    -1,    -1,
      -1,    -1,   762,    -1,   764,    -1,    -1,    -1,   768,    -1,
      -1,    -1,   772,   773,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
      -1,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,   356,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,   477,   478,   479,   480,
     481,    -1,   483,   484,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,
     591,   592,    -1,   594,   595,   596,   597,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,   616,   617,   618,   619,   620,
     621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,    -1,   676,   677,   678,   679,   680,
     681,    -1,   683,   684,   685,   686,   687,   688,   689,    -1,
     691,   692,   693,   694,   695,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,    -1,   744,   745,   746,   747,   748,   749,   750,
      -1,    -1,    -1,    -1,    -1,   756,   757,    -1,    -1,    -1,
      -1,   762,    -1,   764,    -1,    -1,    -1,   768,    -1,    -1,
      -1,   772,   773,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,   477,   478,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,   591,
     592,    -1,   594,   595,   596,   597,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,   616,   617,   618,   619,   620,   621,
      -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,    -1,   676,   677,   678,   679,   680,   681,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,   691,
     692,   693,   694,   695,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,    -1,   744,   745,   746,   747,   748,   749,   750,    -1,
      -1,    -1,    -1,    -1,   756,   757,    -1,    -1,    -1,    -1,
     762,    -1,   764,    -1,    -1,    -1,   768,    -1,    -1,    -1,
     772,   773,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,   397,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,   477,   478,   479,   480,   481,    -1,
     483,   484,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,   588,   589,   590,   591,   592,
      -1,   594,   595,   596,   597,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,   616,   617,   618,   619,   620,   621,    -1,
      -1,   624,   625,    -1,   627,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,    -1,   676,   677,   678,   679,   680,   681,    -1,
     683,   684,   685,   686,   687,   688,   689,    -1,   691,   692,
     693,   694,   695,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
      -1,   744,   745,   746,   747,   748,   749,   750,    -1,    -1,
      -1,    -1,    -1,   756,   757,    -1,    -1,    -1,    -1,   762,
      -1,   764,    -1,    -1,    -1,   768,    -1,    -1,    -1,   772,
     773,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,    -1,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,    -1,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,    -1,
     744,   745,   746,   747,   748,   749,   750,    -1,    -1,    -1,
      -1,    -1,   756,   757,    -1,    -1,    -1,    -1,   762,    -1,
     764,    -1,    -1,    -1,   768,    -1,    -1,    -1,   772,   773,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,    -1,   744,
     745,   746,   747,   748,   749,   750,    -1,    -1,    -1,    -1,
      -1,   756,   757,    -1,    -1,    -1,    -1,   762,    -1,   764,
      -1,    -1,    -1,   768,    -1,    -1,    -1,   772,   773,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,    -1,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,   477,   478,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,   588,   589,   590,   591,   592,    -1,   594,   595,
     596,   597,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
     616,   617,   618,   619,   620,   621,    -1,    -1,   624,   625,
      -1,   627,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,    -1,
     676,   677,   678,   679,   680,   681,    -1,   683,   684,   685,
     686,   687,   688,   689,    -1,   691,   692,   693,   694,   695,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,    -1,   744,   745,
     746,   747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,
     756,   757,    -1,    -1,    -1,    -1,   762,    -1,   764,    -1,
      -1,    -1,   768,    -1,    -1,    -1,   772,   773,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,    -1,   372,   373,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
     397,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
     477,   478,   479,   480,   481,    -1,   483,   484,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,   588,   589,   590,   591,   592,    -1,   594,   595,   596,
     597,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,
     617,   618,   619,   620,   621,    -1,    -1,   624,   625,    -1,
     627,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,    -1,   676,
     677,   678,   679,   680,   681,    -1,   683,   684,   685,   686,
     687,   688,   689,    -1,   691,   692,   693,   694,   695,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,    -1,   744,   745,   746,
     747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,   756,
     757,    -1,    -1,    -1,    -1,   762,    -1,   764,    -1,    -1,
      -1,   768,    -1,    -1,    -1,   772,   773,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,   493,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,   566,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,   620,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,   637,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,    -1,   744,   745,   746,   747,
     748,   749,   750,    -1,    -1,    -1,    -1,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,   764,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,   773,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,   145,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,    -1,   744,   745,   746,
     747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,   764,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,   773,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,    -1,   744,   745,
     746,   747,   748,   749,   750,    -1,    -1,    -1,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,   764,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,   773,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,    -1,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,    -1,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,
     266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,    -1,    -1,    -1,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,    -1,   454,   455,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
      -1,    -1,   468,   469,    -1,   471,   472,   473,   474,   475,
      -1,    -1,    -1,   479,   480,   481,    -1,   483,    -1,   485,
     486,    -1,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,    -1,   540,   541,   542,   543,    -1,    -1,
      -1,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,    -1,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
     636,    -1,    -1,    -1,   640,   641,   642,    -1,   644,    -1,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
      -1,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,    -1,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,    -1,    -1,   745,
     746,   747,   748,   749,   750,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   769,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    37,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
     589,   590,   591,   592,    -1,   594,   595,   596,   597,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,    -1,   744,   745,   746,   747,   748,
     749,   750,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   768,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   392,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
      -1,   744,   745,   746,   747,   748,   749,   750,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,   768,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,    -1,   744,   745,   746,
     747,   748,   749,   750,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,   768,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,    -1,   744,   745,   746,   747,   748,   749,   750,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,   768,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,    -1,   744,
     745,   746,   747,   748,   749,   750,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   768,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,    -1,   744,   745,   746,   747,   748,
     749,   750,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   768,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
      -1,   744,   745,   746,   747,   748,   749,   750,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,   768,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,    -1,   744,   745,   746,
     747,   748,   749,   750,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,   768,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,    -1,   744,   745,   746,   747,   748,   749,   750,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,   765,    20,    -1,   768,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,    -1,   744,
     745,   746,   747,   748,   749,   750,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   768,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,    -1,   744,   745,   746,   747,   748,
     749,   750,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   768,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
     493,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,   566,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,   620,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,   637,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
      -1,   744,   745,   746,   747,   748,   749,   750,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,   764,   765,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,    -1,   744,   745,   746,
     747,   748,   749,   750,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,   765,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,    -1,   744,   745,   746,   747,   748,   749,   750,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,   765,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,   199,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,   263,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
     275,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,   493,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,   519,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,   566,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,   620,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,   637,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,    -1,   744,
     745,   746,   747,   748,   749,   750,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,   764,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,    -1,   744,   745,   746,   747,   748,
     749,   750,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,   764,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
      -1,   744,   745,   746,   747,   748,   749,   750,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,   764,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,    -1,   744,   745,   746,
     747,   748,   749,   750,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,   764,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,    -1,   744,   745,   746,   747,   748,   749,   750,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,   764,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,    -1,   744,
     745,   746,   747,   748,   749,   750,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,   764,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,    -1,   744,   745,   746,   747,   748,
     749,   750,    -1,    -1,    -1,    -1,    -1,     5,     6,   758,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,    -1,   744,   745,   746,   747,
     748,   749,   750,    -1,    -1,    -1,    -1,    -1,     5,     6,
     758,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,    -1,   744,   745,   746,
     747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,     5,
       6,   758,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,    -1,   744,   745,
     746,   747,   748,   749,   750,    -1,    -1,    -1,    -1,    -1,
       5,     6,   758,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,    -1,   744,
     745,   746,   747,   748,   749,   750,    -1,    -1,    -1,    -1,
      -1,     5,     6,   758,     8,     9,    10,    11,    12,    13,
      14,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    99,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,   130,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
     144,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,   210,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,   285,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,    -1,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,   493,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,   506,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,   587,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,   609,   610,   611,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,    -1,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,    -1,
     744,   745,   746,   747,   748,   749,   750,     5,     6,    -1,
       8,     9,    10,    11,    12,    13,    14,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    99,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,   130,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,   144,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,   210,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,   285,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,    -1,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,   441,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,   493,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,   506,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,   587,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,   609,   610,   611,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
      -1,    -1,   710,   711,   712,    -1,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,    -1,   744,   745,   746,   747,
     748,   749,   750,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    14,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    99,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,   130,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,   144,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,   210,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,   285,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,    -1,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,    -1,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,   441,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,   493,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,   506,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,   587,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,   609,   610,   611,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,    -1,    -1,   710,   711,
     712,    -1,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,    -1,   744,   745,   746,   747,   748,   749,   750,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,    -1,    -1,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,   521,   522,   523,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,   594,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,    -1,   744,   745,
     746,   747,   748,   749,   750,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    18,    19,
      20,    21,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,   387,    -1,    -1,
     390,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,   648,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,    -1,   744,   745,   746,   747,   748,   749,
     750,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,   160,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,   502,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,    -1,
     744,   745,   746,   747,   748,   749,   750,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,   199,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,   263,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,   519,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,    -1,   744,   745,   746,   747,
     748,   749,   750,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,    -1,   744,   745,   746,   747,   748,   749,   750,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,   594,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,    -1,   744,   745,
     746,   747,   748,   749,   750,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,    -1,   744,   745,   746,   747,   748,   749,
     750,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
     104,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,    -1,
     744,   745,   746,   747,   748,   749,   750,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,   104,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,    -1,   744,   745,   746,   747,
     748,   749,   750,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    37,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,    -1,   744,   745,   746,   747,   748,   749,   750,     5,
       6,    -1,     8,     9,    10,    11,    12,    13,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,    -1,   744,   745,
     746,   747,   748,   749,   750,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,    -1,   744,   745,   746,   747,   748,   749,
     750,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,   372,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,    -1,
     744,   745,   746,   747,   748,   749,   750,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,    -1,   744,   745,   746,   747,
     748,   749,   750,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
     372,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,    -1,   744,   745,   746,   747,   748,   749,   750,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,    -1,   744,   745,
     746,   747,   748,   749,   750,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    95,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,   172,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,    -1,   744,   745,   746,   747,   748,   749,
     750,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,   522,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,    -1,
     744,   745,   746,   747,   748,   749,   750,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,   660,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,    -1,   744,   745,   746,   747,
     748,   749,   750,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    17,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,    -1,   744,   745,   746,   747,   748,   749,   750,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,    -1,   744,   745,
     746,   747,   748,   749,   750,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,    -1,   744,   745,   746,   747,   748,   749,
     750,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,    -1,
     744,   745,   746,   747,   748,   749,   750,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,    -1,   744,   745,   746,   747,
     748,   749,   750,     5,     6,    -1,     8,     9,    10,    11,
      12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,    -1,   744,   745,   746,   747,   748,   749,   750,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,    -1,   744,   745,
     746,   747,   748,   749,   750,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,   418,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,    -1,   744,   745,   746,   747,   748,   749,
     750,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,    -1,
     744,   745,   746,   747,   748,   749,   750,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,    -1,   744,   745,   746,   747,
     748,   749,   750,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,    -1,   744,   745,   746,   747,   748,   749,   750,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,    -1,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,    -1,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,    -1,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,    -1,   744,   745,
     746,   747,   748,   749,   750,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,    -1,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,    -1,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,    -1,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,    -1,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,    -1,   744,   745,   746,   747,   748,   749,
     750,     5,     6,    -1,     8,     9,    10,    11,    12,    13,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,    -1,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,    -1,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,    -1,   422,   423,
     424,    -1,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,    -1,   450,    -1,   452,   453,
     454,    -1,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,    -1,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,    -1,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,    -1,
     744,   745,   746,   747,   748,   749,   750,     5,     6,    -1,
       8,     9,    10,    11,    12,    13,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,    -1,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,    -1,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,    -1,   422,   423,   424,    -1,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,    -1,   450,    -1,   452,   453,   454,    -1,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
      -1,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
      -1,    -1,   710,   711,   712,    -1,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,    -1,   744,   745,   746,   747,
     748,   749,   750,     5,     6,    -1,     8,     9,    10,    11,
      12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,    -1,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,    -1,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,    -1,
     422,   423,   424,    -1,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,    -1,   450,    -1,
     452,   453,   454,    -1,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,    -1,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,    -1,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,    -1,    -1,   710,   711,
     712,    -1,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,    -1,   744,   745,   746,   747,   748,   749,   750,     5,
       6,    -1,     8,     9,    10,    11,    12,    13,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,    -1,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,    -1,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,    -1,   422,   423,   424,    -1,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,    -1,   450,    -1,   452,   453,   454,    -1,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,    -1,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,    -1,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,    -1,    -1,   710,   711,   712,    -1,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,    -1,   744,   745,
     746,   747,   748,   749,   750,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,    -1,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,    -1,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,    -1,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,    -1,   422,   423,   424,    -1,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,    -1,
     450,    -1,   452,   453,   454,    -1,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,    -1,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,    -1,    -1,
     710,   711,   712,    -1,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,    -1,   744,   745,   746,   747,   748,   749,
     750,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,   150,   151,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,    -1,
      -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,    -1,
     454,   455,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,
     474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,
      -1,   485,   486,    -1,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,   540,   541,   542,   543,
      -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,    -1,
      -1,   745,   746,   747,   748,   749,   750,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,   150,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,    -1,    -1,    -1,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,    -1,   454,   455,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,    -1,    -1,
     468,   469,    -1,   471,   472,   473,   474,   475,    -1,    -1,
      -1,   479,   480,   481,    -1,   483,    -1,   485,   486,    -1,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,
      -1,    -1,   510,    -1,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,   634,    -1,   636,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,    -1,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,    -1,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,    -1,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,    -1,    -1,   745,   746,   747,
     748,   749,   750,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    -1,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    54,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,   150,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
     292,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,    -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,    -1,   454,   455,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,    -1,    -1,   468,   469,    -1,   471,
     472,   473,   474,   475,    -1,    -1,    -1,   479,   480,   481,
      -1,   483,    -1,   485,   486,    -1,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,
     542,   543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,    -1,
      -1,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,   634,    -1,   636,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,    -1,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,    -1,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,    -1,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,    -1,    -1,   745,   746,   747,   748,   749,   750,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,    -1,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,
     266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,    -1,    -1,    -1,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,    -1,   454,   455,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
      -1,    -1,   468,   469,    -1,   471,   472,   473,   474,   475,
      -1,    -1,    -1,   479,   480,   481,    -1,   483,    -1,   485,
     486,    -1,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,    -1,   540,   541,   542,   543,    -1,    -1,
      -1,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,    -1,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
     636,    -1,    -1,    -1,   640,   641,   642,    -1,   644,    -1,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
      -1,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,    -1,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,    -1,    -1,   745,
     746,   747,   748,   749,   750,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
     270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,    -1,   454,   455,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,    -1,    -1,   468,   469,
      -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,   479,
     480,   481,    -1,   483,    -1,   485,   486,    -1,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,
     510,    -1,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,
     540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
      -1,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,   636,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,    -1,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,    -1,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,    -1,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,    -1,    -1,   745,   746,   747,   748,   749,
     750,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,    -1,
      -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,    -1,
     454,   455,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,
     474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,
      -1,   485,   486,    -1,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,   540,   541,   542,   543,
      -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,    -1,
      -1,   745,   746,   747,   748,   749,   750,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,    -1,    -1,    -1,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,    -1,   454,   455,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,    -1,    -1,
     468,   469,    -1,   471,   472,   473,   474,   475,    -1,    -1,
      -1,   479,   480,   481,    -1,   483,    -1,   485,   486,    -1,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,
      -1,    -1,   510,    -1,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,   636,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,    -1,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,    -1,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,    -1,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,    -1,    -1,   745,   746,   747,
     748,   749,   750,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    -1,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    54,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
     292,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,    -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,    -1,   454,   455,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,    -1,    -1,   468,   469,    -1,   471,
     472,   473,   474,   475,    -1,    -1,    -1,   479,   480,   481,
      -1,   483,    -1,   485,   486,    -1,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,
     542,   543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,    -1,
      -1,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,   636,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,    -1,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,    -1,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,    -1,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,    -1,    -1,   745,   746,   747,   748,   749,   750,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,    -1,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,    -1,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,
     266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,    -1,    -1,    -1,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,    -1,   454,   455,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
      -1,    -1,   468,   469,    -1,   471,   472,   473,   474,   475,
      -1,    -1,    -1,   479,   480,   481,    -1,   483,    -1,   485,
     486,    -1,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,    -1,   540,   541,   542,   543,    -1,    -1,
      -1,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,    -1,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
     636,    -1,    -1,    -1,   640,   641,   642,    -1,   644,    -1,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
      -1,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,    -1,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,    -1,    -1,   745,
     746,   747,   748,   749,   750,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,    -1,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
     270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,    -1,   454,   455,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,    -1,    -1,   468,   469,
      -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,   479,
     480,   481,    -1,   483,    -1,   485,   486,    -1,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,
     510,    -1,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,
     540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
      -1,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,   636,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,    -1,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,    -1,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,    -1,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,    -1,    -1,   745,   746,   747,   748,   749,
     750,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
      -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,    -1,
      -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,    -1,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,
      -1,   485,   486,    -1,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,   540,   541,   542,   543,
      -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,    -1,
      -1,   745,   746,   747,   748,   749,   750,    34,    35,    -1,
      -1,    -1,    -1,    40,    -1,    42,    -1,    44,    45,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    62,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   123,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   142,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   159,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     187,    -1,   189,    -1,    -1,    -1,    -1,   194,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   205,   206,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     247,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   260,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   288,   289,    -1,   291,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   328,   329,   330,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     347,   348,   349,    -1,    -1,    -1,    -1,   354,    -1,    -1,
     357,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,   376,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   409,   410,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   435,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     497,    -1,    -1,    -1,   501,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   513,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   573,    -1,    -1,   576,
      -1,    -1,   579,   580,   581,   582,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   622,   623,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   650
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    14,    17,    32,    36,    50,    51,    58,    63,    64,
      79,    99,   121,   131,   132,   143,   144,   156,   170,   190,
     208,   210,   215,   218,   233,   241,   244,   264,   281,   285,
     382,   415,   426,   448,   451,   453,   456,   466,   467,   476,
     478,   487,   493,   501,   506,   507,   508,   539,   546,   566,
     590,   602,   606,   614,   620,   637,   645,   661,   662,   663,
     664,   676,   713,   764,   776,   777,   780,   781,   782,   783,
     784,   786,   791,   793,   817,   818,   819,   820,   822,   825,
     848,   870,   877,   878,  1113,  1114,  1116,  1118,  1120,  1123,
    1125,  1126,  1127,  1128,  1129,  1131,  1132,  1166,  1167,  1168,
    1171,  1185,  1187,  1191,  1194,  1195,  1199,  1201,  1206,  1210,
    1216,  1217,  1218,  1219,  1220,  1221,  1222,  1227,  1228,  1350,
    1383,  1384,  1385,  1386,  1387,  1388,  1389,  1390,  1391,  1392,
    1393,  1394,  1395,  1396,  1397,  1398,  1399,  1407,  1408,  1429,
    1430,  1434,  1438,  1444,  1460,  1461,  1463,  1466,  1475,  1484,
    1488,  1490,  1491,  1556,  1558,  1560,  1582,  1589,  1591,  1592,
    1593,  1595,  1599,  1601,  1627,  1633,  1634,  1635,  1636,  1672,
    1679,  1680,  1682,  1683,    12,   108,   127,   200,   243,   286,
     420,   499,   564,   566,   600,   612,   708,  1646,  1647,  1648,
    1651,   282,   371,  1200,  1628,   572,  1531,   235,     5,     6,
       8,     9,    10,    11,    12,    15,    20,    23,    25,    26,
      27,    28,    29,    30,    32,    36,    40,    43,    44,    45,
      47,    49,    50,    53,    56,    57,    59,    60,    61,    63,
      65,    66,    67,    68,    69,    70,    72,    73,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    87,
      88,    90,    91,    92,    93,    94,    98,   103,   106,   110,
     111,   112,   115,   120,   121,   126,   127,   129,   135,   136,
     137,   138,   139,   143,   146,   147,   148,   152,   154,   155,
     157,   158,   159,   162,   163,   165,   166,   167,   168,   169,
     170,   173,   174,   175,   176,   177,   180,   181,   183,   184,
     185,   186,   187,   190,   191,   195,   196,   198,   202,   204,
     205,   206,   207,   209,   211,   215,   216,   218,   221,   222,
     226,   227,   228,   229,   232,   233,   234,   237,   242,   243,
     244,   248,   252,   253,   255,   256,   260,   262,   265,   266,
     269,   272,   273,   279,   280,   282,   284,   286,   287,   295,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   316,   317,
     318,   320,   321,   322,   323,   325,   326,   331,   332,   333,
     334,   335,   336,   339,   340,   342,   344,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   357,   358,   361,   362,
     363,   364,   365,   369,   370,   374,   376,   377,   379,   380,
     381,   384,   394,   395,   396,   398,   400,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   413,   415,   416,
     417,   419,   421,   422,   423,   424,   425,   427,   428,   429,
     432,   436,   437,   439,   440,   443,   444,   445,   446,   447,
     449,   450,   452,   453,   454,   457,   458,   459,   460,   461,
     462,   463,   464,   466,   468,   469,   471,   472,   473,   475,
     478,   479,   480,   481,   483,   485,   486,   487,   488,   489,
     491,   492,   496,   497,   498,   499,   503,   507,   509,   510,
     511,   512,   514,   515,   516,   517,   518,   524,   525,   526,
     528,   531,   534,   536,   538,   539,   540,   541,   542,   543,
     546,   547,   550,   551,   552,   553,   554,   555,   558,   559,
     560,   561,   563,   564,   567,   568,   569,   570,   573,   574,
     576,   577,   578,   579,   585,   586,   590,   591,   592,   595,
     596,   598,   599,   601,   602,   605,   608,   610,   612,   613,
     619,   621,   624,   628,   630,   631,   632,   633,   640,   641,
     642,   644,   645,   646,   647,   650,   653,   654,   655,   656,
     657,   659,   668,   669,   670,   672,   673,   674,   676,   679,
     681,   688,   689,   692,   694,   696,   697,   701,   702,   703,
     704,   705,   706,   707,   708,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   744,   745,   746,
     747,   748,   749,   750,   842,  1528,  1537,  1547,  1548,  1549,
    1551,  1552,  1555,   316,   457,   563,   566,  1585,  1585,   641,
    1629,   108,   199,   286,   390,   499,   519,   564,   569,   600,
     604,   612,   654,   708,   743,   744,  1089,  1090,  1403,  1643,
    1647,  1648,  1649,  1650,  1651,     8,    23,    29,    35,    37,
      38,    39,    41,    54,    55,    61,    62,    69,    72,    96,
      97,   102,   104,   107,   108,   113,   114,   115,   120,   122,
     125,   171,   178,   179,   188,   195,   205,   207,   213,   219,
     226,   230,   241,   245,   271,   279,   290,   319,   324,   335,
     339,   341,   345,   346,   347,   348,   349,   356,   366,   367,
     368,   372,   373,   397,   409,   410,   412,   427,   455,   456,
     475,   477,   484,   485,   491,   544,   545,   552,   556,   557,
     562,   572,   576,   577,   578,   579,   588,   589,   590,   594,
     597,   612,   616,   617,   618,   620,   625,   627,   632,   633,
     650,   665,   666,   671,   677,   678,   680,   683,   684,   685,
     686,   687,   691,   693,   695,   756,   757,   758,   762,   764,
     768,   772,   773,  1062,  1220,  1238,  1239,  1242,  1243,  1244,
    1246,  1250,  1253,  1255,  1256,  1257,  1258,  1259,  1266,  1267,
    1268,  1289,  1290,  1512,  1514,  1516,  1517,  1518,  1520,  1523,
    1525,  1528,  1537,  1638,  1640,   108,   167,   200,   235,   286,
     420,   499,   519,   564,   587,   600,   612,   628,   654,   708,
     744,  1403,  1537,  1200,   103,   536,   879,    13,    14,    99,
     130,   144,   167,   170,   183,   210,   235,   241,   274,   285,
     421,   425,   441,   449,   457,   493,   506,   507,   558,   587,
     609,   611,  1528,  1531,  1538,  1542,  1549,  1552,  1553,  1555,
    1605,  1606,  1526,  1537,   792,   566,   128,   220,   293,  1409,
     407,   659,    87,   428,  1489,   111,   235,   647,  1492,   243,
     563,  1583,  1585,  1200,  1537,  1485,   487,   612,  1585,  1200,
     128,   293,  1410,  1433,   653,  1476,   522,   867,   871,   872,
    1537,    13,   425,  1605,  1629,  1537,    13,   140,   220,   527,
     528,   530,   531,   532,   549,  1229,  1230,  1231,  1641,    61,
      62,   125,   209,   282,   352,   404,   498,   585,   653,   654,
     672,   708,   768,  1064,  1528,  1540,  1548,  1549,  1551,  1552,
    1554,  1557,  1567,  1572,  1573,  1445,   871,   204,   511,   585,
     204,   511,  1526,  1537,   566,  1439,   407,   659,   243,  1585,
    1590,  1537,   484,  1419,  1423,   660,  1351,  1352,  1537,    32,
      79,   154,   415,   437,   478,   539,  1675,  1246,  1537,  1528,
     401,   982,   764,  1639,  1640,   243,   282,  1217,  1218,  1220,
    1350,     0,   156,   778,   415,   104,   274,   612,  1139,  1531,
    1537,  1541,  1543,  1544,  1617,  1619,   608,  1169,  1183,   194,
     246,   285,  1232,  1233,  1381,   388,   603,  1363,  1364,   276,
     603,  1364,  1369,  1219,  1220,   130,   609,    17,   195,  1464,
    1526,   160,  1143,  1537,   160,   842,   449,   480,  1594,   212,
     842,  1541,  1537,  1526,   564,   230,  1402,   212,   167,  1122,
    1646,  1585,  1629,  1207,  1208,  1526,   764,   849,   770,   583,
     185,  1400,  1526,  1400,    19,  1630,   230,  1011,   235,   212,
     456,  1541,   235,   717,  1537,   564,   263,   743,  1011,  1011,
     212,   263,   604,  1011,   235,   566,  1642,  1642,  1646,  1651,
     764,   764,   764,  1253,   764,   764,   764,  1242,  1302,   764,
     764,   764,   764,   764,   764,   764,   764,  1241,  1241,   764,
    1049,   764,   764,   764,   572,   764,   764,   764,  1639,   764,
     764,   764,   764,   764,   764,   764,   764,   764,  1242,   764,
     764,   764,  1300,  1301,  1523,  1537,   764,   764,   764,   764,
     764,   764,   764,   764,   764,  1242,  1049,   764,   764,   764,
     764,   764,   764,   764,   764,   764,   764,   764,   764,   764,
     764,   764,   764,  1049,   572,   764,   764,   764,   572,   764,
     764,   764,    37,   219,   572,   764,  1241,  1049,  1049,   764,
     764,   764,   764,   764,   764,   764,   764,   764,   764,   764,
     764,   764,   764,   764,   764,   764,   764,   764,   764,  1253,
    1253,  1253,   620,  1218,  1220,  1242,   768,  1291,  1541,  1537,
     769,    18,    19,    21,   387,   390,   572,   648,  1240,  1247,
    1248,  1536,  1537,   160,   161,   201,   214,   254,   267,   294,
     359,  1251,    33,   141,   249,   275,   345,   366,   367,   442,
     504,   505,   517,   722,   754,   755,   756,   757,   758,   759,
     760,   761,  1249,  1253,    71,   389,   572,  1532,   259,   652,
     764,   770,  1402,  1402,  1402,  1537,   212,  1402,  1402,   717,
    1537,  1402,   564,  1402,  1402,  1402,   212,  1402,  1585,   787,
    1467,   135,   419,  1604,   481,   481,   564,   569,   612,   628,
     654,   654,   385,   764,  1620,   563,   378,  1620,    67,   511,
    1620,   109,   628,  1620,   768,  1620,   378,   583,   769,   381,
      68,   433,   770,  1541,   197,   231,  1162,  1537,  1531,  1681,
    1242,   246,    85,   293,  1494,   194,   194,  1584,  1585,   197,
      35,   316,   741,  1450,  1486,  1537,  1203,  1544,  1202,  1585,
     246,  1411,  1402,  1478,   316,   511,   741,  1477,  1479,   621,
     868,   501,   873,  1604,   378,   197,   378,   583,  1630,  1238,
    1231,   501,   654,   770,    35,   125,   160,   502,  1065,  1420,
    1541,   194,   583,  1420,   255,   433,  1574,  1575,  1577,  1579,
      13,   125,   365,  1542,  1545,  1613,   212,   768,  1541,    35,
     125,  1067,  1068,  1541,   770,   125,   585,  1563,  1571,  1573,
     769,  1564,  1420,    36,    61,    72,    97,    99,   109,   158,
     163,   166,   176,   198,   200,   209,   211,   282,   316,   381,
     408,   419,   420,   423,   424,   444,   498,   511,   547,   566,
     631,   742,   745,   746,   747,   748,   750,  1064,  1446,  1450,
    1451,  1453,  1454,  1455,  1568,   873,   447,   534,  1180,  1181,
    1182,   433,   637,  1172,  1173,  1174,  1180,  1526,  1537,  1681,
     764,   769,  1351,   769,   764,  1353,    37,   219,  1513,  1532,
    1674,  1674,  1674,    96,  1673,  1674,  1674,   156,   770,   764,
      48,   156,   156,   197,   111,   765,   765,  1232,   765,   767,
    1537,  1241,   764,   138,   228,   768,   125,   138,   228,  1615,
     465,   769,  1622,   300,   301,   445,   446,   524,   525,   526,
     815,  1184,   612,  1175,  1176,   503,   609,  1234,   146,   392,
     768,  1379,  1380,  1382,  1541,   249,  1233,  1381,  1232,    48,
      13,   140,  1637,  1368,  1369,   290,   373,   594,  1370,  1371,
    1514,  1537,  1637,  1368,  1363,  1364,  1369,   231,   293,   429,
    1436,  1437,  1433,   160,   194,  1216,  1407,  1408,  1429,  1434,
    1462,  1465,  1513,  1537,   333,   570,   596,  1115,  1544,  1119,
    1537,  1541,  1537,  1117,   384,     7,    26,    84,   144,   237,
     323,   370,   451,   630,   749,   950,   951,   964,   965,   966,
     972,   974,   975,   976,  1451,     7,    12,    14,    17,    27,
      28,    58,    63,    64,    69,    77,    83,    84,    87,    96,
     111,   125,   129,   137,   138,   144,   152,   158,   169,   192,
     233,   235,   242,   262,   285,   322,   340,   344,   382,   388,
     395,   404,   436,   451,   452,   453,   483,   540,   541,   542,
     547,   564,   567,   590,   603,   637,   640,   725,   726,   727,
     749,  1012,  1015,  1017,  1018,  1071,  1144,  1145,  1147,  1148,
    1150,  1152,  1153,  1154,  1155,  1157,  1159,  1537,   171,  1537,
     842,   533,  1652,  1653,  1121,  1400,   249,   769,   235,   263,
     401,  1086,  1213,  1214,  1242,  1298,  1299,  1537,   794,   795,
     176,   429,   769,  1186,    59,   176,   180,   194,   331,   429,
    1196,  1197,  1198,    57,   369,   369,   448,  1631,  1249,  1537,
    1537,  1537,   519,   193,  1537,   709,     7,   944,  1537,   263,
    1544,  1616,  1618,  1613,  1537,   263,  1537,  1537,  1011,    11,
     167,   200,   420,   587,   829,  1645,  1653,  1659,  1661,  1662,
    1667,   200,   829,  1644,  1653,  1659,  1662,  1667,  1642,  1242,
    1242,    13,   140,  1296,  1346,  1296,  1296,  1296,   634,  1304,
    1242,  1242,  1299,  1299,  1242,  1242,   140,  1296,  1346,   765,
     373,   765,   765,  1242,  1242,  1242,  1242,  1523,   116,   117,
     118,   119,   120,   223,   224,   225,   226,   335,   337,   338,
     339,   346,   427,   490,   491,   632,   649,   650,  1341,  1342,
    1242,  1298,   112,   115,   576,   579,  1343,   140,  1292,  1242,
    1242,  1242,  1242,  1341,  1242,  1299,  1301,    10,   769,   770,
     140,  1296,  1242,  1242,   140,  1296,  1242,  1242,  1299,  1299,
    1299,  1242,  1299,  1246,  1242,  1242,  1242,  1242,  1242,  1242,
     765,  1242,  1296,  1296,  1242,  1242,   140,  1296,  1242,  1342,
    1342,  1242,    46,   268,   584,  1242,  1242,   765,  1524,  1525,
    1537,  1296,  1296,  1242,  1242,  1242,  1296,  1296,  1299,   765,
     765,  1242,  1242,  1242,  1242,  1242,  1253,   765,   765,   765,
    1232,   765,   769,   209,   282,   498,  1569,   502,  1242,  1239,
    1536,  1537,  1242,  1242,  1242,   179,   372,   589,   605,  1249,
      13,    20,  1244,  1252,  1246,  1246,   764,  1639,  1253,  1246,
    1246,  1246,  1246,   275,   667,  1245,  1246,  1246,   245,  1246,
     245,  1246,  1246,  1246,  1246,  1246,    33,   249,   275,   442,
    1541,  1253,  1532,  1532,  1242,  1263,  1264,  1265,   758,  1537,
    1537,   842,  1537,   378,  1537,   842,  1541,   709,   972,   974,
    1404,  1405,  1406,   842,  1537,  1544,  1612,  1400,  1613,  1537,
    1537,  1402,   615,   788,    35,   158,   162,   202,   222,   287,
     383,   419,   443,   468,   512,   543,   741,   742,   745,   746,
     747,   748,  1468,  1472,  1473,  1585,    86,   768,   880,   881,
     882,   883,  1537,  1602,   563,  1537,  1621,  1544,  1541,   200,
     420,   566,  1603,  1612,  1606,    21,  1344,  1345,   186,   363,
    1537,  1596,  1537,  1681,  1411,   516,   769,    50,   282,  1493,
      30,    30,  1526,  1586,  1587,  1400,   768,   785,  1531,    31,
     287,   769,   583,  1204,  1205,  1526,  1400,  1526,  1537,  1481,
    1480,   769,  1532,    56,    66,    76,    90,    91,    92,   106,
     334,   351,   489,   551,   568,   874,   876,   769,  1600,  1544,
    1612,  1603,   487,  1632,  1631,   197,  1223,  1224,  1381,    13,
     365,  1613,  1537,    71,  1070,  1242,  1544,   733,   572,  1534,
     273,   380,   643,   769,  1578,   769,  1576,   658,  1559,   768,
     769,  1537,   209,   282,   498,   653,   672,  1570,  1420,  1537,
    1574,  1564,  1420,  1565,  1566,  1567,  1572,    13,    35,   125,
     192,   378,   484,   709,  1242,  1581,   166,   275,   635,  1348,
    1459,   764,   108,   167,   200,   420,   566,   587,   612,   628,
    1459,    13,  1541,  1368,   197,   249,  1452,  1456,   198,    70,
     543,   194,   543,   563,    70,   543,    13,    43,    94,    98,
     253,   332,   396,   518,   560,  1440,  1441,  1442,   166,   222,
     543,   543,  1368,  1459,  1459,  1459,  1459,  1459,   211,  1459,
     287,   157,   422,   586,   234,   235,   261,  1088,    73,   563,
     543,   624,   769,   380,   643,    88,   769,   194,   816,   125,
    1242,  1424,  1425,  1426,  1423,  1352,  1354,  1537,    21,   769,
     379,  1677,   559,  1678,   646,   258,   471,  1676,  1537,  1242,
     277,   280,   430,   983,   984,  1544,   136,   765,   156,   779,
     765,   729,    48,  1541,   654,   729,    48,   637,    65,   256,
     365,   535,   553,   644,  1609,  1610,  1544,  1617,   637,  1136,
     160,   160,   160,   160,   160,   160,   769,   160,  1170,   404,
    1177,   667,   668,   670,  1235,  1236,  1237,   572,  1533,  1533,
    1541,   769,   503,  1242,  1365,  1521,  1220,  1221,   377,   769,
    1220,  1221,  1368,  1368,   197,  1401,  1527,  1537,  1436,  1162,
    1541,    87,  1009,  1010,  1017,  1018,  1019,  1071,   843,   369,
     316,     7,   843,   764,   110,   961,  1420,  1421,  1421,   961,
    1421,  1421,   583,  1421,   769,  1014,   158,    74,    89,   199,
     401,   519,  1027,  1029,  1086,  1161,  1421,    64,    89,   235,
    1161,   401,  1421,  1421,  1161,  1421,   401,   401,  1421,  1421,
    1421,  1421,   583,   136,  1421,   261,   401,   564,    64,    89,
     193,   401,   418,  1086,  1161,   261,  1421,   401,   401,   564,
     136,  1421,  1421,  1421,  1421,  1421,  1161,   401,    48,  1421,
    1421,   401,    21,    74,   160,   583,  1086,  1165,   401,   401,
    1421,  1421,  1421,  1421,   139,   332,  1421,  1421,   401,  1421,
     619,   619,  1421,  1421,  1015,    71,  1064,   450,   982,  1146,
     769,   769,   501,   710,  1687,  1124,   492,   628,  1653,   144,
     609,  1193,   125,  1209,  1537,  1208,  1526,   764,   764,  1214,
     765,   769,   232,   295,   296,   297,   298,   299,   302,   303,
     304,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   317,   318,   711,   712,   732,   734,   735,   736,   737,
     738,   809,   810,   815,   458,   459,   460,   461,   462,   463,
     464,   796,   797,  1526,   610,  1197,    57,   448,   171,   821,
     378,     7,   717,   111,   378,  1011,   961,   614,   945,     7,
     228,   125,   769,   824,   592,   764,   592,   615,  1102,  1103,
    1526,   200,  1011,   842,  1537,   842,   842,  1653,   769,   765,
    1296,   765,  1242,   765,   765,   765,  1242,   150,   634,  1303,
      21,   765,   615,   765,   765,   765,   615,   769,  1299,   765,
     758,   765,   769,   769,   765,   765,   765,   197,   769,   765,
     769,  1299,   765,   769,   769,   769,   757,   769,   765,   765,
     764,  1523,  1537,  1296,   765,   765,   765,  1296,   765,   769,
     765,   765,   765,   765,   769,   765,   249,   765,   769,   769,
     765,   769,   769,   765,   765,   765,   769,   197,   769,  1296,
     765,   765,   769,   769,   769,   765,   197,  1242,   197,  1242,
     197,  1242,   197,   765,   769,   765,   765,   765,   765,   769,
      21,   765,   769,   765,   769,   765,   765,   690,  1274,  1274,
     765,   769,  1269,   765,  1269,   769,   765,  1274,  1274,  1274,
    1299,   770,   770,   770,  1541,  1242,   774,   179,   372,   589,
     605,  1639,    19,  1242,   165,  1246,   764,  1242,  1242,  1246,
     764,  1639,  1253,  1246,  1240,   765,   769,   764,   770,   770,
    1526,  1404,  1402,  1014,   952,   953,   954,   972,   769,    52,
     470,  1163,   192,  1693,  1400,   768,   789,   790,   287,   287,
     287,   287,   287,   287,   769,  1400,  1474,   115,   576,   579,
     875,   885,  1290,  1516,  1523,  1541,   769,   160,   378,   765,
     769,   583,   758,  1537,  1546,  1611,   637,  1607,  1537,   160,
     186,   201,   214,   266,   267,   294,   363,   417,  1597,  1598,
    1347,  1348,  1526,  1531,  1531,  1211,  1212,  1526,   236,  1345,
     769,  1541,   122,   188,   219,   290,   373,   594,  1376,  1377,
    1378,    31,   583,  1487,  1544,  1544,   769,   583,   176,   429,
     613,  1188,  1189,  1190,   401,  1313,  1314,   583,  1483,    13,
    1482,  1479,   769,   160,   210,   378,   197,  1611,  1537,   145,
     700,   720,   764,   773,  1225,  1226,  1305,  1307,  1315,  1316,
    1317,  1318,  1319,  1320,  1321,  1526,  1639,  1347,  1223,   583,
     583,   583,    35,  1069,  1541,   583,  1420,   456,  1130,  1130,
     433,   454,   496,  1580,  1577,  1575,  1613,  1541,  1545,   194,
     770,   770,   770,   770,   770,  1573,  1242,  1581,   769,  1571,
     249,  1457,  1532,  1242,   758,  1011,   842,   842,   842,  1526,
     842,  1544,  1526,   287,   350,   543,  1449,  1449,  1459,  1537,
     842,  1459,  1544,  1452,   842,  1459,   252,   561,   181,   194,
    1443,   769,  1457,   816,  1452,   194,  1452,  1456,  1456,  1452,
    1459,  1459,  1182,   514,  1174,    60,   765,   769,   765,   769,
    1639,  1513,   405,   194,   770,   765,    73,   764,    73,   764,
     402,   986,   216,   263,   771,  1421,   404,   572,   733,    13,
     365,  1613,   404,   572,   733,  1534,  1541,   572,   572,   572,
      19,  1608,   320,   321,   325,   326,  1137,  1138,     5,   404,
     739,   740,  1133,  1134,  1135,  1529,  1531,   122,   188,   290,
     373,   594,  1375,  1529,   122,   188,   219,   290,   373,   594,
    1373,  1531,  1531,   815,  1531,   816,   160,   126,  1178,  1401,
     669,  1236,  1064,  1066,  1380,   342,    22,   131,  1366,  1367,
     769,  1371,  1371,  1401,  1526,  1537,   197,   769,   770,  1435,
    1226,   219,   290,   373,   594,  1374,  1377,  1010,    84,    77,
      93,   265,   343,   369,   431,   533,   845,   847,   478,   263,
     598,   963,   108,   221,   394,   404,   411,   515,   612,   827,
     828,  1531,   949,   950,   977,  1376,  1528,  1531,   949,   977,
     977,  1537,  1374,   951,  1421,  1110,  1537,  1086,  1087,  1200,
    1087,    64,   193,   418,  1028,  1085,  1090,  1101,  1110,  1537,
     764,  1537,   125,  1158,  1537,  1537,  1537,  1537,  1537,  1200,
    1375,  1373,  1537,  1373,    13,  1151,  1340,  1537,  1200,  1531,
    1531,  1531,  1531,  1064,  1421,  1373,  1151,  1537,  1537,   263,
    1340,   263,  1537,  1537,  1541,  1537,  1151,  1421,   186,   266,
     369,  1021,  1373,   125,  1160,  1537,  1375,  1375,  1537,  1200,
    1361,  1362,  1524,   125,  1016,  1373,  1531,  1200,  1537,  1537,
    1526,  1200,  1200,    80,    82,   125,   148,   187,   440,  1020,
    1016,  1016,   125,  1373,  1537,  1373,  1151,   764,   372,  1541,
    1374,  1421,  1421,   403,     7,   144,  1012,  1154,  1155,  1148,
    1152,  1155,   718,   719,   962,  1421,   707,  1691,   378,   837,
    1140,   127,   248,  1526,   673,   673,  1151,   418,  1336,  1337,
    1338,  1537,   249,  1242,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   769,   816,   160,   160,   160,   160,   160,
     160,   160,   769,   816,  1008,  1009,  1526,   963,   709,   642,
    1526,  1376,   286,    77,   177,   184,   364,   946,   947,   948,
     964,   965,   966,   967,   970,   971,   972,   973,   974,   975,
     976,   961,    48,   637,   654,  1616,  1622,  1421,   597,   826,
    1290,  1512,    47,   216,   486,  1105,  1105,   378,    21,   231,
     275,   456,   764,   978,   979,   980,   981,   982,  1013,  1015,
    1218,  1220,  1416,  1496,  1537,   842,   764,   473,  1668,     9,
      31,   942,   245,  1242,   765,  1273,  1274,  1273,  1273,  1273,
     575,  1242,  1242,   154,    35,    62,   112,   115,   123,   142,
     189,   260,   354,   357,   435,   509,   579,   607,  1038,  1042,
    1297,  1065,  1065,  1297,   765,  1273,   765,   245,   245,  1242,
    1242,  1242,   388,  1294,  1242,  1242,  1242,  1242,  1242,  1246,
     765,  1273,   765,  1273,  1242,  1242,  1242,  1242,  1242,  1242,
    1299,  1273,  1273,   245,  1242,  1242,  1242,   765,  1273,  1242,
    1242,  1242,  1242,   197,  1242,   197,  1242,   197,  1242,  1242,
    1273,  1273,  1242,    35,    62,  1373,  1296,  1273,   764,  1275,
    1276,  1277,  1537,   231,   694,  1271,  1514,  1517,   765,  1271,
     765,  1253,  1274,   765,   770,  1111,  1244,   765,   769,  1253,
    1253,  1341,  1341,    19,  1242,   165,  1265,  1298,   758,  1537,
    1537,  1156,  1157,  1159,  1376,  1406,  1014,  1544,  1163,  1541,
     769,   816,  1473,  1469,   883,   886,   887,   882,   374,   485,
     884,  1603,  1537,  1612,   770,   770,   583,   655,  1347,   764,
    1368,  1313,   769,  1213,  1214,  1533,   293,   433,   643,  1588,
    1587,  1242,  1531,   583,  1205,  1526,  1190,   764,   501,   620,
     621,   764,  1412,  1413,  1415,  1416,  1417,  1376,   816,   876,
     875,   385,  1603,  1612,   197,   764,  1639,  1226,  1307,  1316,
    1317,  1318,  1319,   731,   769,   100,   238,   258,   271,   355,
     477,   549,  1308,  1309,  1310,  1313,  1345,   212,  1358,  1347,
    1613,  1613,  1613,   733,  1534,  1534,   728,  1614,  1614,    78,
     595,   433,  1374,  1561,  1562,  1420,  1566,  1531,   197,  1458,
     765,  1537,   615,  1459,   428,  1368,  1442,  1458,  1459,  1544,
    1459,  1526,  1526,  1459,   197,  1529,  1426,  1537,   769,   336,
     156,   764,  1246,   764,  1246,  1374,   555,   987,   764,    12,
     985,  1373,  1533,  1130,   404,   456,   404,  1614,    21,    48,
    1609,  1373,  1373,  1373,  1373,  1138,   285,   606,   174,   465,
     704,   705,   697,  1374,  1374,  1135,  1531,   160,   406,  1179,
    1065,    73,  1497,  1521,   615,  1345,   770,  1226,  1527,   758,
    1537,   501,  1421,  1531,   533,   533,   533,   533,   533,   492,
     378,  1531,   958,   959,   960,   964,   972,   974,  1531,  1531,
    1531,  1531,  1373,  1531,  1531,   765,   769,  1541,  1110,   402,
     764,  1110,   764,   263,   263,   367,  1030,  1031,  1032,  1101,
    1087,   764,   615,   592,  1023,  1024,  1025,  1027,  1537,    34,
      35,    40,    42,    44,    45,    62,   112,   115,   123,   159,
     187,   189,   205,   206,   247,   260,   279,   288,   289,   291,
     328,   329,   330,   347,   348,   349,   354,   357,   375,   376,
     409,   410,   497,   501,   513,   573,   576,   579,   580,   581,
     582,   622,   623,   650,  1033,  1036,  1037,  1038,  1039,  1040,
    1041,  1042,  1044,  1032,  1032,   656,   657,  1104,   144,   501,
    1151,  1537,  1196,   769,  1374,   125,  1065,  1531,   564,  1537,
    1163,   637,   564,  1531,  1033,  1151,   769,  1366,  1151,   583,
     583,  1340,  1151,  1474,  1069,  1065,   952,   373,  1688,  1689,
    1421,   137,   152,  1692,    81,   488,   451,  1141,  1353,   378,
     378,   765,   765,   769,  1209,   764,  1373,  1529,  1373,  1373,
    1529,  1529,  1373,  1373,  1529,  1529,  1529,  1529,  1529,  1529,
    1529,  1529,  1373,  1373,  1529,  1517,  1529,  1373,  1529,  1531,
    1373,   372,   813,  1543,   372,   814,  1529,  1373,   810,   764,
     798,   798,   764,   803,   803,   764,   806,   806,   764,   801,
     797,   764,   439,   599,   955,   956,   957,   964,   968,   969,
     970,   971,   972,   974,  1376,  1541,   764,   823,   212,  1421,
    1421,  1421,  1421,  1014,   952,   733,  1534,  1541,  1613,  1136,
     612,   709,  1686,   765,  1526,  1416,  1526,   275,  1023,   980,
     979,  1014,  1232,   981,   473,   830,  1663,   123,   247,   435,
     550,  1022,   764,   130,   241,   609,   943,  1242,   765,  1273,
    1242,   575,   764,  1053,  1054,  1054,   764,  1048,   764,  1046,
    1047,  1053,   414,  1043,  1045,  1053,    62,   247,  1048,   247,
    1054,   721,  1254,   765,   765,   765,  1273,  1273,  1242,  1242,
     765,   765,   769,   765,    48,   495,  1293,   769,   769,   765,
     769,   765,   249,  1260,  1261,  1273,  1273,   765,   765,   765,
     765,   769,   765,   765,  1242,   765,   194,   765,   765,   769,
    1273,   765,   769,   769,   765,  1242,   765,  1242,   765,  1242,
     765,   765,   765,   764,  1076,  1076,   769,   765,  1276,  1278,
    1279,   688,   688,  1274,   769,  1270,  1270,  1271,  1274,  1271,
     765,  1537,  1299,   765,  1244,   765,   769,  1253,   765,  1159,
    1157,   954,   790,   194,   637,  1470,   160,   769,  1611,   637,
    1624,   758,   758,  1537,  1612,   385,  1368,  1425,   501,  1412,
    1413,  1212,  1526,  1214,   231,  1215,  1495,  1496,   643,   282,
    1544,  1339,  1340,  1431,  1432,  1524,   765,  1414,  1519,  1520,
    1524,  1537,   764,  1418,  1422,   160,   197,  1611,  1612,  1242,
    1345,   769,   765,   765,   765,   765,   765,  1305,  1306,  1307,
    1315,  1305,   258,   258,   391,  1312,   238,   271,   477,  1311,
    1312,  1315,  1305,  1305,  1345,  1353,    48,   217,  1349,  1358,
    1130,  1130,   103,  1014,  1581,  1375,  1447,   163,   631,  1612,
     373,  1448,   615,  1452,  1452,   498,  1373,   989,  1537,   765,
     989,   765,    48,   764,   991,  1246,   160,   764,   228,  1614,
    1130,  1534,   456,  1614,   219,  1531,  1535,   733,  1534,   125,
     245,   361,   103,   125,  1374,   245,  1531,   160,   153,   164,
     386,   571,  1498,  1499,   278,  1500,  1226,  1313,  1537,  1347,
     770,  1435,  1431,  1531,   111,   111,   127,   248,   162,  1014,
     828,   764,  1374,   401,   992,   993,   764,  1242,  1110,   730,
     764,   764,  1107,  1108,  1109,  1537,  1105,  1105,   765,   769,
    1033,  1053,  1053,  1054,    23,    35,    49,   601,   626,  1053,
    1064,  1072,  1073,  1074,  1048,   764,  1074,    62,   622,  1039,
    1074,  1074,    62,   623,   623,   626,   764,  1054,  1048,  1048,
    1074,  1053,  1054,   441,  1026,  1079,    27,    71,    75,    77,
     125,   367,   372,   378,   418,   497,   547,   604,   706,   743,
    1029,  1032,  1056,  1057,  1058,  1070,  1078,  1249,    35,  1053,
    1075,  1053,  1053,  1054,   764,  1047,  1055,  1046,   125,   125,
    1033,  1537,  1070,  1070,   566,     9,   186,  1164,  1362,  1537,
    1537,   246,  1188,   765,   756,  1014,   373,   756,  1690,  1693,
     367,   416,    25,   168,   831,   583,   137,   152,   833,  1654,
    1340,  1340,  1337,   811,   812,  1373,   765,   799,   800,  1537,
     765,   804,   805,  1537,  1546,   765,   807,   808,  1529,  1530,
     764,   765,   802,  1108,  1421,  1421,  1014,   823,   384,  1108,
     353,   714,   715,   716,  1537,  1531,   977,   977,  1374,   948,
     404,    21,    48,  1133,  1687,   764,  1526,   765,  1015,  1022,
     378,   850,   851,   852,  1537,   516,  1669,   378,  1341,  1242,
     122,   290,   373,   594,  1074,   373,   373,   765,  1341,  1341,
    1242,  1295,  1521,  1513,   765,  1242,  1242,  1299,    44,   355,
     765,   637,  1262,  1242,  1341,  1242,  1242,  1242,  1242,   765,
     765,   765,  1374,   765,   765,  1373,  1273,   765,   401,  1280,
    1242,  1274,  1274,   197,  1272,   765,  1299,  1471,   433,    56,
      66,    76,    90,    91,    92,   106,   334,   351,   472,   489,
     551,   568,   888,   887,   583,   210,   637,  1623,   765,  1431,
      21,  1427,   378,  1428,  1215,   269,   246,   765,   769,  1420,
    1415,  1416,   765,   769,   770,  1424,   769,   875,  1612,   197,
     769,  1353,  1305,   774,   258,  1312,  1312,   258,   258,   378,
     615,   378,   615,   192,   231,   614,  1331,  1332,  1333,  1334,
    1335,  1242,  1359,  1522,  1242,   698,  1355,  1349,  1614,  1614,
     404,  1374,  1368,  1368,  1612,  1347,  1459,  1242,   765,   769,
     765,   984,   992,   765,  1374,   988,   989,    48,  1614,  1614,
    1534,  1614,   404,   456,  1614,  1374,   125,   723,   125,  1374,
    1531,    48,    48,   153,    48,  1499,   537,   571,  1501,  1502,
    1347,  1347,  1347,   960,  1108,  1537,   765,   769,  1108,   765,
     764,  1108,  1242,   765,   769,   764,  1366,  1024,  1026,    35,
      23,   601,  1064,    35,  1074,  1065,  1112,  1513,  1074,   626,
    1112,  1074,   509,   607,   651,  1050,  1051,  1052,  1526,  1164,
    1069,    82,   125,   148,   187,  1060,  1531,   115,   576,   579,
     756,   757,   764,  1062,  1063,  1515,  1516,   609,   125,   125,
     139,   332,  1061,   263,  1376,   263,  1028,    71,  1058,   203,
    1034,   263,   372,   724,  1075,  1074,  1075,  1050,   373,  1050,
    1050,   764,  1515,  1164,  1526,  1537,   764,   373,  1689,   373,
     416,  1242,  1242,   378,   837,   842,   378,    77,   838,    21,
     637,  1192,   765,   769,   765,   769,   765,   769,   770,   765,
     769,   800,   765,   769,   765,   977,   977,   957,   764,   765,
    1529,  1529,  1529,  1529,  1535,   733,  1534,  1691,  1108,   765,
     978,   516,   488,   765,   769,  1036,  1531,   239,   249,   393,
     853,   854,   855,   856,  1526,   765,   765,   765,   765,   765,
     765,   769,   765,   765,   765,   769,  1273,   765,   769,   765,
     342,   265,   428,   765,   765,   765,   765,   765,   765,  1077,
     769,    48,   388,  1281,   186,   266,  1271,   765,   175,   285,
    1612,   385,   210,    21,  1626,  1347,  1427,  1537,  1428,   147,
     566,  1432,  1426,  1415,  1416,  1519,  1537,   765,  1422,  1612,
    1512,   765,   258,   258,  1242,   764,  1242,   764,  1086,  1086,
    1332,   639,   769,  1360,  1276,  1356,  1357,  1355,   816,  1537,
     216,   263,   765,   765,  1531,  1614,  1614,  1534,   120,   120,
    1513,  1513,    48,  1513,    48,    48,  1502,  1363,  1363,   765,
     620,   994,   993,   765,  1106,  1107,   765,   765,    77,   262,
    1097,  1098,  1099,  1100,  1103,  1104,  1109,   373,  1065,  1075,
     765,   769,   765,  1052,   764,  1080,   637,  1059,  1517,  1517,
    1242,  1062,   621,  1069,    15,    21,  1242,  1149,  1150,   992,
    1341,   511,  1531,   143,  1142,  1416,  1655,   373,   812,   800,
     805,  1537,   808,   769,   764,   637,  1091,  1092,  1093,  1100,
     827,  1094,  1095,  1096,  1100,   228,   404,  1692,   765,  1531,
     831,  1664,   852,  1070,   765,   769,  1537,   194,   373,  1521,
    1242,   342,   173,   765,  1373,  1359,    48,   430,   482,   682,
    1282,  1288,  1274,  1623,   385,  1544,  1368,  1428,  1353,   263,
    1526,    73,  1322,  1339,  1339,   194,  1330,  1330,  1522,    21,
     769,   764,   985,   111,   465,  1684,  1685,  1614,  1513,  1513,
    1513,   276,  1372,  1372,  1091,   249,   272,    77,   111,   235,
     322,   340,   364,   564,  1005,  1006,  1007,  1451,  1094,   765,
     769,  1097,  1366,  1531,  1421,  1099,   765,  1074,  1513,  1074,
    1081,  1537,   319,  1082,   744,   765,   764,   765,   765,   832,
     839,   840,   637,  1656,   674,   800,   800,   398,  1156,  1093,
     765,  1156,  1096,    48,  1097,   836,   837,   473,  1670,   855,
    1036,   149,   765,   765,   765,  1365,    33,   103,   245,   697,
    1283,  1284,  1285,  1514,  1517,  1626,   637,  1625,   609,  1313,
     764,   765,   765,   765,   212,   258,   388,   764,   764,  1277,
    1357,  1246,   764,   136,   369,   535,  1371,   764,   996,   998,
     574,  1421,   136,   136,  1421,  1421,  1421,  1421,   764,  1002,
    1007,   158,  1079,  1107,  1373,  1366,   765,   769,   198,   400,
     510,   378,  1083,  1537,  1242,   538,   834,    54,    68,   182,
     230,   257,   270,   381,   474,   841,   892,   894,   895,   896,
     898,   899,   900,   901,   902,   903,   905,   913,   914,   917,
     928,   931,   933,   934,  1528,  1539,  1550,  1551,  1552,  1555,
      53,    64,   282,   765,   769,  1528,  1376,  1156,   833,  1036,
     844,  1070,   484,   245,   697,  1284,  1286,  1514,  1517,   484,
    1242,   692,   679,  1287,   692,   692,   654,  1431,  1066,   701,
    1323,  1324,  1537,  1345,    48,    48,  1336,  1338,   765,   989,
    1421,   535,   764,   997,   998,   999,   327,   995,   998,  1531,
    1421,  1421,  1376,  1376,  1374,  1537,   555,  1003,  1004,  1421,
    1537,   130,   609,   765,  1242,   155,   835,   915,   918,  1537,
     197,   363,   906,   893,  1539,  1539,  1537,   897,   781,   292,
     455,   636,   937,    32,   935,   771,    64,   385,    64,   800,
     838,  1070,   134,   845,   846,  1249,  1671,   191,   413,  1657,
    1658,  1242,   681,    19,   681,   681,  1341,   103,   212,   369,
     696,    13,   125,   365,  1613,   482,  1503,   703,   765,   769,
     194,  1036,   765,   765,   554,   990,   765,  1533,   765,   769,
     327,  1000,  1001,  1246,  1531,  1531,  1541,   765,   769,  1541,
      52,   369,   470,   501,  1084,  1084,   548,   629,  1035,  1242,
    1242,   634,   920,   924,   197,  1537,   908,   909,  1242,   858,
     891,   892,   894,   896,   898,   900,   901,   902,   903,   905,
     913,   928,   931,   933,   858,   938,   936,   929,   932,   385,
     385,   765,   143,  1665,   134,   891,  1541,  1660,  1341,  1286,
     692,   484,   689,  1559,   228,  1497,  1512,  1324,   702,  1070,
    1374,   990,  1685,   998,   765,   769,  1005,  1004,     6,   125,
     372,   378,   378,  1056,   916,   925,   150,   924,   927,   246,
     154,  1242,   154,   891,   767,   608,  1242,   859,   937,   935,
     839,   844,   891,   681,    48,  1500,  1322,   171,  1325,  1001,
     609,   130,   634,   919,   921,  1242,   858,   154,   904,   230,
     910,   292,   767,   940,   939,   124,   857,   860,   930,  1539,
     930,  1666,  1513,   231,  1504,   703,  1084,  1084,   922,   921,
     927,   926,    54,   907,  1537,   575,  1242,   143,    95,   172,
     863,   889,  1537,   154,   891,   767,   891,   373,   764,  1506,
    1512,  1242,   154,   575,   769,   858,   941,   858,   215,   769,
    1036,    86,   105,   767,   278,   482,  1505,   765,   768,  1507,
    1508,  1524,   501,  1509,   125,   162,   372,  1326,  1327,  1328,
    1329,   923,    54,   858,  1537,   911,   154,   154,   194,  1537,
    1070,   194,   194,  1541,   765,   769,  1510,  1511,  1524,  1512,
    1328,  1329,  1327,  1329,   378,   575,   150,   151,   912,   455,
     636,   861,   125,   890,   866,   867,  1373,   862,  1508,   769,
    1420,   378,   378,   162,   699,   858,   858,   908,   521,   523,
     864,   865,   866,   869,  1249,  1537,  1242,  1216,  1511,  1426,
     769,   891,   196,   865
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   775,   776,   776,   776,   776,   776,   777,   778,   777,
     777,   779,   779,   780,   780,   781,   781,   781,   781,   781,
     781,   781,   781,   781,   781,   781,   781,   781,   781,   781,
     781,   781,   781,   781,   781,   781,   781,   781,   781,   781,
     781,   781,   781,   781,   781,   781,   781,   781,   781,   781,
     781,   781,   781,   781,   781,   781,   781,   781,   781,   781,
     781,   781,   781,   781,   781,   781,   781,   781,   781,   781,
     781,   781,   781,   781,   781,   781,   781,   781,   781,   781,
     781,   781,   781,   781,   781,   781,   781,   781,   781,   781,
     781,   781,   781,   781,   781,   781,   781,   781,   781,   781,
     781,   781,   781,   781,   781,   781,   782,   783,   783,   784,
     785,   785,   787,   786,   788,   788,   789,   789,   790,   792,
     791,   794,   793,   795,   793,   796,   796,   797,   797,   797,
     797,   797,   797,   797,   798,   798,   799,   799,   800,   801,
     801,   802,   802,   803,   803,   804,   804,   805,   806,   806,
     807,   807,   808,   809,   809,   810,   810,   810,   810,   810,
     810,   810,   810,   810,   810,   810,   810,   810,   810,   810,
     810,   810,   810,   810,   810,   810,   810,   810,   810,   810,
     810,   810,   810,   810,   810,   811,   811,   811,   812,   813,
     813,   814,   814,   815,   815,   815,   815,   816,   816,   817,
     817,   817,   817,   818,   819,   821,   820,   820,   820,   820,
     820,   820,   820,   820,   822,   822,   823,   823,   823,   823,
     823,   824,   824,   825,   825,   825,   826,   826,   827,   827,
     828,   828,   828,   828,   828,   828,   828,   830,   829,   832,
     831,   831,   833,   833,   833,   833,   834,   834,   835,   835,
     836,   836,   837,   837,   838,   838,   840,   839,   841,   841,
     841,   841,   841,   841,   841,   841,   841,   841,   841,   841,
     841,   842,   842,   843,   843,   844,   844,   845,   845,   845,
     845,   845,   845,   845,   846,   846,   846,   847,   847,   848,
     849,   849,   850,   850,   851,   851,   852,   853,   853,   854,
     854,   855,   856,   856,   856,   856,   857,   857,   858,   858,
     859,   859,   860,   860,   861,   860,   862,   860,   863,   863,
     864,   864,   865,   866,   866,   867,   868,   868,   869,   869,
     869,   869,   869,   870,   871,   871,   872,   872,   873,   873,
     874,   874,   875,   875,   875,   876,   876,   876,   876,   876,
     876,   876,   876,   876,   876,   876,   876,   877,   878,   879,
     879,   879,   880,   880,   881,   881,   882,   883,   883,   884,
     884,   885,   886,   886,   887,   888,   888,   888,   888,   888,
     888,   888,   888,   888,   888,   888,   888,   888,   889,   889,
     890,   890,   891,   891,   891,   891,   891,   891,   891,   891,
     891,   891,   891,   891,   891,   893,   892,   895,   894,   897,
     896,   899,   898,   900,   901,   902,   904,   903,   905,   906,
     906,   906,   907,   907,   909,   910,   911,   908,   912,   912,
     912,   913,   913,   915,   916,   914,   918,   917,   919,   919,
     920,   920,   922,   923,   921,   925,   926,   924,   927,   927,
     929,   928,   930,   930,   932,   931,   934,   933,   936,   935,
     937,   938,   939,   937,   940,   941,   937,   942,   942,   943,
     943,   943,   944,   944,   945,   945,   946,   946,   947,   947,
     948,   948,   948,   948,   948,   948,   948,   948,   948,   948,
     948,   949,   949,   950,   950,   951,   951,   951,   951,   951,
     951,   951,   952,   952,   953,   953,   954,   955,   955,   956,
     956,   957,   957,   957,   957,   957,   957,   957,   958,   958,
     959,   959,   960,   960,   960,   961,   962,   962,   963,   964,
     965,   966,   967,   968,   969,   970,   971,   972,   973,   974,
     974,   975,   976,   977,   977,   978,   978,   979,   979,   980,
     980,   980,   981,   981,   982,   983,   983,   983,   983,   983,
     983,   984,   984,   985,   985,   986,   986,   987,   987,   987,
     988,   988,   989,   989,   990,   990,   991,   991,   992,   992,
     993,   994,   994,   994,   995,   995,   996,   996,   997,   997,
     999,   998,  1000,  1000,  1001,  1001,  1002,  1002,  1003,  1003,
    1004,  1005,  1005,  1006,  1006,  1007,  1007,  1007,  1007,  1007,
    1007,  1007,  1007,  1008,  1008,  1009,  1009,  1010,  1010,  1010,
    1011,  1011,  1012,  1012,  1013,  1013,  1014,  1014,  1015,  1015,
    1015,  1015,  1015,  1015,  1015,  1015,  1015,  1015,  1015,  1015,
    1015,  1015,  1015,  1015,  1015,  1015,  1015,  1015,  1015,  1015,
    1015,  1015,  1015,  1015,  1015,  1015,  1015,  1015,  1015,  1015,
    1016,  1016,  1017,  1018,  1019,  1020,  1020,  1020,  1020,  1020,
    1020,  1021,  1021,  1021,  1022,  1022,  1022,  1022,  1023,  1023,
    1024,  1024,  1025,  1026,  1026,  1027,  1027,  1027,  1027,  1027,
    1027,  1028,  1029,  1029,  1030,  1030,  1031,  1031,  1032,  1033,
    1033,  1034,  1034,  1035,  1035,  1035,  1036,  1036,  1036,  1036,
    1036,  1036,  1036,  1036,  1036,  1036,  1036,  1036,  1036,  1036,
    1036,  1036,  1036,  1036,  1036,  1036,  1036,  1036,  1036,  1036,
    1036,  1036,  1036,  1036,  1036,  1036,  1036,  1036,  1036,  1036,
    1036,  1036,  1036,  1037,  1037,  1037,  1037,  1037,  1037,  1037,
    1037,  1038,  1038,  1039,  1039,  1040,  1040,  1040,  1040,  1040,
    1041,  1041,  1041,  1041,  1041,  1042,  1042,  1043,  1043,  1044,
    1044,  1044,  1044,  1045,  1045,  1046,  1046,  1046,  1047,  1048,
    1048,  1049,  1049,  1049,  1050,  1050,  1051,  1051,  1052,  1052,
    1052,  1053,  1053,  1053,  1053,  1054,  1054,  1055,  1055,  1056,
    1056,  1057,  1057,  1058,  1058,  1058,  1058,  1058,  1058,  1058,
    1058,  1058,  1058,  1058,  1058,  1058,  1058,  1058,  1058,  1058,
    1058,  1058,  1058,  1058,  1059,  1059,  1060,  1060,  1060,  1061,
    1061,  1061,  1062,  1063,  1063,  1064,  1064,  1065,  1065,  1066,
    1066,  1067,  1067,  1068,  1068,  1069,  1069,  1070,  1070,  1071,
    1071,  1072,  1072,  1072,  1073,  1073,  1073,  1074,  1074,  1074,
    1074,  1074,  1074,  1074,  1075,  1075,  1077,  1076,  1078,  1078,
    1079,  1080,  1080,  1081,  1081,  1082,  1082,  1082,  1082,  1083,
    1083,  1083,  1083,  1083,  1084,  1084,  1084,  1084,  1084,  1085,
    1085,  1086,  1086,  1087,  1087,  1088,  1088,  1088,  1089,  1089,
    1090,  1090,  1090,  1090,  1090,  1090,  1090,  1090,  1091,  1091,
    1092,  1092,  1093,  1093,  1094,  1094,  1095,  1095,  1096,  1097,
    1097,  1098,  1098,  1099,  1099,  1100,  1100,  1100,  1101,  1101,
    1101,  1102,  1102,  1103,  1103,  1104,  1104,  1105,  1105,  1105,
    1106,  1106,  1107,  1107,  1108,  1108,  1109,  1109,  1110,  1110,
    1111,  1111,  1112,  1112,  1113,  1113,  1115,  1114,  1117,  1116,
    1119,  1118,  1121,  1120,  1122,  1120,  1124,  1123,  1125,  1126,
    1126,  1126,  1126,  1127,  1128,  1129,  1129,  1129,  1129,  1129,
    1129,  1129,  1130,  1130,  1131,  1132,  1133,  1133,  1134,  1134,
    1135,  1135,  1135,  1135,  1135,  1135,  1135,  1135,  1135,  1135,
    1135,  1135,  1135,  1135,  1135,  1135,  1136,  1136,  1137,  1137,
    1138,  1138,  1138,  1138,  1139,  1140,  1140,  1140,  1140,  1141,
    1141,  1142,  1142,  1143,  1143,  1144,  1144,  1145,  1145,  1146,
    1146,  1147,  1147,  1147,  1147,  1148,  1148,  1148,  1148,  1148,
    1148,  1148,  1148,  1148,  1148,  1148,  1148,  1148,  1148,  1148,
    1148,  1148,  1148,  1148,  1148,  1149,  1149,  1150,  1150,  1151,
    1151,  1152,  1152,  1152,  1152,  1152,  1153,  1153,  1154,  1154,
    1154,  1154,  1154,  1154,  1154,  1154,  1154,  1154,  1154,  1154,
    1154,  1154,  1154,  1154,  1154,  1154,  1154,  1154,  1154,  1154,
    1154,  1154,  1154,  1154,  1155,  1155,  1155,  1156,  1156,  1156,
    1156,  1156,  1157,  1158,  1158,  1159,  1160,  1160,  1161,  1161,
    1162,  1162,  1163,  1163,  1163,  1164,  1164,  1164,  1165,  1165,
    1165,  1165,  1166,  1166,  1167,  1167,  1168,  1170,  1169,  1171,
    1172,  1172,  1173,  1173,  1174,  1174,  1174,  1174,  1175,  1176,
    1176,  1177,  1177,  1178,  1178,  1179,  1179,  1180,  1180,  1181,
    1181,  1182,  1182,  1183,  1183,  1184,  1184,  1184,  1184,  1184,
    1185,  1186,  1186,  1186,  1187,  1188,  1188,  1189,  1189,  1190,
    1190,  1190,  1191,  1192,  1192,  1193,  1193,  1193,  1194,  1195,
    1196,  1196,  1197,  1197,  1198,  1198,  1198,  1198,  1198,  1198,
    1199,  1200,  1200,  1200,  1202,  1201,  1201,  1203,  1203,  1204,
    1204,  1205,  1206,  1206,  1207,  1207,  1208,  1209,  1209,  1210,
    1210,  1211,  1211,  1212,  1213,  1214,  1214,  1215,  1215,  1216,
    1216,  1216,  1216,  1217,  1217,  1217,  1217,  1218,  1218,  1218,
    1218,  1218,  1218,  1218,  1219,  1219,  1219,  1219,  1219,  1220,
    1220,  1220,  1221,  1221,  1221,  1222,  1222,  1223,  1223,  1224,
    1225,  1225,  1226,  1226,  1227,  1228,  1229,  1229,  1230,  1230,
    1231,  1231,  1232,  1232,  1233,  1233,  1233,  1234,  1234,  1235,
    1236,  1236,  1237,  1237,  1238,  1238,  1238,  1239,  1239,  1240,
    1240,  1240,  1240,  1240,  1241,  1241,  1242,  1242,  1242,  1242,
    1242,  1242,  1242,  1242,  1242,  1242,  1242,  1243,  1243,  1243,
    1243,  1243,  1244,  1244,  1244,  1244,  1244,  1244,  1244,  1244,
    1244,  1244,  1244,  1244,  1244,  1244,  1244,  1244,  1244,  1245,
    1245,  1246,  1246,  1246,  1246,  1246,  1246,  1246,  1246,  1246,
    1246,  1246,  1246,  1246,  1246,  1246,  1247,  1247,  1248,  1248,
    1249,  1249,  1250,  1250,  1251,  1251,  1251,  1251,  1251,  1251,
    1251,  1252,  1252,  1253,  1253,  1253,  1253,  1253,  1253,  1253,
    1253,  1253,  1253,  1253,  1253,  1253,  1253,  1253,  1253,  1253,
    1253,  1253,  1253,  1253,  1253,  1253,  1253,  1253,  1253,  1253,
    1253,  1253,  1253,  1253,  1253,  1253,  1254,  1254,  1255,  1255,
    1255,  1255,  1255,  1255,  1255,  1255,  1255,  1255,  1255,  1255,
    1255,  1255,  1255,  1255,  1255,  1255,  1255,  1255,  1255,  1255,
    1255,  1255,  1255,  1255,  1255,  1256,  1256,  1256,  1256,  1256,
    1256,  1256,  1256,  1256,  1256,  1256,  1256,  1256,  1256,  1256,
    1256,  1256,  1256,  1256,  1256,  1256,  1256,  1257,  1257,  1257,
    1257,  1257,  1257,  1257,  1257,  1257,  1257,  1257,  1257,  1257,
    1257,  1257,  1257,  1257,  1257,  1257,  1257,  1257,  1257,  1257,
    1258,  1258,  1258,  1258,  1258,  1258,  1258,  1259,  1259,  1260,
    1260,  1261,  1261,  1262,  1262,  1263,  1263,  1264,  1264,  1265,
    1266,  1266,  1267,  1267,  1267,  1267,  1267,  1267,  1267,  1267,
    1267,  1267,  1267,  1267,  1267,  1267,  1267,  1267,  1267,  1267,
    1267,  1267,  1267,  1268,  1268,  1268,  1268,  1268,  1268,  1268,
    1268,  1268,  1268,  1268,  1269,  1269,  1269,  1270,  1270,  1271,
    1271,  1271,  1272,  1272,  1272,  1273,  1273,  1274,  1275,  1275,
    1276,  1277,  1278,  1279,  1279,  1280,  1280,  1281,  1281,  1282,
    1282,  1283,  1283,  1284,  1284,  1284,  1284,  1284,  1285,  1286,
    1286,  1286,  1286,  1286,  1287,  1287,  1287,  1287,  1287,  1288,
    1288,  1288,  1289,  1290,  1291,  1291,  1291,  1292,  1292,  1293,
    1293,  1294,  1294,  1295,  1295,  1296,  1297,  1297,  1297,  1297,
    1297,  1297,  1297,  1297,  1297,  1297,  1297,  1297,  1297,  1297,
    1298,  1298,  1299,  1299,  1300,  1300,  1301,  1301,  1302,  1302,
    1303,  1303,  1304,  1304,  1305,  1305,  1305,  1306,  1306,  1307,
    1307,  1307,  1307,  1307,  1307,  1308,  1308,  1308,  1309,  1309,
    1309,  1309,  1310,  1310,  1311,  1311,  1312,  1312,  1313,  1313,
    1314,  1315,  1315,  1315,  1315,  1315,  1315,  1316,  1316,  1317,
    1317,  1318,  1319,  1319,  1320,  1320,  1321,  1322,  1323,  1323,
    1324,  1324,  1324,  1325,  1325,  1326,  1326,  1326,  1326,  1326,
    1327,  1328,  1329,  1329,  1329,  1330,  1330,  1330,  1330,  1331,
    1331,  1332,  1332,  1333,  1333,  1334,  1334,  1335,  1336,  1336,
    1337,  1337,  1338,  1338,  1339,  1340,  1340,  1341,  1341,  1341,
    1341,  1341,  1341,  1341,  1341,  1341,  1341,  1341,  1341,  1342,
    1342,  1342,  1342,  1342,  1342,  1342,  1342,  1342,  1343,  1343,
    1343,  1343,  1344,  1344,  1345,  1345,  1346,  1346,  1347,  1347,
    1348,  1349,  1349,  1350,  1350,  1351,  1351,  1352,  1353,  1353,
    1354,  1354,  1355,  1355,  1356,  1356,  1357,  1358,  1358,  1359,
    1359,  1360,  1360,  1361,  1361,  1362,  1363,  1363,  1364,  1365,
    1365,  1366,  1366,  1367,  1367,  1368,  1368,  1369,  1370,  1370,
    1370,  1371,  1371,  1371,  1371,  1371,  1372,  1372,  1373,  1373,
    1373,  1373,  1373,  1373,  1374,  1374,  1374,  1374,  1374,  1375,
    1375,  1375,  1375,  1375,  1376,  1376,  1376,  1376,  1376,  1377,
    1378,  1378,  1379,  1379,  1380,  1380,  1381,  1382,  1382,  1382,
    1383,  1384,  1385,  1386,  1387,  1387,  1388,  1389,  1390,  1391,
    1392,  1393,  1394,  1395,  1396,  1397,  1397,  1398,  1399,  1400,
    1400,  1401,  1401,  1402,  1402,  1403,  1403,  1404,  1404,  1405,
    1405,  1406,  1406,  1407,  1407,  1407,  1408,  1408,  1408,  1409,
    1409,  1409,  1409,  1410,  1410,  1411,  1411,  1412,  1412,  1412,
    1413,  1413,  1413,  1414,  1414,  1415,  1416,  1416,  1416,  1417,
    1417,  1418,  1418,  1419,  1419,  1420,  1420,  1421,  1421,  1422,
    1423,  1424,  1424,  1425,  1425,  1426,  1426,  1427,  1427,  1428,
    1428,  1429,  1430,  1430,  1431,  1431,  1432,  1433,  1433,  1434,
    1434,  1434,  1435,  1435,  1436,  1436,  1437,  1437,  1437,  1438,
    1439,  1439,  1440,  1440,  1441,  1441,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1443,  1443,  1445,  1444,  1446,
    1446,  1446,  1446,  1446,  1446,  1446,  1446,  1446,  1446,  1446,
    1446,  1447,  1446,  1448,  1446,  1446,  1446,  1446,  1446,  1446,
    1446,  1446,  1446,  1446,  1446,  1446,  1446,  1446,  1446,  1446,
    1446,  1446,  1446,  1446,  1446,  1446,  1446,  1446,  1446,  1446,
    1446,  1446,  1446,  1446,  1446,  1446,  1446,  1446,  1446,  1446,
    1446,  1446,  1446,  1446,  1449,  1449,  1449,  1450,  1450,  1451,
    1451,  1452,  1452,  1453,  1453,  1454,  1454,  1455,  1455,  1455,
    1455,  1456,  1456,  1457,  1457,  1458,  1458,  1459,  1459,  1459,
    1460,  1461,  1462,  1462,  1462,  1462,  1462,  1462,  1463,  1463,
    1464,  1464,  1464,  1465,  1465,  1465,  1467,  1466,  1469,  1468,
    1468,  1470,  1470,  1471,  1470,  1472,  1472,  1473,  1473,  1473,
    1473,  1473,  1473,  1473,  1473,  1473,  1473,  1473,  1473,  1473,
    1473,  1473,  1473,  1473,  1473,  1474,  1474,  1476,  1475,  1475,
    1477,  1477,  1478,  1478,  1480,  1479,  1481,  1479,  1479,  1482,
    1482,  1483,  1483,  1485,  1484,  1486,  1486,  1487,  1487,  1488,
    1489,  1489,  1489,  1490,  1491,  1492,  1492,  1493,  1493,  1494,
    1494,  1494,  1495,  1495,  1496,  1496,  1497,  1497,  1498,  1498,
    1499,  1499,  1499,  1499,  1500,  1500,  1501,  1501,  1502,  1502,
    1503,  1503,  1504,  1504,  1505,  1505,  1506,  1506,  1506,  1507,
    1507,  1508,  1508,  1509,  1509,  1510,  1510,  1511,  1512,  1512,
    1512,  1512,  1513,  1513,  1513,  1514,  1515,  1515,  1515,  1516,
    1516,  1516,  1516,  1516,  1516,  1516,  1516,  1516,  1516,  1517,
    1517,  1517,  1517,  1517,  1518,  1518,  1518,  1519,  1519,  1520,
    1520,  1521,  1522,  1523,  1523,  1524,  1524,  1525,  1525,  1526,
    1526,  1527,  1527,  1528,  1528,  1529,  1530,  1531,  1532,  1533,
    1534,  1535,  1535,  1536,  1537,  1537,  1538,  1538,  1539,  1539,
    1540,  1540,  1541,  1541,  1541,  1542,  1542,  1542,  1543,  1543,
    1544,  1544,  1545,  1545,  1546,  1547,  1547,  1547,  1547,  1547,
    1548,  1548,  1548,  1549,  1549,  1549,  1549,  1549,  1549,  1549,
    1549,  1549,  1549,  1549,  1549,  1549,  1549,  1549,  1549,  1549,
    1549,  1549,  1549,  1549,  1549,  1549,  1549,  1549,  1549,  1549,
    1549,  1549,  1549,  1549,  1549,  1549,  1549,  1549,  1549,  1550,
    1550,  1550,  1551,  1551,  1551,  1551,  1551,  1551,  1551,  1551,
    1551,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,  1552,
    1552,  1552,  1553,  1553,  1553,  1554,  1554,  1554,  1554,  1555,
    1555,  1555,  1555,  1555,  1556,  1557,  1557,  1557,  1557,  1557,
    1557,  1557,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1559,
    1559,  1560,  1560,  1561,  1561,  1562,  1563,  1563,  1564,  1564,
    1565,  1565,  1566,  1566,  1567,  1567,  1567,  1567,  1567,  1568,
    1568,  1568,  1568,  1569,  1569,  1569,  1569,  1570,  1570,  1570,
    1570,  1570,  1570,  1571,  1572,  1572,  1572,  1572,  1572,  1572,
    1572,  1573,  1573,  1573,  1574,  1574,  1575,  1576,  1576,  1577,
    1578,  1578,  1579,  1579,  1580,  1580,  1580,  1580,  1581,  1581,
    1581,  1581,  1581,  1581,  1581,  1581,  1582,  1583,  1584,  1583,
    1583,  1585,  1585,  1586,  1586,  1587,  1588,  1588,  1588,  1588,
    1589,  1590,  1590,  1591,  1592,  1593,  1594,  1594,  1594,  1595,
    1595,  1595,  1595,  1595,  1596,  1596,  1597,  1597,  1597,  1597,
    1598,  1598,  1598,  1598,  1598,  1599,  1599,  1600,  1599,  1599,
    1599,  1601,  1601,  1602,  1601,  1601,  1603,  1603,  1603,  1603,
    1604,  1604,  1605,  1605,  1606,  1606,  1606,  1606,  1606,  1606,
    1606,  1606,  1606,  1606,  1606,  1606,  1606,  1606,  1606,  1606,
    1606,  1606,  1606,  1606,  1606,  1606,  1606,  1606,  1606,  1606,
    1606,  1606,  1606,  1606,  1606,  1606,  1606,  1606,  1607,  1607,
    1608,  1608,  1609,  1609,  1610,  1610,  1610,  1611,  1611,  1611,
    1611,  1611,  1612,  1612,  1613,  1613,  1614,  1614,  1615,  1615,
    1616,  1616,  1616,  1616,  1616,  1616,  1616,  1617,  1617,  1617,
    1617,  1617,  1617,  1617,  1617,  1617,  1617,  1618,  1618,  1619,
    1619,  1620,  1620,  1621,  1621,  1622,  1622,  1622,  1622,  1622,
    1623,  1623,  1624,  1624,  1625,  1625,  1625,  1625,  1625,  1626,
    1626,  1628,  1627,  1629,  1629,  1630,  1630,  1630,  1631,  1631,
    1631,  1632,  1632,  1633,  1634,  1634,  1635,  1636,  1637,  1637,
    1637,  1638,  1639,  1640,  1641,  1641,  1641,  1641,  1641,  1641,
    1641,  1641,  1642,  1643,  1643,  1643,  1644,  1644,  1644,  1644,
    1644,  1645,  1645,  1645,  1645,  1645,  1645,  1646,  1646,  1647,
    1648,  1649,  1649,  1649,  1650,  1651,  1651,  1651,  1652,  1652,
    1652,  1654,  1653,  1655,  1656,  1656,  1656,  1656,  1657,  1657,
    1658,  1658,  1660,  1659,  1661,  1661,  1663,  1664,  1665,  1666,
    1662,  1668,  1669,  1670,  1671,  1667,  1672,  1672,  1672,  1672,
    1672,  1672,  1673,  1673,  1674,  1674,  1674,  1675,  1675,  1676,
    1676,  1676,  1677,  1677,  1678,  1678,  1678,  1679,  1679,  1680,
    1680,  1681,  1681,  1682,  1683,  1683,  1684,  1684,  1685,  1685,
    1685,  1686,  1686,  1687,  1687,  1688,  1688,  1689,  1689,  1690,
    1690,  1691,  1691,  1692,  1692,  1692,  1693,  1693
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     3,     6,     3,     1,     0,     4,
       2,     0,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     1,     1,     4,
       1,     2,     0,     4,     0,     2,     3,     1,     2,     0,
       3,     0,     6,     0,     6,     1,     3,     3,     3,     3,
       3,     3,     3,     3,     2,     3,     1,     3,     1,     2,
       3,     5,     7,     2,     3,     1,     3,     3,     2,     3,
       1,     3,     1,     1,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     5,     3,
       3,     3,     3,     3,     1,     0,     1,     3,     1,     1,
       1,     1,     1,     3,     3,     3,     3,     0,     3,     9,
       6,     7,     9,     4,    10,     0,     6,     2,     8,     7,
       6,     7,    11,     7,     8,     7,     0,     3,     3,     6,
       3,     0,     3,    12,    11,    11,     1,     1,     1,     3,
       2,     2,     2,     2,     2,     2,     2,     0,    12,     0,
       6,     2,     0,     1,     3,     1,     0,     2,     0,     2,
       0,     1,     3,     4,     0,     2,     0,     2,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     1,     0,     2,     0,     2,     2,     2,     2,
       2,     3,     3,     1,     1,     1,     2,     3,     3,     3,
       0,     3,     0,     1,     3,     1,     3,     0,     1,     3,
       1,     4,     0,     1,     1,     1,     0,     3,     2,     3,
       0,     3,     5,     5,     0,     7,     0,     6,     1,     1,
       1,     3,     1,     1,     1,     3,     0,     1,     1,     1,
       1,     2,     1,     3,     1,     1,     0,     1,     0,     2,
       3,     5,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     4,     0,
       1,     1,     1,     3,     1,     3,     3,     1,     2,     1,
       1,     1,     1,     3,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       0,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     5,     0,     2,     0,
       3,     0,     2,     2,     2,     2,     0,     6,     2,     0,
       2,     1,     1,     3,     0,     0,     0,     7,     0,     2,
       2,     1,     1,     0,     0,     8,     0,     6,     1,     2,
       1,     2,     0,     0,     6,     0,     0,     6,     0,     2,
       0,     5,     0,     1,     0,     5,     0,     2,     0,     5,
       4,     0,     0,     8,     0,     0,     8,     1,     1,     1,
       1,     1,     0,     2,     0,     4,     0,     1,     1,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     1,     1,     3,     1,     1,     1,     1,     1,
       1,     1,     0,     1,     1,     3,     1,     0,     1,     1,
       3,     1,     1,     1,     1,     1,     1,     1,     0,     1,
       1,     3,     1,     1,     1,     2,     1,     1,     2,     3,
       3,     3,     3,     3,     3,     3,     3,     4,     3,     1,
       1,     3,     3,     1,     1,     2,     1,     2,     1,     0,
       2,     1,     2,     1,     6,     6,     5,     4,     5,     4,
       5,     0,     1,     0,     3,     0,     2,     0,     8,     9,
       0,     1,     1,     3,     0,     2,     0,     3,     1,     3,
       5,     0,     4,     3,     1,     1,     1,     3,     1,     3,
       0,     4,     1,     3,     1,     1,     0,     3,     1,     3,
       3,     0,     1,     2,     1,     3,     4,     3,     3,     3,
       4,     4,     3,     0,     1,     1,     2,     1,     1,     1,
       0,     3,     1,     2,     1,     3,     0,     1,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     5,
       1,     1,     3,     4,     4,     3,     2,     2,     3,     3,
       1,     1,     4,     4,     4,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       1,     1,     3,     0,     1,     6,     7,     7,     7,     8,
       3,     4,     0,     2,     0,     1,     0,     1,     2,     2,
       9,     0,     2,     0,     1,     1,     3,     3,     3,     1,
       2,     1,     1,     3,     2,     3,     2,     2,     1,     3,
       3,     2,     3,     1,     2,     2,     2,     1,     2,     1,
       1,     1,     2,     3,     2,     3,     2,     2,     5,     5,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     2,     2,     1,     2,     1,     2,     3,     2,
       1,     1,     1,     1,     1,     1,     2,     0,     1,     1,
       1,     1,     1,     0,     1,     0,     1,     1,     5,     0,
       3,     0,     2,     3,     0,     1,     2,     1,     1,     1,
       1,     3,     3,     3,     3,     0,     1,     0,     1,     0,
       1,     2,     1,     1,     2,     2,     2,     4,     3,     1,
       3,     2,     1,     2,     1,     2,     2,     2,     2,     3,
       2,     2,     2,     1,     0,     3,     1,     1,     1,     1,
       1,     1,     2,     1,     1,     2,     1,     1,     1,     0,
       2,     1,     1,     1,     1,     1,     1,     0,     2,     0,
       1,     1,     2,     2,     1,     2,     2,     0,     1,     1,
       1,     3,     1,     3,     0,     1,     0,     4,     0,     1,
       5,     0,     3,     3,     1,     0,     2,     2,     2,     0,
       3,     3,     6,     6,     1,     1,     2,     2,     2,     2,
       2,     1,     1,     0,     1,     1,     1,     1,     0,     1,
       1,     2,     1,     2,     2,     3,     2,     3,     0,     1,
       1,     2,     1,     3,     0,     1,     1,     2,     1,     0,
       1,     1,     2,     1,     1,     3,     2,     1,     1,     3,
       3,     0,     1,     2,     2,     1,     1,     1,     1,     1,
       3,     1,     2,     5,     3,     1,     1,     4,     0,     1,
       0,     2,     1,     3,     4,     4,     0,     5,     0,     5,
       0,     5,     0,     5,     0,     4,     0,    10,     7,     6,
       6,     6,     4,     7,     7,     5,     8,     7,     5,     5,
       5,     5,     0,     2,     8,     3,     0,     1,     1,     2,
       2,     2,     2,     5,     3,     3,     3,     3,     5,     4,
       3,     4,     4,     2,     2,     2,     0,     2,     2,     1,
       2,     2,     2,     2,     3,     0,     3,     1,     4,     0,
       3,     0,     2,     0,     1,     1,     2,     1,     3,     1,
       2,     0,     1,     1,     3,     2,     2,     3,     6,     5,
       3,     4,     4,     4,     4,     5,     4,     3,     3,     8,
       7,     4,     4,     1,     1,     0,     1,     2,     2,     1,
       1,     1,     3,     3,     1,     3,     1,     3,     6,     5,
       2,     6,     5,     4,     4,     3,     3,     3,     3,     2,
       2,     6,     8,     5,     4,     4,     4,     3,     5,     5,
       5,     5,     1,     3,     1,     1,     1,     0,     1,     1,
       2,     2,     3,     1,     1,     3,     1,     1,     0,     1,
       0,     1,     0,     1,     1,     0,     2,     1,     0,     1,
       1,     1,     2,     2,     2,     4,     3,     0,     4,     3,
       0,     1,     1,     3,     3,     6,     2,     2,     4,     0,
       3,     0,     3,     0,     3,     0,     3,     0,     1,     1,
       3,     1,     1,     0,     2,     1,     3,     3,     3,     1,
       4,     0,     1,     1,     5,     0,     1,     1,     2,     1,
       1,     1,     5,     0,     3,     0,     5,     4,     2,     4,
       0,     1,     1,     2,     1,     1,     1,     1,     1,     2,
       4,     0,     1,     1,     0,     4,     3,     3,     5,     1,
       3,     3,     5,     7,     1,     3,     2,     1,     1,     8,
       5,     1,     3,     3,     4,     0,     4,     0,     2,     1,
       2,     1,     1,     3,     2,     3,     3,     3,     4,     3,
       4,     2,     3,     2,     1,     4,     4,     4,     4,     3,
       3,     4,     1,     1,     1,     9,     8,     0,     1,     2,
       1,     1,     1,     3,     2,     2,     0,     1,     2,     1,
       1,     1,     2,     1,     3,     4,     4,     1,     1,     2,
       0,     1,     2,     1,     3,     1,     1,     1,     2,     0,
       2,     2,     1,     1,     0,     2,     3,     3,     3,     2,
       3,     4,     3,     4,     3,     4,     1,     3,     4,     3,
       4,     1,     3,     4,     5,     7,     6,     8,     6,     5,
       6,     4,     3,     5,     4,     6,     3,     4,     1,     1,
       0,     3,     3,     3,     3,     3,     3,     5,     5,     3,
       3,     3,     3,     3,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       1,     1,     1,     1,     3,     2,     2,     2,     2,     1,
       3,     5,     6,     2,     4,     7,     2,     7,     5,     6,
       6,     4,     4,     5,     3,     3,     0,     1,     4,     6,
       2,     4,     4,     4,    10,     6,     8,     6,     4,     4,
       6,     4,     4,     4,     6,     4,     7,     7,     7,     6,
       6,     6,     6,     3,     4,     6,     8,     2,     2,     8,
       8,     6,     6,     1,     6,     6,     8,     8,     6,     8,
       6,     2,     8,     8,     2,     2,     2,     4,     4,     4,
       4,     3,     8,     6,     8,     4,     6,     4,     6,     8,
       4,     3,     6,     4,     6,     4,     7,     7,    10,     1,
       4,     4,     4,     4,     4,     6,     4,     4,     6,     2,
       3,     0,     4,     0,     3,     0,     1,     1,     3,     2,
       1,     1,     5,     6,     5,     5,     5,     7,     5,     6,
       5,     6,     5,     6,     5,     6,     5,     5,     5,     5,
       5,     6,     8,     4,     4,     4,     4,     4,     5,     7,
       7,     6,     6,     9,     0,     3,     3,     0,     2,     0,
       2,     2,     0,     2,     2,     0,     1,     2,     1,     1,
       1,     3,     4,     0,     1,     0,     3,     0,     3,     0,
       3,     1,     1,     2,     2,     2,     4,     2,     4,     1,
       2,     2,     2,     4,     0,     3,     2,     2,     3,     1,
       1,     1,     4,     2,     3,     1,     4,     0,     1,     0,
       2,     0,     3,     3,     1,     2,     2,     3,     2,     1,
       2,     1,     2,     1,     2,     2,     2,     1,     1,     2,
       0,     1,     1,     3,     1,     3,     1,     3,     0,     1,
       0,     2,     4,     5,     1,     1,     4,     1,     1,     5,
       7,     5,     7,     3,     3,     3,     4,     4,     1,     2,
       2,     1,     3,     3,     0,     1,     0,     1,     0,     1,
       4,     1,     1,     1,     1,     1,     1,     3,     5,     3,
       3,     4,     3,     3,     3,     4,     8,     4,     1,     3,
       3,     7,     4,     0,     1,     0,     1,     1,     2,     2,
       3,     3,     1,     1,     2,     0,     2,     3,     3,     1,
       1,     6,     6,     1,     2,     0,     1,     1,     0,     1,
       1,     1,     1,     3,     1,     1,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     1,     0,     2,     0,     1,     0,     1,
       2,     0,     2,     2,     3,     3,     1,     4,     0,     3,
       1,     3,     0,     2,     1,     3,     3,     0,     4,     3,
       1,     0,     1,     3,     1,     2,     0,     1,     3,     3,
       1,     0,     1,     1,     1,     0,     1,     2,     1,     3,
       3,     1,     1,     1,     1,     1,     0,     2,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     2,     1,     2,     5,     2,     1,
       2,     6,     6,     4,     6,     4,     5,     4,     4,     5,
       4,     4,     4,     5,     5,     4,     4,     6,     4,     1,
       3,     1,     3,     0,     2,     0,     1,     0,     1,     1,
       3,     1,     1,     9,    10,     8,     6,     7,     6,     0,
       1,     1,     1,     1,     1,     0,     1,     1,     3,     4,
       1,     3,     4,     3,     1,     2,     1,     2,     1,     1,
       1,     3,     1,     3,     1,     1,     1,     0,     1,     3,
       4,     0,     1,     3,     1,     1,     1,     0,     3,     0,
       5,    10,     0,     1,     3,     1,     3,     0,     1,    10,
       7,     8,     0,     2,     0,     2,     1,     1,     1,     3,
       0,     1,     0,     1,     1,     3,     1,     1,     2,     2,
       2,     1,     1,     1,     1,     0,     3,     0,     3,     2,
       4,     4,     3,     4,     4,     1,     3,     3,     6,     2,
       2,     0,     6,     0,     7,     6,     2,     5,     5,     2,
       2,     1,     4,     3,     2,     3,     2,     2,     1,     1,
       3,     5,     2,     4,     6,     4,     3,     3,     2,     3,
       2,     2,     2,     2,     2,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     1,     1,     1,     1,     1,     0,
       1,     0,     2,     0,     1,     0,     1,     0,     1,     1,
       2,     1,     1,     0,     2,     0,     2,     0,     2,     1,
       3,     3,     1,     1,     1,     1,     1,     3,     1,     1,
       0,     3,     1,     0,     1,     1,     0,     4,     0,     4,
       1,     0,     3,     0,     3,     3,     1,     2,     2,     2,
       2,     2,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     1,     0,     3,     3,
       3,     1,     0,     2,     0,     4,     0,     3,     1,     0,
       1,     0,     2,     0,     3,     3,     3,     2,     2,     3,
       0,     1,     1,     2,    18,     1,     1,     0,     1,     0,
       1,     1,     0,     1,     1,     1,     0,     2,     2,     1,
       3,     4,     3,     3,     0,     2,     2,     1,     3,     3,
       0,     4,     0,     3,     1,     1,     0,     3,     2,     3,
       1,     1,     2,     0,     2,     3,     1,     3,     1,     1,
       2,     2,     1,     1,     1,     1,     1,     2,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     1,
       1,     1,     1,     1,     2,     2,     2,     1,     1,     3,
       5,     2,     1,     1,     1,     1,     1,     3,     5,     1,
       3,     2,     4,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       1,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     2,     2,     2,     5,     5,
       7,     7,     3,     3,     3,     6,     6,     6,     4,     0,
       2,     4,     6,     1,     3,     1,     2,     2,     0,     2,
       1,     3,     2,     1,     1,     1,     1,     1,     1,     0,
       1,     1,     1,     0,     2,     2,     2,     0,     2,     2,
       2,     2,     2,     3,     3,     4,     6,     2,     3,     3,
       2,     1,     3,     3,     2,     2,     1,     0,     2,     3,
       0,     2,     2,     2,     2,     2,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     2,     3,     0,     3,
       3,     1,     1,     1,     3,     3,     1,     1,     2,     2,
       2,     1,     1,     1,     1,     3,     4,     2,     6,     4,
       3,     6,     7,    10,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     4,     7,     0,     9,     8,
       6,     5,     9,     0,    11,     7,     0,     1,     1,     1,
       0,     1,     1,     3,     2,     3,     2,     2,     2,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     1,     3,     2,     2,     2,     2,     2,
       2,     2,     2,     1,     1,     2,     2,     2,     0,     3,
       0,     1,     3,     1,     2,     2,     2,     1,     3,     3,
       1,     3,     1,     3,     1,     3,     0,     3,     0,     3,
       4,     5,     4,     6,     6,     7,     1,     7,     9,     5,
       6,     8,     4,     7,     7,     8,     2,     1,     3,     1,
       3,     0,     3,     1,     3,     0,     2,     2,     2,     2,
       0,     3,     0,     3,     0,     3,     4,     3,     3,     0,
       3,     0,     3,     0,     1,     0,     3,     2,     0,     1,
       2,     0,     1,     4,     4,     5,     2,     3,     0,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     3,     3,     4,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       3,     1,     2,     1,     2,     3,     3,     3,     0,     3,
       3,     0,     7,     2,     0,     3,     4,     4,     1,     1,
       0,     2,     0,    12,     7,     6,     0,     0,     0,     0,
      14,     0,     0,     0,     0,    11,     4,     4,     3,     4,
       3,     3,     0,     2,     1,     3,     5,     1,     1,     0,
       1,     1,     0,     2,     0,     1,     3,     5,     3,     3,
       3,     1,     3,     4,     6,    10,     1,     5,     0,     2,
       3,     1,     1,     0,     3,     1,     3,     1,     3,     1,
       2,     0,     3,     0,     1,     1,     0,     1
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error: cannot back up")); \
      YYERROR;                                                  \
    }                                                           \
while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)                                \
    do                                                                  \
      if (N)                                                            \
        {                                                               \
          (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \
          (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \
          (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \
          (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).first_line   = (Current).last_line   =              \
            YYRHSLOC (Rhs, 0).last_line;                                \
          (Current).first_column = (Current).last_column =              \
            YYRHSLOC (Rhs, 0).last_column;                              \
        }                                                               \
    while (0)
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K])


/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL

/* Print *YYLOCP on YYO.  Private, do not rely on its existence. */

YY_ATTRIBUTE_UNUSED
static unsigned
yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)
{
  unsigned res = 0;
  int end_col = 0 != yylocp->last_column ? yylocp->last_column - 1 : 0;
  if (0 <= yylocp->first_line)
    {
      res += YYFPRINTF (yyo, "%d", yylocp->first_line);
      if (0 <= yylocp->first_column)
        res += YYFPRINTF (yyo, ".%d", yylocp->first_column);
    }
  if (0 <= yylocp->last_line)
    {
      if (yylocp->first_line < yylocp->last_line)
        {
          res += YYFPRINTF (yyo, "-%d", yylocp->last_line);
          if (0 <= end_col)
            res += YYFPRINTF (yyo, ".%d", end_col);
        }
      else if (0 <= end_col && yylocp->first_column < end_col)
        res += YYFPRINTF (yyo, "-%d", end_col);
    }
  return res;
 }

#  define YY_LOCATION_PRINT(File, Loc)          \
  yy_location_print_ (File, &(Loc))

# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, Location, YYTHD, parse_tree); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*----------------------------------------.
| Print this symbol's value on YYOUTPUT.  |
`----------------------------------------*/

static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  YYUSE (yytype);
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYFPRINTF (yyoutput, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD, parse_tree);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  unsigned long int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[yyssp[yyi + 1 - yynrhs]],
                       &(yyvsp[(yyi + 1) - (yynrhs)])
                       , &(yylsp[(yyi + 1) - (yynrhs)])                       , YYTHD, parse_tree);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, yylsp, Rule, YYTHD, parse_tree); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
yystrlen (const char *yystr)
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            /* Fall through.  */
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (class THD *YYTHD, class Parse_tree_root **parse_tree)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

/* Location data for the lookahead symbol.  */
static YYLTYPE yyloc_default
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  = { 1, 1, 1, 1 }
# endif
;
YYLTYPE yylloc = yyloc_default;

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.
       'yyls': related to locations.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    /* The location stack.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls;
    YYLTYPE *yylsp;

    /* The locations where the error started and ended.  */
    YYLTYPE yyerror_range[3];

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yylsp = yyls = yylsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  yylsp[0] = yylloc;
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        YYSTYPE *yyvs1 = yyvs;
        yytype_int16 *yyss1 = yyss;
        YYLTYPE *yyls1 = yyls;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * sizeof (*yyssp),
                    &yyvs1, yysize * sizeof (*yyvsp),
                    &yyls1, yysize * sizeof (*yylsp),
                    &yystacksize);

        yyls = yyls1;
        yyss = yyss1;
        yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yytype_int16 *yyss1 = yyss;
        union yyalloc *yyptr =
          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
        YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
                  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, &yylloc, YYTHD);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 3:
#line 1998 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
            static_cast<Expression_parser_state *>(YYP)->result= (yyvsp[-1].item);
          }
#line 23334 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 4:
#line 2003 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating partition info string into
              partition_info data structure.
            */
            CONTEXTUALIZE((yyvsp[-1].partition_clause));
            static_cast<Partition_expr_parser_state *>(YYP)->result=
              &(yyvsp[-1].partition_clause)->part_info;
          }
#line 23348 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 5:
#line 2013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating generated column info string into
              partition_info data structure.
            */

            // Check gcol expression for the "PARSE_GCOL_EXPR" prefix:
            if (!is_identifier((yyvsp[-4].lexer.lex_str), "PARSE_GCOL_EXPR"))
              MYSQL_YYABORT;

            auto gcol_info= NEW_PTN Value_generator;
            if (gcol_info == NULL)
              MYSQL_YYABORT; // OOM
            ITEMIZE((yyvsp[-2].item), &(yyvsp[-2].item));
            gcol_info->expr_item= (yyvsp[-2].item);
            static_cast<Gcol_expr_parser_state *>(YYP)->result= gcol_info;
          }
#line 23370 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 6:
#line 2031 "sql_yacc.yy" /* yacc.c:1646  */
    {
            static_cast<Common_table_expr_parser_state *>(YYP)->result= (yyvsp[-1].subquery);
          }
#line 23378 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 7:
#line 2038 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            if (!thd->is_bootstrap_system_thread() &&
                !thd->m_parser_state->has_comment())
            {
              my_error(ER_EMPTY_QUERY, MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 23394 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 8:
#line 2050 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip = YYLIP;

            if (YYTHD->get_protocol()->has_client_capability(CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 23421 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 10:
#line 2075 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 23430 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 13:
#line 2087 "sql_yacc.yy" /* yacc.c:1646  */
    { *parse_tree= (yyvsp[0].top_level_node); }
#line 23436 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 15:
#line 2093 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23442 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 16:
#line 2094 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23448 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 17:
#line 2095 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23454 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 19:
#line 2097 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23460 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 20:
#line 2098 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23466 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 22:
#line 2100 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23472 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 23:
#line 2101 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23478 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 24:
#line 2102 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23484 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 26:
#line 2104 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23490 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 27:
#line 2105 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23496 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 29:
#line 2107 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23502 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 31:
#line 2109 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23508 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 33:
#line 2111 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23514 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 34:
#line 2112 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23520 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 35:
#line 2113 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23526 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 36:
#line 2114 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23532 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 42:
#line 2120 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23538 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 46:
#line 2124 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23544 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 47:
#line 2125 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23550 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 48:
#line 2126 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23556 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 50:
#line 2128 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23562 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 51:
#line 2129 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23568 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 54:
#line 2132 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23574 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 56:
#line 2134 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23580 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 57:
#line 2135 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23586 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 58:
#line 2136 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23592 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 59:
#line 2137 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23598 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 60:
#line 2138 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23604 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 61:
#line 2139 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23610 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 62:
#line 2140 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23616 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 64:
#line 2142 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23622 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 65:
#line 2143 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23628 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 66:
#line 2144 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23634 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 67:
#line 2145 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23640 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 69:
#line 2147 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23646 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 70:
#line 2148 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23652 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 72:
#line 2150 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23658 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 73:
#line 2151 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23664 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 75:
#line 2153 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23670 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 79:
#line 2157 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23676 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 80:
#line 2158 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23682 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 81:
#line 2159 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23688 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 82:
#line 2160 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23694 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 85:
#line 2163 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23700 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 86:
#line 2164 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23706 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 88:
#line 2166 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23712 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 89:
#line 2167 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23718 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 90:
#line 2168 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23724 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 92:
#line 2170 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; CONTEXTUALIZE((yyvsp[0].set)); }
#line 23730 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 95:
#line 2173 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23736 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 96:
#line 2174 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23742 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 98:
#line 2176 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23748 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 99:
#line 2177 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23754 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 101:
#line 2179 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23760 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 102:
#line 2180 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23766 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 104:
#line 2182 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23772 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 105:
#line 2183 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23778 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 106:
#line 2188 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 23789 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 109:
#line 2203 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[-2].lexer.lex_str));
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
#line 23810 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 110:
#line 2223 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= false;
          }
#line 23821 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 111:
#line 2230 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= true;
          }
#line 23832 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 112:
#line 2240 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 23843 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 113:
#line 2247 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23849 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 118:
#line 2262 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[0].lexer.lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
#line 23860 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 119:
#line 2274 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
#line 23872 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 120:
#line 2282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lexer.lex_str).str;
          }
#line 23882 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 121:
#line 2293 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is cleared
              in THD::cleanup_after_query. So it is guaranteed to be empty here.
            */
            DBUG_ASSERT(Lex->mi.repl_ignore_server_ids.empty());
            lex->mi.set_unspecified();
          }
#line 23897 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 122:
#line 2304 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23903 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 123:
#line 2306 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 23917 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 124:
#line 2316 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23923 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 127:
#line 2325 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_DB);
          }
#line 23934 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 128:
#line 2332 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_DB);
          }
#line 23945 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 129:
#line 2339 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
           filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_TABLE);
          }
#line 23956 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 130:
#line 2346 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_TABLE);
          }
#line 23967 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 131:
#line 2353 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_WILD_DO_TABLE);
          }
#line 23978 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 132:
#line 2360 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list),
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          }
#line 23990 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 133:
#line 2368 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_REWRITE_DB);
          }
#line 24001 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 134:
#line 2377 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 24011 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 135:
#line 2383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 24019 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 136:
#line 2390 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 24030 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 137:
#line 2397 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 24039 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 138:
#line 2405 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *db_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                               thd->charset());
            (yyval.item)= db_item;
          }
#line 24050 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 139:
#line 2414 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 24060 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 140:
#line 2420 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 24068 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 141:
#line 2426 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-3].item));
            (yyval.item_list)->push_back((yyvsp[-1].item));
          }
#line 24080 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 142:
#line 2434 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].item_list)->push_back((yyvsp[-3].item));
            (yyvsp[-6].item_list)->push_back((yyvsp[-1].item));
            (yyval.item_list)= (yyvsp[-6].item_list);
          }
#line 24090 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 143:
#line 2442 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 24100 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 144:
#line 2448 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 24108 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 145:
#line 2455 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 24119 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 146:
#line 2462 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 24128 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 147:
#line 2470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item_string *table_item= NEW_PTN Item_string((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length,
                                                         thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.item)= table_item;
          }
#line 24141 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 148:
#line 2482 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 24151 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 149:
#line 2488 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 24159 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 150:
#line 2495 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 24170 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 151:
#line 2502 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 24179 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 152:
#line 2510 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *string_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                                   thd->charset());
            (yyval.item)= string_item;
          }
#line 24190 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 155:
#line 2525 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.host = (yyvsp[0].lexer.lex_str).str;
          }
#line 24198 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 156:
#line 2529 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.network_namespace = (yyvsp[0].lexer.lex_str).str;
          }
#line 24206 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 157:
#line 2533 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.bind_addr = (yyvsp[0].lexer.lex_str).str;
          }
#line 24214 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 158:
#line 2537 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.user = (yyvsp[0].lexer.lex_str).str;
          }
#line 24222 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 159:
#line 2541 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.password = (yyvsp[0].lexer.lex_str).str;
            if (strlen((yyvsp[0].lexer.lex_str).str) > 32)
            {
              my_error(ER_CHANGE_MASTER_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
            Lex->contains_plaintext_password= true;
          }
#line 24236 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 160:
#line 2551 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 24244 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 161:
#line 2555 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 24252 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 162:
#line 2559 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.retry_count= (yyvsp[0].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 24261 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 163:
#line 2564 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake((yylsp[0]).cpp.start, (yylsp[0]).cpp.end - (yylsp[0]).cpp.start);
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 24276 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 164:
#line 2575 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 24285 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 165:
#line 2580 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_ca= (yyvsp[0].lexer.lex_str).str;
          }
#line 24293 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 166:
#line 2584 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_capath= (yyvsp[0].lexer.lex_str).str;
          }
#line 24301 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 167:
#line 2588 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_version= (yyvsp[0].lexer.lex_str).str;
          }
#line 24309 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 169:
#line 2593 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cert= (yyvsp[0].lexer.lex_str).str;
          }
#line 24317 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 170:
#line 2597 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cipher= (yyvsp[0].lexer.lex_str).str;
          }
#line 24325 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 171:
#line 2601 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_key= (yyvsp[0].lexer.lex_str).str;
          }
#line 24333 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 172:
#line 2605 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 24342 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 173:
#line 2610 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crl= (yyvsp[0].lexer.lex_str).str;
          }
#line 24350 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 174:
#line 2614 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crlpath= (yyvsp[0].lexer.lex_str).str;
          }
#line 24358 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 175:
#line 2618 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.public_key_path= (yyvsp[0].lexer.lex_str).str;
          }
#line 24366 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 176:
#line 2622 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.get_public_key= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 24376 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 177:
#line 2628 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *num= (yyvsp[0].item_num);
            ITEMIZE(num, &num);

            Lex->mi.heartbeat_period= (float) num->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > slave_net_timeout)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning(YYTHD, Sql_condition::SL_WARNING,
                             ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 24414 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 178:
#line 2662 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 24422 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 179:
#line 2666 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.compression_algorithm = (yyvsp[0].lexer.lex_str).str;
           }
#line 24430 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 180:
#line 2670 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.zstd_compression_level = (yyvsp[0].ulong_num);
           }
#line 24438 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 181:
#line 2674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.auto_position= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 24448 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 183:
#line 2681 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) != 0 && (yyvsp[0].ulong_num) != 1) {
              const char* wrong_value = YYTHD->strmake((yylsp[0]).raw.start, (yylsp[0]).raw.length());
              my_error(ER_REQUIRE_ROW_FORMAT_INVALID_VALUE, MYF(0), wrong_value);
            }
            else {
              Lex->mi.require_row_format = (yyvsp[0].ulong_num);
            }
          }
#line 24462 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 188:
#line 2701 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids.push_back((yyvsp[0].ulong_num));
          }
#line 24470 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 189:
#line 2707 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= false;
            Lex->mi.privilege_checks_username= (yyvsp[0].lex_user)->user.str;
            Lex->mi.privilege_checks_hostname= (yyvsp[0].lex_user)->host.str;
          }
#line 24480 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 190:
#line 2713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= true;
            Lex->mi.privilege_checks_username= NULL;
            Lex->mi.privilege_checks_hostname= NULL;
          }
#line 24490 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 191:
#line 2722 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_STRING;
            Lex->mi.tls_ciphersuites_string= (yyvsp[0].lexer.lex_str).str;
          }
#line 24499 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 192:
#line 2727 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_NULL;
            Lex->mi.tls_ciphersuites_string = NULL;
          }
#line 24508 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 193:
#line 2735 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.log_file_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 24516 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 194:
#line 2739 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.pos = (yyvsp[0].ulonglong_number);
            /*
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors.
               We need to do it in this file, because only there we know that
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
#line 24536 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 195:
#line 2755 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 24544 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 196:
#line 2759 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
#line 24555 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 197:
#line 2769 "sql_yacc.yy" /* yacc.c:1646  */
    {
         Lex->mi.channel= "";
         Lex->mi.for_channel= false;
       }
#line 24564 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 198:
#line 2774 "sql_yacc.yy" /* yacc.c:1646  */
    {
         /*
           channel names are case insensitive. This means, even the results
           displayed to the user are converted to lower cases.
           system_charset_info is utf8_general_ci as required by channel name
           restrictions
         */
         my_casedn_str(system_charset_info, (yyvsp[0].lexer.lex_str).str);
         Lex->mi.channel= (yyvsp[0].lexer.lex_str).str;
         Lex->mi.for_channel= true;
       }
#line 24580 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 199:
#line 2790 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table),
                                             (yyvsp[-2].table_element_list),
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 24593 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 200:
#line 2800 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].is_not_empty), (yyvsp[-2].is_not_empty), (yyvsp[-1].table),
                                             NULL,
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 24606 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 201:
#line 2810 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].is_not_empty), (yyvsp[-3].is_not_empty), (yyvsp[-2].table), (yyvsp[0].table));
          }
#line 24614 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 202:
#line 2815 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table), (yyvsp[-1].table));
          }
#line 24622 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 203:
#line 2822 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_role(!!(yyvsp[-1].is_not_empty), (yyvsp[0].user_list));
          }
#line 24630 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 204:
#line 2832 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_resource_group(to_lex_cstring((yyvsp[-6].lexer.lex_str)), (yyvsp[-3].resource_group_type), (yyvsp[-2].resource_group_vcpu_list_type), (yyvsp[-1].resource_group_priority_type),
                                                 (yyvsp[0].resource_group_state_type).is_default ? true :
                                                 (yyvsp[0].resource_group_state_type).value);
          }
#line 24640 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 205:
#line 2841 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 24652 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 206:
#line 2849 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            lex->create_info->options= (yyvsp[-3].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 24663 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 207:
#line 2856 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24669 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 208:
#line 2860 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CREATE_USER;
            lex->default_roles= (yyvsp[-3].user_list);
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            lex->create_info->options= (yyvsp[-5].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 24683 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 209:
#line 2871 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{CREATE_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 24706 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 210:
#line 2891 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_tablespace{(yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 24728 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 211:
#line 2910 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_undo_tablespace{
              CREATE_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 24751 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 212:
#line 2930 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            if ((yyvsp[-8].lexer.lex_str).length == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "server name", "");
              MYSQL_YYABORT;
            }
            Lex->server_options.m_server_name= (yyvsp[-8].lexer.lex_str);
            Lex->server_options.set_scheme((yyvsp[-4].lexer.lex_str));
            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_create_server(&Lex->server_options);
          }
#line 24768 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 213:
#line 2944 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_COMPRESSION_DICTIONARY;
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == nullptr)
              MYSQL_YYABORT; // OOM
            Lex->create_info->options= (yyvsp[-4].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            Lex->ident= (yyvsp[-3].lexer.lex_str);
            Lex->create_info->zip_dict_name = (yyvsp[-1].item);
          }
#line 24782 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 214:
#line 2958 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), true, false);
          }
#line 24790 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 215:
#line 2963 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), false, (yyvsp[-2].is_not_empty));
          }
#line 24798 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 216:
#line 2970 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sql_cmd_srs_attributes) = NEW_PTN Sql_cmd_srs_attributes();
            if (!(yyval.sql_cmd_srs_attributes))
              MYSQL_YYABORT_ERROR(ER_DA_OOM, MYF(0)); /* purecov: inspected */
          }
#line 24808 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 217:
#line 2976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->srs_name.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "NAME");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->srs_name= (yyvsp[0].lexer.lex_str);
            }
          }
#line 24824 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 218:
#line 2988 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->definition.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DEFINITION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->definition= (yyvsp[0].lexer.lex_str);
            }
          }
#line 24840 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 219:
#line 3001 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-5].sql_cmd_srs_attributes)->organization.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "ORGANIZATION");
            }
            else
            {
              (yyvsp[-5].sql_cmd_srs_attributes)->organization= (yyvsp[-3].lexer.lex_str);
              (yyvsp[-5].sql_cmd_srs_attributes)->organization_coordsys_id= (yyvsp[0].ulonglong_number);
            }
          }
#line 24857 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 220:
#line 3014 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->description.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DESCRIPTION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->description= (yyvsp[0].lexer.lex_str);
            }
          }
#line 24873 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 221:
#line 3029 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= 0;
          }
#line 24881 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 222:
#line 3034 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[0].user_list);
          }
#line 24889 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 223:
#line 3043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, (yyvsp[-10].key_type), (yyvsp[-8].lexer.lex_str), (yyvsp[-7].index_option),
                                             (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 24900 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 224:
#line 3051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_FULLTEXT, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 24911 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 225:
#line 3059 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_SPATIAL, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 24922 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 226:
#line 3072 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].text_literal), &(yyval.item)); }
#line 24928 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 227:
#line 3074 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));
            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    CREATE COMPRESSION_DICTIONARY <dict>(@foo := expr)
                */
                my_error(ER_SYNTAX_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 24950 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 230:
#line 3100 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_username((yyvsp[0].lexer.lex_str));
          }
#line 24958 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 231:
#line 3104 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_host((yyvsp[0].lexer.lex_str));
          }
#line 24966 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 232:
#line 3108 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_db((yyvsp[0].lexer.lex_str));
          }
#line 24974 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 233:
#line 3112 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_owner((yyvsp[0].lexer.lex_str));
          }
#line 24982 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 234:
#line 3116 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_password((yyvsp[0].lexer.lex_str));
            Lex->contains_plaintext_password= true;
          }
#line 24991 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 235:
#line 3121 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_socket((yyvsp[0].lexer.lex_str));
          }
#line 24999 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 236:
#line 3125 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_port((yyvsp[0].ulong_num));
          }
#line 25007 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 237:
#line 3132 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            if (!(lex->event_parse_data= new (thd->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 25027 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 238:
#line 3152 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 25039 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 239:
#line 3163 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));

            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 25050 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 241:
#line 3172 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 25060 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 242:
#line 3180 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 25066 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 243:
#line 3182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 25076 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 244:
#line 3188 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 25086 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 245:
#line 3194 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 25096 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 246:
#line 3203 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 25107 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 247:
#line 3210 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 25117 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 249:
#line 3220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 25127 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 250:
#line 3228 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 25133 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 252:
#line 3234 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 25143 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 253:
#line 3240 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
#line 25153 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 254:
#line 3248 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 25159 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 255:
#line 3250 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->comment= (yyvsp[0].lexer.lex_str);
            (yyval.num)= 1;
          }
#line 25168 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 256:
#line 3257 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          enum_sp_type::EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 25218 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 257:
#line 3303 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= true;
          }
#line 25232 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 271:
#line 3332 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-2].lexer.lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
#line 25250 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 272:
#line 3346 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_CSTRING db;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new (YYMEM_ROOT) sp_name(db, (yyvsp[0].lexer.lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
#line 25270 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 273:
#line 3364 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25276 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 274:
#line 3365 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25282 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 275:
#line 3369 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25288 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 276:
#line 3370 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25294 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 277:
#line 3376 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 25300 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 278:
#line 3378 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Just parse it, we only have one language for now. */ }
#line 25306 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 279:
#line 3380 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 25312 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 280:
#line 3382 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 25318 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 281:
#line 3384 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 25324 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 282:
#line 3386 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 25330 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 283:
#line 3388 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25336 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 284:
#line 3393 "sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 25342 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 285:
#line 3394 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= true; }
#line 25348 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 286:
#line 3395 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= false; }
#line 25354 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 287:
#line 3400 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
#line 25362 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 288:
#line 3404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
#line 25370 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 289:
#line 3411 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_call((yyvsp[-2].lexer.optimizer_hints), (yyvsp[-1].spname), (yyvsp[0].item_list2));
          }
#line 25378 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 290:
#line 3417 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 25384 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 291:
#line 3419 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.item_list2)= (yyvsp[-1].item_list2);
            }
#line 25392 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 296:
#line 3437 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   sp_variable::MODE_IN);

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(), nullptr,
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.maybe_null= true;
          }
#line 25444 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 301:
#line 3499 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   (sp_variable::enum_mode) (yyvsp[-3].num));

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(), nullptr,
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.maybe_null= true;
          }
#line 25495 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 302:
#line 3548 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 25501 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 303:
#line 3549 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 25507 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 304:
#line 3550 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_OUT; }
#line 25513 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 305:
#line 3551 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_INOUT; }
#line 25519 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 306:
#line 3555 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25525 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 308:
#line 3560 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25531 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 310:
#line 3566 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 25539 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 311:
#line 3570 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[-1].spblock).vars || (yyvsp[-1].spblock).conds) && ((yyvsp[-2].spblock).curs || (yyvsp[-2].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_error(ER_SP_VARCOND_AFTER_CURSHNDLR, MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[-1].spblock).curs && (yyvsp[-2].spblock).hndlrs)
            { /* Cursor following handler */
              my_error(ER_SP_CURSOR_AFTER_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[-2].spblock).vars + (yyvsp[-1].spblock).vars;
            (yyval.spblock).conds= (yyvsp[-2].spblock).conds + (yyvsp[-1].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[-2].spblock).hndlrs + (yyvsp[-1].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[-2].spblock).curs + (yyvsp[-1].spblock).curs;
          }
#line 25564 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 312:
#line 3598 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            lex= thd->lex;

            pctx->declare_var_boundary((yyvsp[-3].num));

            CONTEXTUALIZE((yyvsp[-2].type));
            enum enum_field_types var_type= (yyvsp[-2].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-2].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[-1].lexer.charset), &cs))
              MYSQL_YYABORT;

            uint num_vars= pctx->context_var_count();
            Item *dflt_value_item= (yyvsp[0].sp_default).expr;

            LEX_CSTRING dflt_value_query= EMPTY_CSTR;

            if (dflt_value_item)
            {
              ITEMIZE(dflt_value_item, &dflt_value_item);
              const char *expr_start_ptr= (yyvsp[0].sp_default).expr_start;
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              (yylsp[0]).raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= NEW_PTN Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[-3].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (spvar->field_def.init(thd, "", var_type,
                                        (yyvsp[-2].type)->get_length(), (yyvsp[-2].type)->get_dec(),
                                        (yyvsp[-2].type)->get_type_flags(),
                                        NULL, NULL, &NULL_CSTR, 0,
                                        (yyvsp[-2].type)->get_interval_list(),
                                        cs ? cs : thd->variables.collation_database,
                                        (yyvsp[-1].lexer.charset) != nullptr, (yyvsp[-2].type)->get_uint_geom_type(), nullptr,
                                        nullptr, nullptr, {},
                                        dd::Column::enum_hidden_type::HT_VISIBLE))
              {
                MYSQL_YYABORT;
              }

              if (prepare_sp_create_field(thd, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.maybe_null= true;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is= NEW_PTN sp_instr_set(sp->instructions(),
                                                     lex,
                                                     var_idx,
                                                     dflt_value_item,
                                                     dflt_value_query,
                                                     (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[-3].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 25663 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 313:
#line 3693 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[-3].lexer.lex_str), true))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[-3].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[-3].lexer.lex_str), (yyvsp[0].spcondvalue)))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 25684 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 314:
#line 3710 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[-2].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              NEW_PTN sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[-2].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_CSTR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          }
#line 25729 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 315:
#line 3751 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[-5].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 25767 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 316:
#line 3788 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr((yylsp[0]).raw.end);
          }
#line 25780 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 317:
#line 3797 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$7*/
            MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            DBUG_ASSERT(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_error(ER_SP_BAD_CURSOR_SELECT, MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[-4].lexer.lex_str), &offp, true))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_CSTRING cursor_query= EMPTY_CSTR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              NEW_PTN sp_instr_cpush(sp->instructions(), pctx,
                                     cursor_lex, cursor_query,
                                     pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[-4].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 25845 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 318:
#line 3860 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 25851 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 319:
#line 3861 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 25857 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 320:
#line 3867 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 25863 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 321:
#line 3869 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)+= 1; }
#line 25869 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 322:
#line 3874 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[0].spcondvalue)))
            {
              my_error(ER_SP_DUP_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[0].spcondvalue));
            }
          }
#line 25893 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 323:
#line 3897 "sql_yacc.yy" /* yacc.c:1646  */
    { /* mysql errno */
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 25908 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 325:
#line 3912 "sql_yacc.yy" /* yacc.c:1646  */
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[0].lexer.lex_str)) || is_sqlstate_completion((yyvsp[0].lexer.lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].lexer.lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 25931 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 326:
#line 3933 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25937 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 327:
#line 3934 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25943 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 328:
#line 3939 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 25951 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 329:
#line 3943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 25968 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 330:
#line 3956 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 25978 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 331:
#line 3962 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 25988 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 332:
#line 3968 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 25998 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 333:
#line 3977 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_signal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 26012 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 334:
#line 3990 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
#line 26042 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 335:
#line 4016 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 26048 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 336:
#line 4021 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= NULL; }
#line 26054 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 337:
#line 4023 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 26060 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 338:
#line 4028 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= NEW_PTN Set_signal_information(); }
#line 26066 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 339:
#line 4030 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= (yyvsp[0].signal_item_list); }
#line 26072 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 340:
#line 4035 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= NEW_PTN Set_signal_information();
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 26082 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 341:
#line 4042 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= (yyvsp[-4].signal_item_list);
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 26092 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 342:
#line 4054 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 26098 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 343:
#line 4056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                YYTHD->syntax_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 26122 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 344:
#line 4076 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 26128 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 345:
#line 4082 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CLASS_ORIGIN; }
#line 26134 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 346:
#line 4084 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SUBCLASS_ORIGIN; }
#line 26140 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 347:
#line 4086 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_CATALOG; }
#line 26146 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 348:
#line 4088 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_SCHEMA; }
#line 26152 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 349:
#line 4090 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_NAME; }
#line 26158 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 350:
#line 4092 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CATALOG_NAME; }
#line 26164 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 351:
#line 4094 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SCHEMA_NAME; }
#line 26170 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 352:
#line 4096 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_TABLE_NAME; }
#line 26176 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 353:
#line 4098 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_COLUMN_NAME; }
#line 26182 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 354:
#line 4100 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CURSOR_NAME; }
#line 26188 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 355:
#line 4102 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MESSAGE_TEXT; }
#line 26194 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 356:
#line 4104 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MYSQL_ERRNO; }
#line 26200 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 357:
#line 4109 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= NEW_PTN Sql_cmd_resignal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 26215 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 358:
#line 4123 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 26232 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 359:
#line 4139 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 26238 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 360:
#line 4141 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 26244 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 361:
#line 4143 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::STACKED_AREA; }
#line 26250 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 362:
#line 4148 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Statement_information((yyvsp[0].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 26260 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 363:
#line 4154 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 26270 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 364:
#line 4163 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_list)= NEW_PTN List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
          }
#line 26280 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 365:
#line 4169 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 26290 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 366:
#line 4178 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_item)= NEW_PTN Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 26300 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 367:
#line 4186 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, to_lex_cstring((yyvsp[0].lexer.lex_str)), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                (yylsp[0]).raw.start,
                (yylsp[0]).raw.end);

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 26332 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 368:
#line 4214 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_user_var((yyloc), (yyvsp[0].lexer.lex_str));
            ITEMIZE((yyval.item), &(yyval.item));
          }
#line 26341 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 369:
#line 4222 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 26347 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 370:
#line 4224 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 26353 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 371:
#line 4233 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 26359 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 372:
#line 4238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_list)= NEW_PTN List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
          }
#line 26369 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 373:
#line 4244 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 26379 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 374:
#line 4253 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_item)= NEW_PTN Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 26389 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 375:
#line 4261 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 26395 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 376:
#line 4263 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 26401 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 377:
#line 4265 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 26407 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 378:
#line 4267 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 26413 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 379:
#line 4269 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 26419 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 380:
#line 4271 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 26425 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 381:
#line 4273 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 26431 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 382:
#line 4275 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 26437 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 383:
#line 4277 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 26443 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 384:
#line 4279 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 26449 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 385:
#line 4281 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 26455 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 386:
#line 4283 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 26461 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 387:
#line 4285 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 26467 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 388:
#line 4290 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
#line 26491 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 389:
#line 4310 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 26515 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 390:
#line 4333 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= NULL;
            (yyval.sp_default).expr = NULL;
          }
#line 26524 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 391:
#line 4338 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= (yylsp[-1]).raw.end;
            (yyval.sp_default).expr= (yyvsp[0].item);
          }
#line 26533 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 405:
#line 4362 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
#line 26539 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 406:
#line 4364 "sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 26549 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 407:
#line 4372 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw.start);
          }
#line 26562 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 408:
#line 4381 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].top_level_node) != nullptr)
              MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT((lex->sql_command != SQLCOM_SET_OPTION &&
                         lex->sql_command != SQLCOM_SET_PASSWORD) ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION &&
                lex->sql_command != SQLCOM_SET_PASSWORD)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_CSTRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                NEW_PTN sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 26614 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 409:
#line 4432 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 26626 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 410:
#line 4440 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;

            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != enum_sp_type::FUNCTION)
            {
              my_error(ER_SP_BADRETURN, MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              NEW_PTN sp_instr_freturn(sp->instructions(), lex, (yyvsp[0].item), expr_query,
                                       sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 26676 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 411:
#line 4488 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_CSTR,
                             sp->instructions());
          }
#line 26691 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 412:
#line 4499 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 26704 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 413:
#line 4511 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            size_t n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 26762 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 414:
#line 4568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            size_t n= pctx->diff_handlers(lab->ctx, false);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, false);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 26810 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 415:
#line 4615 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i= NEW_PTN sp_instr_copen(sp->instructions(), pctx,
                                                      offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 26834 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 416:
#line 4638 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[-1].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[-1].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i= NEW_PTN sp_instr_cfetch(sp->instructions(),
                                                        pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 26858 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 417:
#line 4658 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26864 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 418:
#line 4663 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              NEW_PTN sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 26888 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 422:
#line 4692 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 26910 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 423:
#line 4710 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 26932 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 424:
#line 4730 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 26944 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 425:
#line 4738 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex,
                                           (yyvsp[0].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 26985 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 426:
#line 4776 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i = NEW_PTN sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_CSTR, 0));
          }
#line 27007 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 427:
#line 4794 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 27020 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 433:
#line 4817 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
          }
#line 27034 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 434:
#line 4827 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_CSTRING case_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              NEW_PTN sp_instr_set_case_expr(sp->instructions(), lex,
                                             case_expr_id, (yyvsp[0].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27080 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 435:
#line 4872 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$9*/
            case_stmt_action_end_case(Lex, true);
          }
#line 27088 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 436:
#line 4879 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_case(YYTHD);
          }
#line 27096 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 437:
#line 4886 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_end_case(Lex, false);
          }
#line 27104 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 442:
#line 4903 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 27116 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 443:
#line 4911 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            /* Simple case: <caseval> = <whenval> */

            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              NEW_PTN sp_instr_jump_case_when(sp->instructions(), lex,
                                              pctx->get_current_case_expr_id(),
                                              (yyvsp[0].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27161 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 444:
#line 4953 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 27170 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 445:
#line 4961 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 27182 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 446:
#line 4969 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item),
                                           when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27223 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 447:
#line 5007 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 27232 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 448:
#line 5015 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              NEW_PTN
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 27250 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 450:
#line 5033 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
#line 27272 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 451:
#line 5051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
#line 27293 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 452:
#line 5070 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= NULL_CSTR; }
#line 27299 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 453:
#line 5071 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= (yyvsp[0].lex_cstr); }
#line 27305 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 454:
#line 5076 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
#line 27325 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 455:
#line 5092 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
          }
#line 27344 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 456:
#line 5109 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_CSTR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
#line 27359 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 457:
#line 5120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
#line 27368 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 458:
#line 5128 "sql_yacc.yy" /* yacc.c:1646  */
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
#line 27385 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 459:
#line 5143 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[-2].spblock).hndlrs)
            {
              sp_instr *i= NEW_PTN sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[-2].spblock).curs)
            {
              sp_instr *i= NEW_PTN sp_instr_cpop(sp->instructions(), pctx,
                                                 (yyvsp[-2].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
#line 27419 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 460:
#line 5177 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 27436 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 461:
#line 5190 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 27448 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 462:
#line 5198 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27490 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 463:
#line 5239 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 27509 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 464:
#line 5256 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 27521 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 465:
#line 5264 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$6*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(ip, lex, (yyvsp[0].item), expr_query,
                                           pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
#line 27563 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 467:
#line 5307 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_BEFORE; }
#line 27569 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 468:
#line 5309 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_AFTER; }
#line 27575 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 469:
#line 5314 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_INSERT; }
#line 27581 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 470:
#line 5316 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_UPDATE; }
#line 27587 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 471:
#line 5318 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_DELETE; }
#line 27593 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 472:
#line 5332 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 27599 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 473:
#line 5334 "sql_yacc.yy" /* yacc.c:1646  */
    {
        (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
      }
#line 27607 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 474:
#line 5340 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 27613 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 475:
#line 5342 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
          }
#line 27621 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 476:
#line 5348 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 27627 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 478:
#line 5354 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27637 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 479:
#line 5360 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27647 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 491:
#line 5382 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 27653 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 493:
#line 5388 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27663 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 494:
#line 5394 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27673 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 502:
#line 5412 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 27679 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 504:
#line 5418 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 27689 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 505:
#line 5424 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 27699 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 507:
#line 5436 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 27705 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 509:
#line 5442 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27715 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 510:
#line 5448 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27725 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 518:
#line 5466 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 27731 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 520:
#line 5472 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27741 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 521:
#line 5478 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27751 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 525:
#line 5492 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 27757 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 526:
#line 5496 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_ACTIVE; }
#line 27763 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 527:
#line 5497 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_INACTIVE; }
#line 27769 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 528:
#line 5501 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 27775 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 529:
#line 5506 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_initial_size((yyvsp[0].ulonglong_number));
          }
#line 27783 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 530:
#line 5513 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_autoextend_size((yyvsp[0].ulonglong_number));
          }
#line 27791 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 531:
#line 5520 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_max_size((yyvsp[0].ulonglong_number));
          }
#line 27799 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 532:
#line 5527 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_extent_size((yyvsp[0].ulonglong_number));
          }
#line 27807 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 533:
#line 5534 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_undo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 27815 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 534:
#line 5541 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_redo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 27823 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 535:
#line 5548 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_nodegroup((yyvsp[0].ulong_num));
          }
#line 27831 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 536:
#line 5555 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_comment((yyvsp[0].lexer.lex_str));
          }
#line 27839 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 537:
#line 5562 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_engine(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 27847 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 538:
#line 5569 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_file_block_size((yyvsp[0].ulonglong_number));
          }
#line 27855 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 539:
#line 5576 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(true);
          }
#line 27863 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 540:
#line 5580 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(false);
          }
#line 27871 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 541:
#line 5587 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_encryption((yyvsp[0].lexer.lex_str));
          }
#line 27879 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 542:
#line 5594 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_encryption_key_id((yyvsp[0].ulong_num));
          }
#line 27887 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 543:
#line 5600 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 27893 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 544:
#line 5602 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            const char *start_ptr= (yyvsp[0].lexer.lex_str).str;
            size_t str_len= (yyvsp[0].lexer.lex_str).length;
            const char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                  // Fall through.
                case 'm':
                case 'M':
                  text_shift_number+=10;
                  // Fall through.
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
#line 27943 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 545:
#line 5678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_create_table_options= (yyvsp[-1].create_table_options);
          }
#line 27952 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 547:
#line 5687 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_partitioning= (yyvsp[-1].partition_clause);
          }
#line 27961 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 549:
#line 5696 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= NULL;
          }
#line 27972 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 550:
#line 5704 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= (yyvsp[-1].on_duplicate);
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_primary);
          }
#line 27983 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 551:
#line 5711 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_primary);
          }
#line 27994 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 552:
#line 5720 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 28000 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 553:
#line 5721 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 28006 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 554:
#line 5737 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_clause)= NEW_PTN PT_partition((yyvsp[-3].part_type_def), (yyvsp[-2].ulong_num), (yyvsp[-1].opt_sub_part), (yylsp[0]), (yyvsp[0].part_def_list));
          }
#line 28014 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 555:
#line 5744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_key((yyvsp[-5].is_not_empty), (yyvsp[-3].opt_key_algo), (yyvsp[-1].name_list));
          }
#line 28022 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 556:
#line 5748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_hash((yyvsp[-4].is_not_empty), (yylsp[-1]), (yyvsp[-1].item));
          }
#line 28030 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 557:
#line 5752 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 28038 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 558:
#line 5756 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_columns((yyvsp[-1].name_list));
          }
#line 28046 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 559:
#line 5760 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 28054 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 560:
#line 5764 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_columns((yyvsp[-1].name_list));
          }
#line 28062 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 561:
#line 5770 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 28068 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 562:
#line 5771 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 28074 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 563:
#line 5776 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_NONE; }
#line 28080 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 564:
#line 5778 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_51;
              break;
            case 2:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_55;
              break;
            default:
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
          }
#line 28098 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 565:
#line 5795 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 28104 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 566:
#line 5797 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 28117 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 567:
#line 5808 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_sub_part)= NULL; }
#line 28123 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 568:
#line 5811 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_hash((yyvsp[-5].is_not_empty), (yylsp[-2]), (yyvsp[-2].item), (yyvsp[0].ulong_num));
          }
#line 28131 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 569:
#line 5816 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_key((yyvsp[-6].is_not_empty), (yyvsp[-4].opt_key_algo), (yyvsp[-2].name_list), (yyvsp[0].ulong_num));
          }
#line 28139 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 570:
#line 5823 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.name_list)= NULL; }
#line 28145 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 572:
#line 5830 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= NEW_PTN List<char>;
            if ((yyval.name_list) == NULL || (yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 28155 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 573:
#line 5836 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= (yyvsp[-2].name_list);
            if ((yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 28165 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 574:
#line 5845 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 28171 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 575:
#line 5847 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 28184 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 576:
#line 5858 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= NULL; }
#line 28190 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 577:
#line 5859 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= (yyvsp[-1].part_def_list); }
#line 28196 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 578:
#line 5864 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= NEW_PTN Mem_root_array<PT_part_definition*>(YYMEM_ROOT);
            if ((yyval.part_def_list) == NULL || (yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 28206 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 579:
#line 5870 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= (yyvsp[-2].part_def_list);
            if ((yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 28216 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 580:
#line 5879 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_definition)= NEW_PTN PT_part_definition((yylsp[-5]), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].opt_part_values).type, (yyvsp[-2].opt_part_values).values, (yylsp[-2]),
                                           (yyvsp[-1].partition_option_list), (yyvsp[0].sub_part_list), (yylsp[0]));
          }
#line 28225 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 581:
#line 5887 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::HASH;
          }
#line 28233 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 582:
#line 5891 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::RANGE;
            (yyval.opt_part_values).values= (yyvsp[0].part_value_item_list_paren);
          }
#line 28242 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 583:
#line 5896 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::LIST;
            (yyval.opt_part_values).values= (yyvsp[0].part_values);
          }
#line 28251 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 584:
#line 5903 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item_list_paren)= NULL; }
#line 28257 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 586:
#line 5909 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_item((yylsp[0]), (yyvsp[0].part_value_item_list_paren));
          }
#line 28265 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 587:
#line 5913 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_list((yylsp[0]), (yyvsp[-1].part_value_list));
          }
#line 28273 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 588:
#line 5920 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= NEW_PTN
              Mem_root_array<PT_part_value_item_list_paren *>(YYMEM_ROOT);
            if ((yyval.part_value_list) == NULL || (yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 28284 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 589:
#line 5927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= (yyvsp[-2].part_value_list);
            if ((yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 28294 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 590:
#line 5936 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              This empty action is required because it resolves 2 reduce/reduce
              conflicts with an anonymous row expression:

              simple_expr:
                        ...
                      | '(' expr ',' expr_list ')'
            */
          }
#line 28309 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 591:
#line 5947 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list_paren)= NEW_PTN PT_part_value_item_list_paren((yyvsp[-1].part_value_item_list), (yylsp[0]));
          }
#line 28317 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 592:
#line 5954 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= NEW_PTN Mem_root_array<PT_part_value_item *>(YYMEM_ROOT);
            if ((yyval.part_value_item_list) == NULL || (yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 28327 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 593:
#line 5960 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= (yyvsp[-2].part_value_item_list);
            if ((yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 28337 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 594:
#line 5968 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_max((yylsp[0])); }
#line 28343 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 595:
#line 5969 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_expr((yylsp[0]), (yyvsp[0].item)); }
#line 28349 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 596:
#line 5974 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= NULL; }
#line 28355 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 597:
#line 5975 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= (yyvsp[-1].sub_part_list); }
#line 28361 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 598:
#line 5980 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= NEW_PTN Mem_root_array<PT_subpartition *>(YYMEM_ROOT);
            if ((yyval.sub_part_list) == NULL || (yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 28371 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 599:
#line 5986 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= (yyvsp[-2].sub_part_list);
            if ((yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 28381 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 600:
#line 5995 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_definition)= NEW_PTN PT_subpartition((yylsp[-2]), (yyvsp[-1].lexer.lex_str).str, (yyvsp[0].partition_option_list));
          }
#line 28389 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 601:
#line 6001 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option_list)= NULL; }
#line 28395 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 603:
#line 6007 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= (yyvsp[-1].partition_option_list);
            if ((yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28405 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 604:
#line 6013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= NEW_PTN Mem_root_array<PT_partition_option *>(YYMEM_ROOT);
            if ((yyval.partition_option_list) == NULL || (yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28415 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 605:
#line 6022 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_tablespace((yyvsp[0].lexer.lex_str).str); }
#line 28421 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 606:
#line 6024 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_engine(to_lex_cstring((yyvsp[0].lexer.lex_str))); }
#line 28427 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 607:
#line 6026 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_nodegroup((yyvsp[0].ulong_num)); }
#line 28433 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 608:
#line 6028 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_max_rows((yyvsp[0].ulonglong_number)); }
#line 28439 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 609:
#line 6030 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_min_rows((yyvsp[0].ulonglong_number)); }
#line 28445 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 610:
#line 6032 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_data_directory((yyvsp[0].lexer.lex_str).str); }
#line 28451 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 611:
#line 6034 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_index_directory((yyvsp[0].lexer.lex_str).str); }
#line 28457 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 612:
#line 6036 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_comment((yyvsp[0].lexer.lex_str).str); }
#line 28463 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 613:
#line 6044 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28469 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 614:
#line 6045 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28475 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 615:
#line 6049 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28481 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 616:
#line 6050 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28487 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 617:
#line 6055 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_collation(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 28496 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 618:
#line 6060 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_charset(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 28505 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 619:
#line 6065 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Validate if we have either 'y|Y' or 'n|N'
            if (my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "Y") != 0 &&
                my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "N") != 0) {
              my_error(ER_WRONG_VALUE, MYF(0), "argument (should be Y or N)", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            Lex->create_info->encrypt_type= (yyvsp[0].lexer.lex_str);
            Lex->create_info->used_fields |= HA_CREATE_USED_DEFAULT_ENCRYPTION;
          }
#line 28521 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 620:
#line 6079 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 28527 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 621:
#line 6080 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 28533 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 622:
#line 6085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.space_separated_alter_table_opts) == NULL || (yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28543 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 623:
#line 6091 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= (yyvsp[-1].space_separated_alter_table_opts);
            if ((yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28553 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 624:
#line 6100 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= NEW_PTN Mem_root_array<PT_create_table_option *>(YYMEM_ROOT);
            if ((yyval.create_table_options) == NULL || (yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28563 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 625:
#line 6106 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= (yyvsp[-2].create_table_options);
            if ((yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28573 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 628:
#line 6120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 28581 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 629:
#line 6124 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option();
          }
#line 28589 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 630:
#line 6128 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 28597 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 631:
#line 6132 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_max_rows_option((yyvsp[0].ulonglong_number));
          }
#line 28605 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 632:
#line 6136 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_min_rows_option((yyvsp[0].ulonglong_number));
          }
#line 28613 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 633:
#line 6140 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_avg_row_length_option((yyvsp[0].ulong_num));
          }
#line 28621 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 634:
#line 6144 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_password_option((yyvsp[0].lexer.lex_str).str);
          }
#line 28629 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 635:
#line 6148 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_commen_option((yyvsp[0].lexer.lex_str));
          }
#line 28637 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 636:
#line 6152 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_compress_option((yyvsp[0].lexer.lex_str));
	  }
#line 28645 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 637:
#line 6156 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_encryption_option((yyvsp[0].lexer.lex_str));
	  }
#line 28653 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 638:
#line 6160 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_encryption_key_id_option((yyvsp[0].ulong_num));
          }
#line 28661 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 639:
#line 6164 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_auto_increment_option((yyvsp[0].ulonglong_number));
          }
#line 28669 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 640:
#line 6168 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_pack_keys_option((yyvsp[0].ternary_option));
          }
#line 28677 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 641:
#line 6172 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_auto_recalc_option((yyvsp[0].ternary_option));
          }
#line 28685 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 642:
#line 6176 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_persistent_option((yyvsp[0].ternary_option));
          }
#line 28693 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 643:
#line 6180 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff)
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages((yyvsp[0].ulong_num));
          }
#line 28714 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 644:
#line 6197 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages;
          }
#line 28722 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 645:
#line 6201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 28730 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 646:
#line 6205 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 28738 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 647:
#line 6209 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_delay_key_write_option((yyvsp[0].ulong_num));
          }
#line 28746 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 648:
#line 6213 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_row_format_option((yyvsp[0].row_type));
          }
#line 28754 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 649:
#line 6217 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_union_option((yyvsp[-1].table_list));
          }
#line 28762 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 650:
#line 6221 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_charset((yyvsp[0].lexer.charset));
          }
#line 28770 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 651:
#line 6225 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_collation((yyvsp[0].lexer.charset));
          }
#line 28778 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 652:
#line 6229 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_insert_method_option((yyvsp[0].ulong_num));
          }
#line 28786 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 653:
#line 6233 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_data_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 28794 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 654:
#line 6237 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_index_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 28802 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 655:
#line 6241 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_tablespace_option((yyvsp[0].lexer.lex_str).str);
          }
#line 28810 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 656:
#line 6245 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_DISK);
          }
#line 28818 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 657:
#line 6249 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_MEMORY);
          }
#line 28826 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 658:
#line 6253 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_connection_option((yyvsp[0].lexer.lex_str));
          }
#line 28834 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 659:
#line 6257 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_key_block_size_option((yyvsp[0].ulong_num));
          }
#line 28842 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 660:
#line 6264 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                (yyval.ternary_option)= Ternary_option::OFF;
                break;
            case 1:
                (yyval.ternary_option)= Ternary_option::ON;
                break;
            default:
                YYTHD->syntax_error();
                MYSQL_YYABORT;
            }
          }
#line 28860 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 661:
#line 6277 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ternary_option)= Ternary_option::DEFAULT; }
#line 28866 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 662:
#line 6281 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 28872 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 663:
#line 6285 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset);}
#line 28878 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 664:
#line 6289 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);}
#line 28884 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 665:
#line 6293 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 28890 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 666:
#line 6294 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 28896 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 667:
#line 6295 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 28902 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 668:
#line 6296 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 28908 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 669:
#line 6297 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 28914 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 670:
#line 6298 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 28920 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 671:
#line 6302 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 28926 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 672:
#line 6303 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 28932 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 673:
#line 6304 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 28938 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 674:
#line 6308 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) STRING_RESULT; }
#line 28944 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 675:
#line 6309 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) REAL_RESULT; }
#line 28950 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 676:
#line 6310 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) DECIMAL_RESULT; }
#line 28956 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 677:
#line 6311 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) INT_RESULT; }
#line 28962 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 678:
#line 6316 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= NEW_PTN Mem_root_array<PT_table_element *>(YYMEM_ROOT);
            if ((yyval.table_element_list) == NULL || (yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 28972 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 679:
#line 6322 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= (yyvsp[-2].table_element_list);
            if ((yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 28982 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 680:
#line 6330 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].column_def); }
#line 28988 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 681:
#line 6331 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].table_constraint_def); }
#line 28994 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 682:
#line 6336 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_def)= NEW_PTN PT_column_def((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].table_constraint_def));
          }
#line 29002 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 683:
#line 6342 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_constraint_def)= NULL; }
#line 29008 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 684:
#line 6344 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Currently we ignore FK references here: */
            (yyval.table_constraint_def)= NULL;
          }
#line 29017 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 685:
#line 6353 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_MULTIPLE,
                                                   (yyvsp[-4].index_name_and_type).name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 29026 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 686:
#line 6359 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_FULLTEXT, (yyvsp[-4].lexer.lex_str), NULL,
                                                   (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 29035 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 687:
#line 6365 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_SPATIAL, (yyvsp[-4].lexer.lex_str), NULL, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 29043 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 688:
#line 6370 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (((yyvsp[-6].lexer.lex_str).length != 0)
                 && ((yyvsp[-5].key_type) == (KEYTYPE_CLUSTERING | KEYTYPE_MULTIPLE)))
            {
              /* Forbid "CONSTRAINT c CLUSTERING" */
              my_error(ER_SYNTAX_ERROR, MYF(0));
              MYSQL_YYABORT;
            }
            /*
              Constraint-implementing indexes are named by the constraint type
              by default.
            */
            LEX_STRING name= (yyvsp[-4].index_name_and_type).name.str != NULL ? (yyvsp[-4].index_name_and_type).name : (yyvsp[-6].lexer.lex_str);
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyvsp[-5].key_type), name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 29063 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 689:
#line 6386 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_foreign_key_definition((yyvsp[-7].lexer.lex_str), (yyvsp[-4].lexer.lex_str), (yyvsp[-2].index_column_list), (yyvsp[0].fk_references).table_name,
                                                  (yyvsp[0].fk_references).reference_list,
                                                  (yyvsp[0].fk_references).fk_match_option,
                                                  (yyvsp[0].fk_references).fk_update_opt,
                                                  (yyvsp[0].fk_references).fk_delete_opt);
          }
#line 29075 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 690:
#line 6394 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_check_constraint((yyvsp[-2].lexer.lex_str), (yyvsp[-1].item), (yyvsp[0].is_not_empty));
            if ((yyval.table_constraint_def) == nullptr) MYSQL_YYABORT; // OOM
          }
#line 29084 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 691:
#line 6401 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 29090 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 692:
#line 6405 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 29096 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 693:
#line 6406 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 29102 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 694:
#line 6410 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 29108 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 695:
#line 6411 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 29114 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 696:
#line 6415 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 29120 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 697:
#line 6416 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= (yyvsp[0].is_not_empty); }
#line 29126 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 698:
#line 6420 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= !((yyvsp[-1].is_not_empty)); }
#line 29132 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 699:
#line 6425 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_def)= NEW_PTN PT_field_def((yyvsp[-1].type), (yyvsp[0].col_attr_list));
          }
#line 29140 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 700:
#line 6431 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *opt_attrs= (yyvsp[0].col_attr_list);
            if ((yyvsp[-7].lexer.charset) != NULL)
            {
              if (opt_attrs == NULL)
              {
                opt_attrs= NEW_PTN
                  Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
              }
              auto *collation= NEW_PTN PT_collate_column_attr((yylsp[-7]), (yyvsp[-7].lexer.charset));
              if (opt_attrs == nullptr || collation == nullptr ||
                  opt_attrs->push_back(collation))
                MYSQL_YYABORT; // OOM
            }
            (yyval.field_def)= NEW_PTN PT_generated_field_def((yyvsp[-8].type), (yyvsp[-3].item), (yyvsp[-1].virtual_or_stored), opt_attrs);
          }
#line 29161 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 703:
#line 6455 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 29167 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 704:
#line 6456 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 29173 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 705:
#line 6457 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::STORED; }
#line 29179 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 706:
#line 6462 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].int_type), (yyvsp[-1].c_str), (yyvsp[0].field_option));
          }
#line 29187 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 707:
#line 6466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 29195 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 708:
#line 6470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 29203 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 709:
#line 6474 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type;
          }
#line 29211 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 710:
#line 6478 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type((yyvsp[0].c_str));
          }
#line 29219 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 711:
#line 6482 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 29227 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 712:
#line 6486 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 29235 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 713:
#line 6490 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29244 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 714:
#line 6495 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29253 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 715:
#line 6500 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 29266 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 716:
#line 6509 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 29279 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 717:
#line 6518 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 29287 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 718:
#line 6522 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, &my_charset_bin);
          }
#line 29295 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 719:
#line 6526 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29304 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 720:
#line 6531 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 29317 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 721:
#line 6540 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 29325 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 722:
#line 6544 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].c_str))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].c_str), NULL, 10);
              if (errno != 0 || length != 4)
              {
                /* Only support length is 4 */
                my_error(ER_INVALID_YEAR_COLUMN_LENGTH, MYF(0), "YEAR");
                MYSQL_YYABORT;
              }
              push_deprecated_warn(YYTHD, "YEAR(4)", "YEAR");
            }
            if ((yyvsp[0].field_option) == UNSIGNED_FLAG)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                           ER_THD(YYTHD, ER_WARN_DEPRECATED_YEAR_UNSIGNED));
            }
            // We can ignore field length and UNSIGNED/ZEROFILL attributes here.
            (yyval.type)= NEW_PTN PT_year_type;
          }
#line 29352 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 723:
#line 6567 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_date_type;
          }
#line 29360 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 724:
#line 6571 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::TIME, (yyvsp[0].c_str));
          }
#line 29368 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 725:
#line 6575 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_timestamp_type((yyvsp[0].c_str));
          }
#line 29376 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 726:
#line 6579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::DATETIME, (yyvsp[0].c_str));
          }
#line 29384 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 727:
#line 6583 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, &my_charset_bin);
          }
#line 29392 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 728:
#line 6587 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type((yyvsp[0].c_str));
          }
#line 29400 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 730:
#line 6592 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 29408 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 731:
#line 6596 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, &my_charset_bin);
          }
#line 29416 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 732:
#line 6600 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 29424 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 733:
#line 6604 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29433 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 734:
#line 6609 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29442 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 735:
#line 6614 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::TEXT, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29451 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 736:
#line 6619 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29460 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 737:
#line 6624 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29469 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 738:
#line 6629 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_enum_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29477 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 739:
#line 6633 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_set_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29485 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 740:
#line 6637 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29494 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 741:
#line 6642 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_serial_type;
          }
#line 29502 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 742:
#line 6646 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_json_type;
          }
#line 29510 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 743:
#line 6653 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRY); }
#line 29516 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 744:
#line 6655 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRYCOLLECTION); }
#line 29522 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 745:
#line 6657 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POINT); }
#line 29528 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 746:
#line 6659 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOINT); }
#line 29534 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 747:
#line 6661 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_LINESTRING); }
#line 29540 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 748:
#line 6663 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTILINESTRING); }
#line 29546 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 749:
#line 6665 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POLYGON); }
#line 29552 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 750:
#line 6667 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOLYGON); }
#line 29558 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 751:
#line 6671 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29564 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 752:
#line 6672 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29570 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 753:
#line 6676 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29576 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 754:
#line 6677 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29582 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 755:
#line 6681 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29588 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 756:
#line 6682 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29594 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 757:
#line 6683 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29600 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 758:
#line 6684 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29606 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 759:
#line 6685 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29612 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 760:
#line 6689 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::INT; }
#line 29618 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 761:
#line 6690 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::TINYINT; }
#line 29624 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 762:
#line 6691 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::SMALLINT; }
#line 29630 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 763:
#line 6692 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::MEDIUMINT; }
#line 29636 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 764:
#line 6693 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::BIGINT; }
#line 29642 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 765:
#line 6698 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.numeric_type)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              Numeric_type::FLOAT : Numeric_type::DOUBLE;
          }
#line 29651 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 766:
#line 6703 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DOUBLE; }
#line 29657 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 769:
#line 6712 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::FLOAT; }
#line 29663 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 770:
#line 6713 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 29669 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 771:
#line 6714 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 29675 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 772:
#line 6715 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 29681 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 773:
#line 6720 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = nullptr;
            (yyval.precision).dec = nullptr;
          }
#line 29690 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 774:
#line 6725 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = (yyvsp[0].c_str);
            (yyval.precision).dec = nullptr;
          }
#line 29699 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 775:
#line 6733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec= NULL;
          }
#line 29708 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 776:
#line 6738 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[0].c_str);
            (yyval.precision).dec= NULL;
          }
#line 29717 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 778:
#line 6747 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[-3].lexer.lex_str).str;
            (yyval.precision).dec= (yyvsp[-1].lexer.lex_str).str;
          }
#line 29726 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 779:
#line 6755 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 29732 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 780:
#line 6756 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 29738 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 781:
#line 6760 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 29744 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 782:
#line 6761 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 29750 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 783:
#line 6763 "sql_yacc.yy" /* yacc.c:1646  */
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[-1].lexer.lex_str).str, NULL, &error);
           }
#line 29759 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 784:
#line 6770 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 29765 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 786:
#line 6776 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = (yyvsp[-1].field_option) | (yyvsp[0].field_option);
          }
#line 29773 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 788:
#line 6783 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 29779 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 789:
#line 6784 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = UNSIGNED_FLAG; }
#line 29785 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 790:
#line 6785 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = ZEROFILL_FLAG;
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_ZEROFILL));
          }
#line 29796 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 791:
#line 6794 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 29802 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 792:
#line 6795 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 29808 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 793:
#line 6796 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 29814 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 794:
#line 6797 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 29820 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 795:
#line 6800 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; /* use default length */ }
#line 29826 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 797:
#line 6806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec = NULL;
          }
#line 29835 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 799:
#line 6814 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.col_attr_list)= NULL; }
#line 29841 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 801:
#line 6820 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr_list)= (yyvsp[-1].col_attr_list);
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // $2 is `[NOT] ENFORCED`
              if ((yyvsp[-1].col_attr_list)->back()->set_constraint_enforcement(
                      (yyvsp[0].col_attr)->is_constraint_enforced())) {
                // $1 is not `CHECK(...)`
                YYTHD->syntax_error_at((yylsp[0]));
                MYSQL_YYABORT;
              }
            } else {
              if ((yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
                MYSQL_YYABORT; // OOM
            }
          }
#line 29864 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 802:
#line 6839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // [NOT] ENFORCED doesn't follow the CHECK clause
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }

            (yyval.col_attr_list)=
              NEW_PTN Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
            if ((yyval.col_attr_list) == NULL || (yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
              MYSQL_YYABORT; // OOM
          }
#line 29884 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 803:
#line 6858 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_null_column_attr;
          }
#line 29892 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 804:
#line 6862 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_not_null_column_attr;
          }
#line 29900 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 805:
#line 6866 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_secondary_column_attr;
          }
#line 29908 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 806:
#line 6870 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_default_column_attr((yyvsp[0].item));
          }
#line 29916 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 807:
#line 6874 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_generated_default_val_column_attr((yyvsp[-1].item));
          }
#line 29924 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 808:
#line 6878 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_on_update_column_attr(static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 29932 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 809:
#line 6882 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_auto_increment_column_attr;
          }
#line 29940 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 810:
#line 6886 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_serial_default_value_column_attr;
          }
#line 29948 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 811:
#line 6890 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_primary_key_column_attr;
          }
#line 29956 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 812:
#line 6894 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_UNIQUE);
          }
#line 29964 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 813:
#line 6898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_UNIQUE);
          }
#line 29972 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 814:
#line 6902 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_CLUSTERING);
          }
#line 29980 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 815:
#line 6906 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_CLUSTERING);
          }
#line 29988 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 816:
#line 6910 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_comment_column_attr(to_lex_cstring((yyvsp[0].lexer.lex_str)));
        }
#line 29996 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 817:
#line 6914 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_collate_column_attr((yylsp[0]), (yyvsp[0].lexer.charset));
          }
#line 30004 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 818:
#line 6918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr((yyvsp[0].column_format), null_lex_cstr);
          }
#line 30012 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 819:
#line 6922 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr(COLUMN_FORMAT_TYPE_COMPRESSED, (yyvsp[0].lex_cstr));
          }
#line 30020 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 820:
#line 6926 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_storage_media_column_attr((yyvsp[0].storage_media));
          }
#line 30028 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 821:
#line 6930 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<gis::srid_t>::max())
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "SRID", "SRID");
              MYSQL_YYABORT;
            }
            (yyval.col_attr)= NEW_PTN PT_srid_column_attr(static_cast<gis::srid_t>((yyvsp[0].ulonglong_number)));
          }
#line 30041 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 822:
#line 6940 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_check_constraint_column_attr((yyvsp[-1].lexer.lex_str), (yyvsp[0].item));
          }
#line 30049 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 823:
#line 6953 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = NEW_PTN PT_constraint_enforcement_attr((yyvsp[0].is_not_empty));
          }
#line 30057 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 824:
#line 6959 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= null_lex_cstr; }
#line 30063 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 825:
#line 6961 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstr)= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 30071 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 826:
#line 6967 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DEFAULT; }
#line 30077 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 827:
#line 6968 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_FIXED; }
#line 30083 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 828:
#line 6969 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DYNAMIC; }
#line 30089 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 829:
#line 6973 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DEFAULT; }
#line 30095 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 830:
#line 6974 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DISK; }
#line 30101 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 831:
#line 6975 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_MEMORY; }
#line 30107 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 832:
#line 6980 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 30115 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 833:
#line 6986 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 30123 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 837:
#line 6999 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            YYLIP->warn_on_deprecated_charset((yyval.lexer.charset), (yyvsp[0].lexer.lex_str).str);
          }
#line 30136 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 838:
#line 7007 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 30142 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 839:
#line 7011 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= NULL; }
#line 30148 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 840:
#line 7012 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 30154 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 841:
#line 7017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.lexer.charset)=get_old_charset_by_name((yyvsp[0].lexer.lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 30167 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 842:
#line 7025 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 30173 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 843:
#line 7029 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=(yyvsp[0].lexer.charset);   }
#line 30179 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 844:
#line 7030 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=NULL; }
#line 30185 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 845:
#line 7035 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name((yyvsp[0].lexer.lex_str).str)))
              MYSQL_YYABORT;
            YYLIP->warn_on_deprecated_collation((yyval.lexer.charset));
          }
#line 30195 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 846:
#line 7040 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 30201 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 847:
#line 7044 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = nullptr; }
#line 30207 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 848:
#line 7045 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 30213 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 849:
#line 7049 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30219 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 850:
#line 7050 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30225 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 851:
#line 7055 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_latin1; }
#line 30231 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 852:
#line 7056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 30240 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 853:
#line 7060 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 30249 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 854:
#line 7068 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
#line 30261 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 855:
#line 7076 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
#line 30271 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 856:
#line 7082 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
#line 30281 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 857:
#line 7091 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30290 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 858:
#line 7096 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30299 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 859:
#line 7101 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30308 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 860:
#line 7106 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= &my_charset_bin;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30317 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 861:
#line 7111 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].is_not_empty) ? get_bin_collation((yyvsp[-1].lexer.charset)) : (yyvsp[-1].lexer.charset);
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30328 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 862:
#line 7118 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= true;
          }
#line 30338 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 863:
#line 7124 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= get_bin_collation((yyvsp[0].lexer.charset));
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30350 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 864:
#line 7134 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 30356 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 865:
#line 7135 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.is_not_empty)= true;
          }
#line 30365 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 866:
#line 7143 "sql_yacc.yy" /* yacc.c:1646  */
    {
          if ((yyvsp[0].ulong_num) == 0)
          {
            YYTHD->syntax_error();
            MYSQL_YYABORT;
          }
        }
#line 30377 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 867:
#line 7151 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 30383 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 870:
#line 7165 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_references).table_name= (yyvsp[-3].table);
            (yyval.fk_references).reference_list= (yyvsp[-2].reference_list);
            (yyval.fk_references).fk_match_option= (yyvsp[-1].opt_match_clause);
            (yyval.fk_references).fk_update_opt= (yyvsp[0].fk_options).fk_update_opt;
            (yyval.fk_references).fk_delete_opt= (yyvsp[0].fk_options).fk_delete_opt;
          }
#line 30395 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 871:
#line 7175 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= NULL; }
#line 30401 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 872:
#line 7176 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= (yyvsp[-1].reference_list); }
#line 30407 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 873:
#line 7181 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= (yyvsp[-2].reference_list);
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if (key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 30418 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 874:
#line 7188 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= NEW_PTN List<Key_part_spec>;
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if ((yyval.reference_list) == NULL || key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 30429 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 875:
#line 7197 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_UNDEF; }
#line 30435 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 876:
#line 7198 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_FULL; }
#line 30441 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 877:
#line 7199 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_PARTIAL; }
#line 30447 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 878:
#line 7200 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_SIMPLE; }
#line 30453 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 879:
#line 7205 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 30462 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 880:
#line 7210 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 30471 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 881:
#line 7215 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 30480 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 882:
#line 7221 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[-3].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 30489 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 883:
#line 7227 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 30498 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 884:
#line 7234 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 30504 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 885:
#line 7235 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 30510 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 886:
#line 7236 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 30516 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 887:
#line 7237 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 30522 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 888:
#line 7238 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_DEFAULT;  }
#line 30528 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 889:
#line 7242 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_PRIMARY; }
#line 30534 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 890:
#line 7243 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= (yyvsp[-1].key_type); }
#line 30540 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 891:
#line 7248 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30546 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 892:
#line 7249 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30552 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 893:
#line 7253 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30558 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 895:
#line 7258 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30564 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 896:
#line 7259 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30570 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 897:
#line 7260 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30576 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 898:
#line 7264 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
#line 30582 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 900:
#line 7270 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= KEYTYPE_UNIQUE;
          }
#line 30590 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 901:
#line 7274 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= KEYTYPE_UNIQUE;
          }
#line 30598 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 902:
#line 7278 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_MULTIPLE | KEYTYPE_CLUSTERING);
          }
#line 30606 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 903:
#line 7282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_MULTIPLE | KEYTYPE_CLUSTERING);
          }
#line 30614 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 904:
#line 7286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 30622 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 905:
#line 7290 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 30630 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 906:
#line 7294 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 30638 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 907:
#line 7298 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 30646 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 908:
#line 7303 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 30652 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 910:
#line 7309 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30662 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 911:
#line 7315 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 30672 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 913:
#line 7325 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING plugin_name= {(yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length};
            if (!plugin_is_ready(plugin_name, MYSQL_FTPARSER_PLUGIN))
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            else
              (yyval.index_option)= NEW_PTN PT_fulltext_index_parser_name(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 30687 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 914:
#line 7338 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 30693 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 916:
#line 7344 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30703 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 917:
#line 7350 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 30713 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 919:
#line 7362 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 30719 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 921:
#line 7368 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30729 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 922:
#line 7374 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 30739 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 923:
#line 7382 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 30745 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 924:
#line 7383 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 30751 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 925:
#line 7388 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_block_size((yyvsp[0].ulong_num)); }
#line 30757 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 926:
#line 7390 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_comment(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 30765 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 927:
#line 7394 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_visibility((yyvsp[0].visibility));
          }
#line 30773 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 928:
#line 7417 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[0].lexer.lex_str), NULL}; }
#line 30779 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 929:
#line 7418 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 30785 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 930:
#line 7419 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 30791 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 931:
#line 7423 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option) = nullptr; }
#line 30797 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 933:
#line 7428 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 30803 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 934:
#line 7429 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 30809 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 935:
#line 7433 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= true; }
#line 30815 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 936:
#line 7434 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= false; }
#line 30821 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 937:
#line 7438 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 30827 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 938:
#line 7439 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 30833 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 939:
#line 7440 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 30839 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 940:
#line 7445 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 30849 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 941:
#line 7451 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
          }
#line 30860 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 942:
#line 7461 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].order_direction), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 30870 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 943:
#line 7467 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int key_part_length= atoi((yyvsp[-2].lexer.lex_str).str);
            if (!key_part_length)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[-4].lexer.lex_str).str);
            }
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[0].order_direction),
                                                  key_part_length);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 30886 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 944:
#line 7482 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 30896 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 945:
#line 7488 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 30907 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 947:
#line 7499 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification((yyvsp[-2].item), (yyvsp[0].order_direction));
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 30917 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 948:
#line 7507 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 30923 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 950:
#line 7512 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= null_lex_str; }
#line 30929 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 951:
#line 7513 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 30935 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 952:
#line 7518 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            if ((yyval.string_list) == NULL || (yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT; // OOM
          }
#line 30945 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 953:
#line 7524 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT;
          }
#line 30954 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 954:
#line 7536 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-3].lexer.optimizer_hints),
                  (yyvsp[-1].table),
                  (yyvsp[0].alter_list).actions,
                  (yyvsp[0].alter_list).flags.algo.get_or_default(),
                  (yyvsp[0].alter_list).flags.lock.get_or_default(),
                  (yyvsp[0].alter_list).flags.validation.get_or_default());
          }
#line 30969 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 955:
#line 7547 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_standalone_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-3].lexer.optimizer_hints),
                  (yyvsp[-1].table),
                  (yyvsp[0].standalone_alter_table_action).action,
                  (yyvsp[0].standalone_alter_table_action).flags.algo.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.lock.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.validation.get_or_default());
          }
#line 30984 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 956:
#line 7561 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 30996 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 957:
#line 7569 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
#line 31009 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 958:
#line 7581 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 31024 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 959:
#line 7592 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
          }
#line 31035 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 960:
#line 7602 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 31050 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 961:
#line 7613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
          }
#line 31061 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 962:
#line 7623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 31076 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 963:
#line 7634 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31082 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 964:
#line 7641 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 31098 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 965:
#line 7653 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31104 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 966:
#line 7658 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= new (YYTHD->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 31124 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 967:
#line 7678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num)))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 31141 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 968:
#line 7695 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{ALTER_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 31164 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 969:
#line 7717 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_add_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 31186 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 970:
#line 7736 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace_drop_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 31209 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 971:
#line 7755 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_rename{(yyvsp[-3].lexer.lex_str), (yyvsp[0].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 31221 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 972:
#line 7763 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 31244 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 973:
#line 7786 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_alter_undo_tablespace{
              ALTER_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str),
              {nullptr, 0}, pc, (yyvsp[-1].alter_tablespace_type)};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 31268 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 974:
#line 7809 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= (yyvsp[-4].lexer.lex_str);
            lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_server(&Lex->server_options);
          }
#line 31280 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 976:
#line 7823 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].lex_user)->auth.str= nullptr;
            (yyvsp[-6].lex_user)->auth.length= 0;
            (yyvsp[-6].lex_user)->has_password_generator= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-6].lex_user)->current_auth= (yyvsp[-1].lex_cstr);
              (yyvsp[-6].lex_user)->uses_replace_clause= true;
            }
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 31298 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 977:
#line 7838 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-5].lex_user)->current_auth= (yyvsp[-1].lex_cstr);
              (yyvsp[-5].lex_user)->uses_replace_clause= true;
            }
            Lex->contains_plaintext_password= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 31315 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 978:
#line 7851 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].lex_user)->discard_old_password= true;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->auth= NULL_CSTR;
          }
#line 31325 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 979:
#line 7857 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_ALL);
              MAKE_CMD(tmp);
          }
#line 31341 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 980:
#line 7869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_NONE);
              MAKE_CMD(tmp);
          }
#line 31357 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 981:
#line 7881 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            auto *tmp=
              NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                 users, (yyvsp[0].user_list),
                                                 role_enum::ROLE_NAME);
            MAKE_CMD(tmp);
          }
#line 31372 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 982:
#line 7894 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = LEX_CSTRING{nullptr, 0}; }
#line 31378 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 983:
#line 7895 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 31384 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 984:
#line 7902 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_resource_group(to_lex_cstring((yyvsp[-4].lexer.lex_str)),
                                                (yyvsp[-3].resource_group_vcpu_list_type), (yyvsp[-2].resource_group_priority_type), (yyvsp[-1].resource_group_state_type), (yyvsp[0].resource_group_flag_type));
          }
#line 31393 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 985:
#line 7910 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_USER;
            lex->drop_if_exists= (yyvsp[0].num);
          }
#line 31403 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 986:
#line 7918 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31409 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 990:
#line 7929 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= false;
          }
#line 31419 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 991:
#line 7935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= true;
          }
#line 31429 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 992:
#line 7941 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= true;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 31441 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 993:
#line 7949 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[-1].ulong_num) == 0 || (yyvsp[-1].ulong_num) > UINT_MAX16)
            {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[-1].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.expire_after_days= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 31460 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 994:
#line 7964 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 31472 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 995:
#line 7972 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            Lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 31484 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 996:
#line 7980 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= (yyvsp[0].ulong_num);
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= false;
          }
#line 31495 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 997:
#line 7987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= 0;
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= true;
          }
#line 31506 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 998:
#line 7994 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= false;
          }
#line 31517 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 999:
#line 8001 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= 0;
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= true;
          }
#line 31528 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1000:
#line 8008 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::YES;
          }
#line 31538 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1001:
#line 8014 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::DEFAULT;
          }
#line 31548 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1002:
#line 8020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::NO;
          }
#line 31558 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1003:
#line 8026 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "FAILED_LOGIN_ATTEMPTS", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_failed_login_attempts= true;
            lex->alter_password.failed_login_attempts= (yyvsp[0].ulong_num);
          }
#line 31574 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1004:
#line 8038 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "PASSWORD_LOCK_TIME", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= (yyvsp[0].ulong_num);
          }
#line 31590 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1005:
#line 8050 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= -1;
          }
#line 31600 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1006:
#line 8058 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31606 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1008:
#line 8063 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31612 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1009:
#line 8064 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31618 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1010:
#line 8069 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 31628 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1011:
#line 8075 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 31638 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1012:
#line 8081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 31648 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1013:
#line 8087 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 31658 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1014:
#line 8096 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty LEX_USER means current_user */
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) Lex->thd->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;

            memset(curr_user, 0, sizeof(LEX_USER));
            Lex->users_list.push_back(curr_user);
            (yyval.lex_user)= curr_user;
          }
#line 31673 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1015:
#line 8109 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 31679 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1016:
#line 8110 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31685 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1017:
#line 8111 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31691 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1018:
#line 8112 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31697 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1019:
#line 8116 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 31703 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1020:
#line 8118 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname);
            (yyval.num)= 1;
          }
#line 31716 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1021:
#line 8129 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 31722 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1022:
#line 8130 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31728 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1023:
#line 8134 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str).str= 0; (yyval.lexer.lex_str).length= 0; }
#line 31734 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1024:
#line 8135 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 31740 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1026:
#line 8141 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list)= (yyvsp[-1].alter_list);
            if ((yyval.alter_list).actions == NULL)
            {
              (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
              if ((yyval.alter_list).actions == NULL)
                MYSQL_YYABORT; // OOM
            }
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 31756 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1027:
#line 8156 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags.init();
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 31765 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1028:
#line 8161 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 31774 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1029:
#line 8169 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_partition_by((yyvsp[0].partition_clause));
          }
#line 31782 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1030:
#line 8173 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_remove_partitioning;
          }
#line 31790 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1031:
#line 8180 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NULL;
          }
#line 31799 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1032:
#line 8185 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[0].algo_and_lock_and_validation);
            (yyval.alter_list).actions= NULL;
          }
#line 31808 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1034:
#line 8191 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.alter_list).flags.merge((yyvsp[0].alter_list).flags);
            (yyval.alter_list).actions= (yyvsp[0].alter_list).actions;
          }
#line 31818 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1035:
#line 8200 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_tablespace;
          }
#line 31826 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1036:
#line 8204 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_tablespace;
          }
#line 31834 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1037:
#line 8215 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition((yyvsp[0].num));
          }
#line 31842 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1038:
#line 8219 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_def_list((yyvsp[-3].num), (yyvsp[-1].part_def_list));
          }
#line 31850 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1039:
#line 8223 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_num((yyvsp[-2].num), (yyvsp[0].ulong_num));
          }
#line 31858 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1040:
#line 8227 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_drop_partition(*(yyvsp[0].string_list));
          }
#line 31866 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1041:
#line 8232 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_rebuild_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 31874 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1042:
#line 8237 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_optimize_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 31882 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1043:
#line 8242 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_analyze_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 31890 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1044:
#line 8246 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_check_partition((yyvsp[-1].string_list),
                                                       (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 31899 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1045:
#line 8253 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_repair_partition((yyvsp[-2].num), (yyvsp[-1].string_list),
                                                        (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 31908 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1046:
#line 8258 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_coalesce_partition((yyvsp[-1].num), (yyvsp[0].ulong_num));
          }
#line 31916 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1047:
#line 8262 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_truncate_partition((yyvsp[0].string_list));
          }
#line 31924 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1048:
#line 8266 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition((yyvsp[0].num));
          }
#line 31932 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1049:
#line 8271 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition_into((yyvsp[-5].num), *(yyvsp[-4].string_list), (yyvsp[-1].part_def_list));
          }
#line 31940 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1050:
#line 8276 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_exchange_partition((yyvsp[-4].lexer.lex_str), (yyvsp[-1].table), (yyvsp[0].with_validation));
          }
#line 31948 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1051:
#line 8281 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_partition_tablespace((yyvsp[-1].string_list));
          }
#line 31956 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1052:
#line 8286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_partition_tablespace((yyvsp[-1].string_list));
          }
#line 31964 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1053:
#line 8290 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_load;
          }
#line 31972 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1054:
#line 8294 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_unload;
          }
#line 31980 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1055:
#line 8300 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_validation)= Alter_info::ALTER_VALIDATION_DEFAULT; }
#line 31986 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1057:
#line 8306 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITH_VALIDATION;
          }
#line 31994 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1058:
#line 8310 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITHOUT_VALIDATION;
          }
#line 32002 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1059:
#line 8316 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 32008 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1061:
#line 8326 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.alter_list).actions == NULL || (yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 32019 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1062:
#line 8333 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 32028 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1063:
#line 8338 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 32036 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1064:
#line 8342 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= (yyvsp[0].space_separated_alter_table_opts);
          }
#line 32045 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1065:
#line 8347 "sql_yacc.yy" /* yacc.c:1646  */
    {
            for (auto *option : *(yyvsp[0].space_separated_alter_table_opts))
            {
              if ((yyvsp[-2].alter_list).actions->push_back(option))
                MYSQL_YYABORT; // OOM
            }
          }
#line 32057 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1067:
#line 8359 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation)= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.algo_and_lock_and_validation).merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 32066 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1068:
#line 8367 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].field_def), (yyvsp[-1].table_constraint_def), (yyvsp[0].c_str));
          }
#line 32074 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1069:
#line 8371 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_columns((yyvsp[-1].table_element_list));
          }
#line 32082 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1070:
#line 8375 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_constraint((yyvsp[0].table_constraint_def));
          }
#line 32090 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1071:
#line 8379 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 32098 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1072:
#line 8383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 32106 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1073:
#line 8387 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($4) is ignored!
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_column((yyvsp[-1].lexer.lex_str).str);
          }
#line 32115 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1074:
#line 8392 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_foreign_key((yyvsp[0].lexer.lex_str).str);
          }
#line 32123 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1075:
#line 8396 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key(primary_key_name);
          }
#line 32131 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1076:
#line 8400 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key((yyvsp[0].lexer.lex_str).str);
          }
#line 32139 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1077:
#line 8404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_check_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 32147 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1078:
#line 8408 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 32155 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1079:
#line 8412 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(false);
          }
#line 32163 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1080:
#line 8416 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(true);
          }
#line 32171 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1081:
#line 8420 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-3].lexer.lex_str).str, (yyvsp[0].item));
          }
#line 32179 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1082:
#line 8424 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-5].lexer.lex_str).str, (yyvsp[-1].item));
          }
#line 32187 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1083:
#line 8428 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-2].lexer.lex_str).str, NULL);
          }
#line 32195 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1084:
#line 8432 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_index_visible((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].visibility));
          }
#line 32203 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1085:
#line 8436 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_check_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 32211 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1086:
#line 8440 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 32219 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1087:
#line 8444 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename((yyvsp[0].table));
          }
#line 32227 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1088:
#line 8448 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_key((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 32235 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1089:
#line 8452 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_column((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 32243 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1090:
#line 8456 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_convert_to_charset((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 32251 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1091:
#line 8460 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_convert_to_charset(
                YYTHD->variables.collation_database,
                (yyvsp[0].lexer.charset) ? (yyvsp[0].lexer.charset) : YYTHD->variables.collation_database);
          }
#line 32261 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1092:
#line 8466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_force;
          }
#line 32269 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1093:
#line 8470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_order((yyvsp[0].order_list));
          }
#line 32277 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1094:
#line 8477 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 32286 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1095:
#line 8482 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).lock.set((yyvsp[0].alter_table_lock));
          }
#line 32295 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1096:
#line 8487 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).validation.set((yyvsp[0].with_validation));
          }
#line 32304 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1097:
#line 8494 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_index_lock_and_algorithm).init(); }
#line 32310 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1098:
#line 8496 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 32319 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1099:
#line 8501 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 32328 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1100:
#line 8506 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[-1].alter_table_lock));
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 32338 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1101:
#line 8512 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[-1].alter_table_algorithm));
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 32348 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1102:
#line 8520 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_algorithm)= (yyvsp[0].alter_table_algorithm); }
#line 32354 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1103:
#line 8525 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
#line 32362 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1104:
#line 8529 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "INPLACE"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INPLACE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "INSTANT"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INSTANT;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "COPY"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_COPY;
            else
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 32380 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1105:
#line 8545 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_lock)= (yyvsp[0].alter_table_lock); }
#line 32386 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1106:
#line 8550 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 32394 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1107:
#line 8554 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "NONE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_NONE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "SHARED"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_SHARED;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "EXCLUSIVE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_EXCLUSIVE;
            else
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 32412 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1110:
#line 8575 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 32418 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1111:
#line 8576 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 32424 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1112:
#line 8580 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_DEFAULT; }
#line 32430 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1113:
#line 8581 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_RESTRICT; }
#line 32436 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1114:
#line 8582 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_CASCADE; }
#line 32442 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1115:
#line 8586 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 32448 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1116:
#line 8587 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[0].lexer.lex_str).str; }
#line 32454 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1117:
#line 8588 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= first_keyword; }
#line 32460 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1118:
#line 8592 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32466 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1119:
#line 8593 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32472 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1120:
#line 8594 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32478 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1121:
#line 8595 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32484 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1122:
#line 8600 "sql_yacc.yy" /* yacc.c:1646  */
    {
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_START_GROUP_REPLICATION;
                 }
#line 32493 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1123:
#line 8605 "sql_yacc.yy" /* yacc.c:1646  */
    {
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_STOP_GROUP_REPLICATION;
                 }
#line 32502 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1124:
#line 8612 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32508 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1125:
#line 8614 "sql_yacc.yy" /* yacc.c:1646  */
    {
          LEX *lex=Lex;
          lex->sql_command = SQLCOM_SLAVE_STOP;
          lex->type = 0;
          lex->slave_thd_opt= (yyvsp[-1].num);
        }
#line 32519 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1126:
#line 8624 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            /* Clean previous slave connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[0].num);
          }
#line 32534 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1127:
#line 8639 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 32555 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1129:
#line 8660 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 32572 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1130:
#line 8676 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 32580 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1131:
#line 8680 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 32588 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1132:
#line 8687 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 32596 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1133:
#line 8691 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 32604 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1134:
#line 8698 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 32612 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1135:
#line 8702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
            Lex->donor_transaction_id= (yyvsp[0].item);
          }
#line 32623 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1136:
#line 8709 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 32631 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1137:
#line 8713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 32639 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1139:
#line 8724 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 32647 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1140:
#line 8728 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user= (yyvsp[0].lexer.lex_str).str;
          }
#line 32655 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1141:
#line 8734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 32663 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1142:
#line 8738 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password= (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password= true;
          }
#line 32672 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1143:
#line 8744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 32680 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1144:
#line 8748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 32688 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1145:
#line 8754 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 32696 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1146:
#line 8758 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_dir= (yyvsp[0].lexer.lex_str).str;
          }
#line 32704 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1147:
#line 8765 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 32712 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1148:
#line 8769 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 32720 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1149:
#line 8776 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 32728 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1150:
#line 8780 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 32736 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1151:
#line 8787 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_SQL;
          }
#line 32744 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1152:
#line 8791 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_IO;
          }
#line 32752 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1153:
#line 8798 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->mi.slave_until= false;
          }
#line 32761 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1154:
#line 8803 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_error(ER_BAD_SLAVE_UNTIL_COND, MYF(0));
               MYSQL_YYABORT;
            }
            lex->mi.slave_until= true;
          }
#line 32787 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1157:
#line 8830 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
#line 32796 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1158:
#line 8835 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
#line 32805 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1159:
#line 8840 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.until_after_gaps= true;
          }
#line 32813 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1160:
#line 8847 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            Lex->check_opt.flags= (yyvsp[0].ulong_num);
          }
#line 32828 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1161:
#line 8860 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 32834 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1162:
#line 8861 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_QUICK; }
#line 32840 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1163:
#line 8862 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_EXTEND; }
#line 32846 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1164:
#line 8868 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_repair_table_stmt(YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                             (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 32855 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1165:
#line 8875 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 32861 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1168:
#line 8882 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 32870 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1169:
#line 8889 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;  (yyval.mi_type).sql_flags= 0; }
#line 32876 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1170:
#line 8890 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND; (yyval.mi_type).sql_flags= 0; }
#line 32882 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1171:
#line 8891 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;        (yyval.mi_type).sql_flags= TT_USEFRM; }
#line 32888 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1172:
#line 8897 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_analyze_table_stmt(YYMEM_ROOT, (yyvsp[-4].lexer.optimizer_hints), (yyvsp[-3].num), (yyvsp[-1].table_list),
                                              (yyvsp[0].histogram).command, (yyvsp[0].histogram).num_buckets,
                                              (yyvsp[0].histogram).columns);
          }
#line 32898 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1173:
#line 8905 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS; }
#line 32904 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1174:
#line 8907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            longlong num= my_strtoll10((yyvsp[-1].lexer.lex_str).str, nullptr, &error);
            MYSQL_YYABORT_UNLESS(error <= 0);

            if (num < 1 || num > MAX_NUMBER_OF_HISTOGRAM_BUCKETS)
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "Number of buckets",
                       "ANALYZE TABLE");
              MYSQL_YYABORT;
            }

            (yyval.num)= num;
          }
#line 32923 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1175:
#line 8925 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command= Sql_cmd_analyze_table::Histogram_command::NONE;
            (yyval.histogram).columns= nullptr;
            (yyval.histogram).num_buckets= 0;
          }
#line 32933 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1176:
#line 8931 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::UPDATE_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[-1].string_list);
            (yyval.histogram).num_buckets= (yyvsp[0].num);
          }
#line 32944 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1177:
#line 8938 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::DROP_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[0].string_list);
            (yyval.histogram).num_buckets= 0;
          }
#line 32955 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1178:
#line 8948 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->binlog_stmt_arg= (yyvsp[0].lexer.lex_str);
          }
#line 32964 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1179:
#line 8956 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_check_table_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.optimizer_hints), (yyvsp[-1].table_list),
                                            (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 32973 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1180:
#line 8963 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 32979 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1183:
#line 8970 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 32988 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1184:
#line 8978 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;              (yyval.mi_type).sql_flags= 0; }
#line 32994 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1185:
#line 8980 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_FAST;               (yyval.mi_type).sql_flags= 0; }
#line 33000 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1186:
#line 8982 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_MEDIUM;             (yyval.mi_type).sql_flags= 0; }
#line 33006 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1187:
#line 8984 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND;             (yyval.mi_type).sql_flags= 0; }
#line 33012 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1188:
#line 8986 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_CHECK_ONLY_CHANGED; (yyval.mi_type).sql_flags= 0; }
#line 33018 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1189:
#line 8988 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;                    (yyval.mi_type).sql_flags= TT_FOR_UPGRADE; }
#line 33024 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1190:
#line 8993 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_optimize_table_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.optimizer_hints), (yyvsp[-2].num), (yyvsp[0].table_list));
          }
#line 33032 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1191:
#line 8999 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 33038 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1192:
#line 9000 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33044 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1193:
#line 9001 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33050 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1194:
#line 9006 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
#line 33058 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1195:
#line 9010 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33064 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1196:
#line 9012 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 33072 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1197:
#line 9019 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 33081 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1198:
#line 9024 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 33090 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1201:
#line 9037 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= Select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[-2].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[0].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 33104 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1202:
#line 9050 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_stmt(YYMEM_ROOT, (yyvsp[-2].keycache_list), (yyvsp[0].lex_cstr));
          }
#line 33112 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1203:
#line 9055 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_partitions_stmt(YYMEM_ROOT,
                                                       (yyvsp[-4].table), (yyvsp[-3].adm_partition), (yyvsp[-2].key_usage_list), (yyvsp[0].lex_cstr));
          }
#line 33121 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1204:
#line 9063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= NEW_PTN Mem_root_array<PT_assign_to_keycache *>(YYMEM_ROOT);
            if ((yyval.keycache_list) == NULL || (yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 33131 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1205:
#line 9069 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= (yyvsp[-2].keycache_list);
            if ((yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 33141 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1206:
#line 9078 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.assign_to_keycache)= NEW_PTN PT_assign_to_keycache((yyvsp[-1].table), (yyvsp[0].key_usage_list));
          }
#line 33149 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1207:
#line 9084 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 33155 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1208:
#line 9085 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = default_key_cache_base; }
#line 33161 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1209:
#line 9091 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_partitions_stmt(YYMEM_ROOT, (yyvsp[-3].table),(yyvsp[-2].adm_partition), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 33169 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1210:
#line 9095 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_stmt(YYMEM_ROOT, (yyvsp[-4].lexer.optimizer_hints), (yyvsp[0].preload_list));
          }
#line 33177 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1211:
#line 9102 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= NEW_PTN Mem_root_array<PT_preload_keys *>(YYMEM_ROOT);
            if ((yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 33187 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1212:
#line 9108 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= (yyvsp[-2].preload_list);
            if ((yyval.preload_list) == NULL || (yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 33197 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1213:
#line 9117 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_keys)= NEW_PTN PT_preload_keys((yyvsp[-2].table), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 33205 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1214:
#line 9124 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.adm_partition)= NEW_PTN PT_adm_partition((yyvsp[-1].string_list));
          }
#line 33213 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1215:
#line 9130 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 33219 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1216:
#line 9132 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE,
                             old_mode ? INDEX_HINT_MASK_JOIN
                                      : INDEX_HINT_MASK_ALL);
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 33230 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1217:
#line 9141 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 33236 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1218:
#line 9142 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 33242 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1219:
#line 9147 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[0].query_expression));
          }
#line 33250 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1220:
#line 9151 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list)));
          }
#line 33258 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1221:
#line 9155 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[0].query_primary));
          }
#line 33266 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1223:
#line 9195 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = (yyvsp[-1].top_level_node);
          }
#line 33274 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1224:
#line 9199 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[-1].query_expression), (yyvsp[0].into_destination));
          }
#line 33282 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1225:
#line 9203 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[0].locking_clause_list)), (yyvsp[-1].into_destination));
          }
#line 33290 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1226:
#line 9207 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list)), (yyvsp[0].into_destination));
          }
#line 33298 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1227:
#line 9248 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-2].query_expression_body), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 33306 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1228:
#line 9255 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_expression_body), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 33314 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1229:
#line 9261 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-2].query_primary), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 33322 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1230:
#line 9268 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_primary), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 33330 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1231:
#line 9273 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-1].query_primary), nullptr, (yyvsp[0].limit_clause));
          }
#line 33338 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1232:
#line 9279 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-2].with_clause), (yyvsp[-1].query_primary), nullptr, (yyvsp[0].limit_clause));
          }
#line 33346 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1233:
#line 9284 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-1].with_clause), (yyvsp[0].query_primary), nullptr, nullptr);
          }
#line 33354 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1234:
#line 9291 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = (yyvsp[0].query_primary);
          }
#line 33362 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1235:
#line 9295 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_expression_body), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 33370 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1236:
#line 9299 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_primary), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 33378 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1237:
#line 9303 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_expression_body), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 33386 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1238:
#line 9307 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_primary), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 33394 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1239:
#line 9314 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary)= (yyvsp[-1].query_primary); }
#line 33400 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1240:
#line 9315 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary)= (yyvsp[-1].query_expression); }
#line 33406 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1241:
#line 9317 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary) = NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list));
          }
#line 33414 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1242:
#line 9324 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Bison doesn't get polymorphism.
            (yyval.query_primary)= (yyvsp[0].query_primary);
          }
#line 33423 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1243:
#line 9329 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_table_value_constructor((yyvsp[0].values_list));
          }
#line 33431 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1244:
#line 9333 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item_list= NEW_PTN PT_select_item_list;
            if (item_list == nullptr ||
                item_list->push_back(
                  NEW_PTN Item_field((yyloc), nullptr, nullptr, "*")))
              MYSQL_YYABORT;
            (yyval.query_primary)= NEW_PTN PT_explicit_table({}, item_list, (yyvsp[0].table_reference_list));
          }
#line 33444 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1245:
#line 9353 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-8].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-7].select_options),  // select_options
                                      (yyvsp[-6].item_list2),  // select_item_list
                                      (yyvsp[-5].into_destination),  // into_clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows)); // windows
          }
#line 33461 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1246:
#line 9373 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-7].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-6].select_options),  // select_options
                                      (yyvsp[-5].item_list2),  // select_item_list
                                      NULL,// no INTO clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows)); // windows
          }
#line 33478 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1247:
#line 9388 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 33484 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1249:
#line 9393 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[0].table_reference_list); }
#line 33490 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1250:
#line 9397 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 33496 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1252:
#line 9403 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 33506 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1253:
#line 9409 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-2].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 33516 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1254:
#line 9418 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 33524 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1255:
#line 9425 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            auto table= NEW_PTN
                PT_table_factor_table_ident((yyvsp[0].table), nullptr, NULL_CSTR, nullptr);
            if ((yyval.table_reference_list).push_back(table))
              MYSQL_YYABORT; // OOM
          }
#line 33536 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1256:
#line 9436 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= 0;
          }
#line 33544 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1258:
#line 9444 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.select_options).merge((yyvsp[-1].select_options), (yyvsp[0].select_options)))
              MYSQL_YYABORT;
          }
#line 33553 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1260:
#line 9453 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= (yyvsp[0].ulonglong_number);
          }
#line 33561 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1261:
#line 9457 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn_no_replacement(YYTHD, "SQL_NO_CACHE");
            /* Ignored since MySQL 8.0. */
            (yyval.select_options).query_spec_options= 0;
          }
#line 33571 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1262:
#line 9466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= (yyvsp[-1].locking_clause_list);
            if ((yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 33581 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1263:
#line 9472 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= NEW_PTN PT_locking_clause_list(YYTHD->mem_root);
            if ((yyval.locking_clause_list) == nullptr || (yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 33591 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1264:
#line 9481 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause((yyvsp[-1].lock_strength), (yyvsp[0].locked_row_action));
          }
#line 33599 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1265:
#line 9485 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_table_locking_clause((yyvsp[-2].lock_strength), (yyvsp[-1].table_ident_list), (yyvsp[0].locked_row_action));
          }
#line 33607 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1266:
#line 9489 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause(Lock_strength::SHARE);
          }
#line 33615 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1267:
#line 9495 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::UPDATE; }
#line 33621 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1268:
#line 9496 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::SHARE; }
#line 33627 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1269:
#line 9500 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_ident_list)= (yyvsp[0].table_ident_list); }
#line 33633 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1270:
#line 9504 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::WAIT; }
#line 33639 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1272:
#line 9509 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::SKIP; }
#line 33645 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1273:
#line 9510 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::NOWAIT; }
#line 33651 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1274:
#line 9515 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 33661 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1275:
#line 9521 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 33671 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1276:
#line 9527 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_field((yyloc), NULL, NULL, "*");
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back(item))
              MYSQL_YYABORT;
          }
#line 33682 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1277:
#line 9536 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 33688 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1278:
#line 9538 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_expr_with_alias((yyloc), (yyvsp[-1].item), (yylsp[-1]).cpp, to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 33696 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1279:
#line 9545 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=null_lex_str;}
#line 33702 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1280:
#line 9546 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 33708 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1281:
#line 9547 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 33714 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1282:
#line 9548 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 33720 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1283:
#line 9549 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 33726 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1284:
#line 9553 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33732 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1285:
#line 9554 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33738 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1286:
#line 9560 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_or,
                                             Item_func::COND_OR_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33748 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1287:
#line 9566 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* XOR is a proprietary extension */
            (yyval.item) = NEW_PTN Item_func_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33757 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1288:
#line 9571 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_and,
                                             Item_func::COND_AND_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33767 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1289:
#line 9577 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 33775 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1290:
#line 9581 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_TRUE);
          }
#line 33783 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1291:
#line 9585 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_TRUE);
          }
#line 33791 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1292:
#line 9589 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_FALSE);
          }
#line 33799 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1293:
#line 9593 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_FALSE);
          }
#line 33807 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1294:
#line 9597 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 33815 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1295:
#line 9601 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 33823 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1297:
#line 9609 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 33831 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1298:
#line 9613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 33839 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1299:
#line 9617 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_comp_op((yyloc), (yyvsp[-2].item), (yyvsp[-1].boolfunc2creator), (yyvsp[0].item));
          }
#line 33847 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1300:
#line 9621 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].boolfunc2creator) == &comp_equal_creator)
              /*
                We throw this manual parse error rather than split the rule
                comp_op into a null-safe and a non null-safe rule, since doing
                so would add a shift/reduce conflict. It's actually this rule
                and the ones referencing it that cause all the conflicts, but
                we still don't want the count to go up.
              */
              YYTHD->syntax_error_at((yylsp[-2]));
            (yyval.item)= NEW_PTN PTI_comp_op_all((yyloc), (yyvsp[-3].item), (yyvsp[-2].boolfunc2creator), (yyvsp[-1].num), (yyvsp[0].subquery));
          }
#line 33864 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1302:
#line 9638 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-2].item), (yyvsp[0].subquery));
          }
#line 33872 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1303:
#line 9642 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-3].item), (yyvsp[0].subquery));
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 33881 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1304:
#line 9647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-4].item), true, (yyvsp[-1].item));
          }
#line 33889 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1305:
#line 9651 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == NULL || (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item)) || (yyvsp[-1].item_list2)->push_front((yyvsp[-6].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), false);
          }
#line 33900 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1306:
#line 9658 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-5].item), false, (yyvsp[-1].item));
          }
#line 33908 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1307:
#line 9662 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == NULL || (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item)) || (yyvsp[-1].item_list2)->value.push_front((yyvsp[-7].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), true);
          }
#line 33919 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1308:
#line 9669 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_member_of((yyloc), (yyvsp[-5].item), (yyvsp[-1].item));
          }
#line 33927 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1309:
#line 9673 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), false);
          }
#line 33935 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1310:
#line 9677 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
          }
#line 33943 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1311:
#line 9681 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item1= NEW_PTN Item_func_soundex((yyloc), (yyvsp[-3].item));
            Item *item4= NEW_PTN Item_func_soundex((yyloc), (yyvsp[0].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_eq((yyloc), item1, item4);
          }
#line 33955 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1312:
#line 9689 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-2].item), (yyvsp[0].item), nullptr);
          }
#line 33963 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1313:
#line 9693 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33971 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1314:
#line 9697 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-3].item), (yyvsp[0].item), nullptr);
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 33980 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1315:
#line 9702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 33989 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1316:
#line 9707 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-2].item));
            args->push_back((yyvsp[0].item));

            (yyval.item)= NEW_PTN Item_func_regexp_like((yylsp[-2]), args);
          }
#line 34001 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1317:
#line 9715 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-3].item));
            args->push_back((yyvsp[0].item));
            Item *item= NEW_PTN Item_func_regexp_like((yyloc), args);
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 34013 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1321:
#line 9732 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_or((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34021 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1322:
#line 9736 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_and((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34029 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1323:
#line 9740 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_left((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34037 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1324:
#line 9744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_right((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34045 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1325:
#line 9748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_plus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34053 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1326:
#line 9752 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34061 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1327:
#line 9756 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
          }
#line 34069 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1328:
#line 9760 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
          }
#line 34077 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1329:
#line 9764 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mul((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34085 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1330:
#line 9768 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 34093 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1331:
#line 9772 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 34101 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1332:
#line 9776 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_int_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 34109 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1333:
#line 9780 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34117 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1334:
#line 9784 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34125 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1339:
#line 9798 "sql_yacc.yy" /* yacc.c:1646  */
    {
           push_deprecated_warn(YYTHD, "&&", "AND");
         }
#line 34133 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1342:
#line 9809 "sql_yacc.yy" /* yacc.c:1646  */
    { push_deprecated_warn(YYTHD, "!", "NOT"); }
#line 34139 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1344:
#line 9814 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 34145 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1345:
#line 9815 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_equal_creator; }
#line 34151 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1346:
#line 9816 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 34157 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1347:
#line 9817 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 34163 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1348:
#line 9818 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 34169 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1349:
#line 9819 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 34175 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1350:
#line 9820 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 34181 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1351:
#line 9824 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 34187 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1352:
#line 9825 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 34193 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1358:
#line 9835 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_set_collation((yyloc), (yyvsp[-2].item), (yyvsp[0].lexer.lex_str));
          }
#line 34201 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1360:
#line 9839 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].param_marker); }
#line 34207 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1364:
#line 9844 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_concat((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 34215 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1365:
#line 9848 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item); // TODO: do we really want to ignore unary '+' before any kind of literals?
          }
#line 34223 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1366:
#line 9852 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_neg((yyloc), (yyvsp[0].item));
          }
#line 34231 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1367:
#line 9856 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_neg((yyloc), (yyvsp[0].item));
          }
#line 34239 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1368:
#line 9860 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 34247 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1369:
#line 9864 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_singlerow_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 34255 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1370:
#line 9867 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 34261 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1371:
#line 9869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 34269 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1372:
#line 9873 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 34277 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1373:
#line 9877 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_exists_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 34285 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1374:
#line 9881 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_odbc_date((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].item));
          }
#line 34293 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1375:
#line 9885 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_match((yyloc), (yyvsp[-5].item_list2), (yyvsp[-2].item), (yyvsp[-1].num));
          }
#line 34301 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1376:
#line 9889 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[0]), (yyvsp[0].item), ITEM_CAST_CHAR, &my_charset_bin);
          }
#line 34309 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1377:
#line 9893 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-4]), (yyvsp[-4].item), &(yyvsp[-2].cast_type), (yyvsp[-1].num));
          }
#line 34317 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1378:
#line 9897 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_case((yyloc), *(yyvsp[-2].item_list), (yyvsp[-3].item), (yyvsp[-1].item) );
          }
#line 34325 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1379:
#line 9901 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-3]), (yyvsp[-3].item), &(yyvsp[-1].cast_type));
          }
#line 34333 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1380:
#line 9905 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_conv_charset((yyloc), (yyvsp[-3].item),(yyvsp[-1].lexer.charset));
          }
#line 34341 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1381:
#line 9909 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc), (yyvsp[-1].item));
          }
#line 34349 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1382:
#line 9913 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_insert_value((yyloc), (yyvsp[-1].item));
          }
#line 34357 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1383:
#line 9918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
          }
#line 34365 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1384:
#line 9922 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            (yyval.item)= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
          }
#line 34376 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1385:
#line 9929 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            Item *extr= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
            (yyval.item)= NEW_PTN Item_func_json_unquote((yyloc), extr);
          }
#line 34388 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1386:
#line 9939 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 34394 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1387:
#line 9940 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 34400 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1388:
#line 9951 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-1].item_list2));
          }
#line 34408 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1389:
#line 9955 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-3].item_list2), (yyvsp[-1].lexer.charset));
          }
#line 34416 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1390:
#line 9959 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_current_user((yyloc));
          }
#line 34424 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1391:
#line 9963 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_date((yyloc), (yyvsp[-1].item));
          }
#line 34432 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1392:
#line 9967 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_dayofmonth((yyloc), (yyvsp[-1].item));
          }
#line 34440 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1393:
#line 9971 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_hour((yyloc), (yyvsp[-1].item));
          }
#line 34448 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1394:
#line 9975 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_insert((yyloc), (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34456 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1395:
#line 9979 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34464 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1396:
#line 9983 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item_list2));
          }
#line 34472 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1397:
#line 9987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_left((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34480 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1398:
#line 9991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minute((yyloc), (yyvsp[-1].item));
          }
#line 34488 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1399:
#line 9995 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_month((yyloc), (yyvsp[-1].item));
          }
#line 34496 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1400:
#line 9999 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_right((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34504 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1401:
#line 10003 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_second((yyloc), (yyvsp[-1].item));
          }
#line 34512 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1402:
#line 10007 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_time((yyloc), (yyvsp[-1].item));
          }
#line 34520 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1403:
#line 10011 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_datetime((yyloc), (yyvsp[-1].item));
          }
#line 34528 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1404:
#line 10015 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_add_time((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), 1, 0);
          }
#line 34536 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1405:
#line 10019 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 34545 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1406:
#line 10024 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_LEADING);
          }
#line 34554 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1407:
#line 10029 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_TRAILING);
          }
#line 34563 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1408:
#line 10034 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), Item_func_trim::TRIM_BOTH);
          }
#line 34571 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1409:
#line 10038 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_LEADING);
          }
#line 34579 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1410:
#line 10042 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_TRAILING);
          }
#line 34587 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1411:
#line 10046 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_BOTH);
          }
#line 34595 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1412:
#line 10050 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 34604 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1413:
#line 10055 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_user((yyloc));
          }
#line 34612 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1414:
#line 10059 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_year((yyloc), (yyvsp[-1].item));
          }
#line 34620 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1415:
#line 10078 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 0);
          }
#line 34628 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1416:
#line 10082 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 34636 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1417:
#line 10086 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_local((yyloc));
          }
#line 34644 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1418:
#line 10090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 34652 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1419:
#line 10095 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 34660 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1420:
#line 10100 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 34668 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1421:
#line 10104 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_extract((yyloc),  (yyvsp[-3].interval), (yyvsp[-1].item));
          }
#line 34676 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1422:
#line 10108 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_format((yyloc), (yyvsp[-3].date_time_type), (yyvsp[-1].item));
          }
#line 34684 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1423:
#line 10112 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_now((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 34693 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1424:
#line 10117 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_locate((yyloc), (yyvsp[-1].item),(yyvsp[-3].item));
          }
#line 34701 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1425:
#line 10121 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 1);
          }
#line 34709 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1426:
#line 10125 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 34717 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1427:
#line 10129 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34725 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1428:
#line 10133 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34733 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1429:
#line 10137 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34741 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1430:
#line 10141 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34749 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1431:
#line 10145 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_sysdate((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 34758 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1432:
#line 10150 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
          }
#line 34766 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1433:
#line 10154 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_timestamp_diff((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[-5].interval_time_st));
          }
#line 34774 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1434:
#line 10158 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_utc((yyloc));
          }
#line 34782 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1435:
#line 10162 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 34790 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1436:
#line 10166 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 34798 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1437:
#line 10178 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_ascii((yyloc), (yyvsp[-1].item));
          }
#line 34806 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1438:
#line 10182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_charset((yyloc), (yyvsp[-1].item));
          }
#line 34814 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1439:
#line 10186 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_coalesce((yyloc), (yyvsp[-1].item_list2));
          }
#line 34822 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1440:
#line 10190 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_collation((yyloc), (yyvsp[-1].item));
          }
#line 34830 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1441:
#line 10194 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_database((yyloc));
          }
#line 34838 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1442:
#line 10198 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_if((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34846 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1443:
#line 10202 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34854 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1444:
#line 10206 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34862 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1445:
#line 10210 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_microsecond((yyloc), (yyvsp[-1].item));
          }
#line 34870 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1446:
#line 10214 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34878 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1447:
#line 10218 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_quarter((yyloc), (yyvsp[-1].item));
          }
#line 34886 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1448:
#line 10222 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_repeat((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34894 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1449:
#line 10226 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_replace((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34902 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1450:
#line 10230 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_reverse((yyloc), (yyvsp[-1].item));
          }
#line 34910 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1451:
#line 10234 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_row_count((yyloc));
          }
#line 34918 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1452:
#line 10238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_round((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),1);
          }
#line 34926 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1453:
#line 10242 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-1].item), NULL);
          }
#line 34934 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1454:
#line 10246 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34942 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1455:
#line 10250 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-1].item), 0, 0, 0);
          }
#line 34950 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1456:
#line 10254 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0);
          }
#line 34958 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1457:
#line 10258 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0, true);
          }
#line 34966 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1458:
#line 10262 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num), (yyvsp[-1].ulong_num));
          }
#line 34974 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1460:
#line 10270 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_geometrycollection,
                        Geometry::wkb_point);
          }
#line 34984 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1461:
#line 10276 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_linestring,
                        Geometry::wkb_point);
          }
#line 34994 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1462:
#line 10282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multilinestring,
                        Geometry::wkb_linestring);
          }
#line 35004 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1463:
#line 10288 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipoint,
                        Geometry::wkb_point);
          }
#line 35014 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1464:
#line 10294 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipolygon,
                        Geometry::wkb_polygon);
          }
#line 35024 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1465:
#line 10300 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_point((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 35032 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1466:
#line 10304 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_polygon,
                        Geometry::wkb_linestring);
          }
#line 35042 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1467:
#line 10322 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_ident_sys((yylsp[-3]), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 35050 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1468:
#line 10326 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_2d((yyloc), (yyvsp[-5].lexer.lex_str), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 35058 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1469:
#line 10333 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 35064 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1470:
#line 10335 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= FT_BOOL;
            DBUG_EXECUTE_IF("simulate_bug18831513",
                            {
                              THD *thd= YYTHD;
                              if (thd->sp_runtime_ctx)
                                YYTHD->syntax_error();
                            });
          }
#line 35078 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1471:
#line 10347 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 35084 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1472:
#line 10348 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 35090 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1473:
#line 10352 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;         }
#line 35096 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1474:
#line 10353 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_EXPAND; }
#line 35102 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1475:
#line 10357 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 35108 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1476:
#line 10358 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 35114 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1477:
#line 10363 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 35124 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1478:
#line 10369 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 35134 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1479:
#line 10378 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_udf_expr((yyloc), (yyvsp[-1].item), (yyvsp[0].lexer.lex_str), (yylsp[-1]).cpp);
          }
#line 35142 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1482:
#line 10390 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 35150 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1483:
#line 10394 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 35158 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1484:
#line 10398 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_and((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35166 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1485:
#line 10402 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_or((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35174 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1486:
#line 10406 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_array> array{::new (YYMEM_ROOT)
                                                          Json_array};
            if (array == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_array((yyloc), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper),
                                             std::move(array));
          }
#line 35188 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1487:
#line 10416 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_object> object{::new (YYMEM_ROOT)
                                                            Json_object};
            if (object == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_object(
                (yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper), std::move(object));
          }
#line 35202 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1488:
#line 10426 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35210 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1489:
#line 10430 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_count_sym((yyloc), (yyvsp[0].window));
          }
#line 35218 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1490:
#line 10434 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_count((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35226 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1491:
#line 10438 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new Item_sum_count((yyloc), (yyvsp[-2].item_list2), (yyvsp[0].window));
          }
#line 35234 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1492:
#line 10442 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35242 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1493:
#line 10451 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35250 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1494:
#line 10455 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35258 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1495:
#line 10459 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35266 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1496:
#line 10463 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 35274 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1497:
#line 10467 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 35282 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1498:
#line 10471 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 35290 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1499:
#line 10475 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 35298 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1500:
#line 10479 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 35306 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1501:
#line 10483 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 35314 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1502:
#line 10490 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_group_concat((yyloc), (yyvsp[-5].num), (yyvsp[-4].item_list2), (yyvsp[-3].order_list), (yyvsp[-2].string), (yyvsp[0].window));
          }
#line 35322 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1503:
#line 10497 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_row_number((yyloc), (yyvsp[0].window));
          }
#line 35330 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1504:
#line 10501 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), false, (yyvsp[0].window));
          }
#line 35338 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1505:
#line 10505 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), true, (yyvsp[0].window));
          }
#line 35346 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1506:
#line 10509 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_cume_dist((yyloc), (yyvsp[0].window));
          }
#line 35354 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1507:
#line 10513 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_percent_rank((yyloc), (yyvsp[0].window));
          }
#line 35362 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1508:
#line 10517 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=NEW_PTN Item_ntile((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35370 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1509:
#line 10521 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), true, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 35385 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1510:
#line 10532 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), false, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 35400 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1511:
#line 10543 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), true, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 35408 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1512:
#line 10547 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), false, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 35416 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1513:
#line 10551 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL ||
                args->push_back((yyvsp[-6].item)) ||
                args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_nth_value((yyloc), args, (yyvsp[-2].from_first_last) == NFL_FROM_LAST, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 35429 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1514:
#line 10563 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= NULL;
            (yyval.lead_lag_info).default_value= NULL;
          }
#line 35438 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1515:
#line 10568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= (yyvsp[-1].item_num);
            (yyval.lead_lag_info).default_value= (yyvsp[0].item);
          }
#line 35447 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1516:
#line 10573 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= (yyvsp[-1].param_marker);
            (yyval.lead_lag_info).default_value= (yyvsp[0].item);
          }
#line 35456 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1517:
#line 10581 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NULL;
          }
#line 35464 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1518:
#line 10585 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 35472 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1519:
#line 10592 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_NONE;
          }
#line 35480 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1520:
#line 10596 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_RESPECT_NULLS;
          }
#line 35488 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1521:
#line 10600 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_IGNORE_NULLS;
          }
#line 35496 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1522:
#line 10608 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_NONE;
          }
#line 35504 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1523:
#line 10612 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_FIRST;
          }
#line 35512 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1524:
#line 10616 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_LAST;
          }
#line 35520 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1525:
#line 10623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NULL;
          }
#line 35528 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1526:
#line 10627 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 35536 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1527:
#line 10634 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 35544 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1528:
#line 10641 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NEW_PTN PT_window((yyvsp[0].item_string));
          }
#line 35552 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1529:
#line 10645 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 35560 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1530:
#line 10652 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYTHD->charset());
          }
#line 35568 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1531:
#line 10659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[-1].window);
          }
#line 35576 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1532:
#line 10669 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto frame= (yyvsp[0].window_frame);
             if (!frame) // build an equivalent frame spec
             {
               auto start_bound= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
               auto end_bound= NEW_PTN PT_border((yyvsp[-1].order_list) ? WBT_CURRENT_ROW :
                 WBT_UNBOUNDED_FOLLOWING);
               auto bounds= NEW_PTN PT_borders(start_bound, end_bound);
               frame= NEW_PTN PT_frame(WFU_RANGE, bounds, nullptr);
               frame->m_originally_absent= true;
             }
             (yyval.window)= NEW_PTN PT_window((yyvsp[-2].order_list), (yyvsp[-1].order_list), frame, (yyvsp[-3].item_string));
           }
#line 35594 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1533:
#line 10686 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NULL;
          }
#line 35602 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1534:
#line 10690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= (yyvsp[0].item_string);
          }
#line 35610 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1535:
#line 10697 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 35618 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1536:
#line 10701 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 35626 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1537:
#line 10708 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 35634 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1538:
#line 10712 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 35642 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1539:
#line 10719 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NULL;
          }
#line 35650 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1540:
#line 10725 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NEW_PTN PT_frame((yyvsp[-2].frame_units), (yyvsp[-1].frame_extent), (yyvsp[0].frame_exclusion));
          }
#line 35658 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1541:
#line 10732 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto end_bound= NEW_PTN PT_border(WBT_CURRENT_ROW);
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[0].bound), end_bound);
          }
#line 35667 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1542:
#line 10737 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= (yyvsp[0].frame_extent);
          }
#line 35675 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1543:
#line 10744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
          }
#line 35683 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1544:
#line 10748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].item_num));
          }
#line 35691 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1545:
#line 10752 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].param_marker));
          }
#line 35699 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1546:
#line 10756 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 35707 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1547:
#line 10760 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_CURRENT_ROW);
          }
#line 35715 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1548:
#line 10767 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[-2].bound), (yyvsp[0].bound));
          }
#line 35723 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1549:
#line 10774 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= (yyvsp[0].bound);
          }
#line 35731 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1550:
#line 10778 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_FOLLOWING);
          }
#line 35739 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1551:
#line 10782 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].item_num));
          }
#line 35747 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1552:
#line 10786 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].param_marker));
          }
#line 35755 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1553:
#line 10790 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 35763 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1554:
#line 10797 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NULL;
          }
#line 35771 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1555:
#line 10801 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_CURRENT_ROW);
          }
#line 35779 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1556:
#line 10805 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_GROUP);
          }
#line 35787 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1557:
#line 10809 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_TIES);
          }
#line 35795 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1558:
#line 10813 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_NO_OTHERS);
          }
#line 35802 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1559:
#line 10818 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_ROWS; }
#line 35808 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1560:
#line 10819 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_RANGE; }
#line 35814 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1561:
#line 10820 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_GROUPS; }
#line 35820 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1562:
#line 10825 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_grouping((yyloc), (yyvsp[-1].item_list2));
          }
#line 35828 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1563:
#line 10831 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 35834 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1564:
#line 10836 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_USER_SET_EXPR));
            (yyval.item)= NEW_PTN PTI_variable_aux_set_var((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 35845 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1565:
#line 10843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_ident_or_text((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 35853 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1566:
#line 10847 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_3d((yyloc), (yyvsp[-2].var_type), (yyvsp[-1].lexer.lex_str), (yylsp[-1]), (yyvsp[0].lexer.lex_str));
          }
#line 35861 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1567:
#line 10853 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 35867 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1568:
#line 10854 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 35873 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1569:
#line 10859 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 35883 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1570:
#line 10864 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string) = (yyvsp[0].string); }
#line 35889 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1571:
#line 10868 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= NULL; }
#line 35895 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1572:
#line 10869 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= (yyvsp[0].order_list); }
#line 35901 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1573:
#line 10874 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 35910 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1574:
#line 10879 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_gorder_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 35921 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1575:
#line 10889 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_in_sum_expr((yylsp[-1]), (yyvsp[0].item));
          }
#line 35929 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1576:
#line 10896 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= &my_charset_bin;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
          }
#line 35940 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1577:
#line 10903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).length= (yyvsp[-1].c_str);
            (yyval.cast_type).dec= NULL;
            if ((yyvsp[0].charset_with_opt_binary).force_binary)
            {
              // Bugfix: before this patch we ignored [undocumented]
              // collation modifier in the CAST(expr, CHAR(...) BINARY) syntax.
              // To restore old behavior just remove this "if ($3...)" branch.

              (yyval.cast_type).charset= get_bin_collation((yyvsp[0].charset_with_opt_binary).charset ? (yyvsp[0].charset_with_opt_binary).charset :
                  YYTHD->variables.collation_connection);
              if ((yyval.cast_type).charset == NULL)
                MYSQL_YYABORT;
            }
            else
              (yyval.cast_type).charset= (yyvsp[0].charset_with_opt_binary).charset;
          }
#line 35963 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1578:
#line 10922 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= national_charset_info;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
            warn_about_deprecated_national(YYTHD);
          }
#line 35975 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1579:
#line 10930 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 35986 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1580:
#line 10937 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 35997 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1581:
#line 10944 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 36008 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1582:
#line 10951 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 36019 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1583:
#line 10958 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATE;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 36030 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1584:
#line 10965 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_TIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 36041 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1585:
#line 10972 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATETIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 36052 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1586:
#line 10979 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_DECIMAL;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= (yyvsp[0].precision).length;
            (yyval.cast_type).dec= (yyvsp[0].precision).dec;
          }
#line 36063 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1587:
#line 10986 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_JSON;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 36074 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1588:
#line 10993 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ((yyvsp[0].numeric_type) == Numeric_type::DOUBLE) ?
              ITEM_CAST_DOUBLE : ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 36086 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1589:
#line 11001 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = (yyvsp[0].precision).length;
            (yyval.cast_type).dec = nullptr;
          }
#line 36097 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1590:
#line 11010 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 36103 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1592:
#line 11016 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 36113 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1593:
#line 11022 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 36123 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1594:
#line 11030 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 36129 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1595:
#line 11031 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 36135 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1596:
#line 11036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 36145 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1597:
#line 11042 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 36155 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1598:
#line 11050 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 36161 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1599:
#line 11051 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 36167 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1600:
#line 11055 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 36173 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1601:
#line 11056 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 36179 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1602:
#line 11061 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (YYMEM_ROOT) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-2].item));
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 36191 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1603:
#line 11069 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].item_list)->push_back((yyvsp[-2].item));
            (yyvsp[-4].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 36201 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1604:
#line 11077 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 36207 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1605:
#line 11078 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 36213 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1606:
#line 11080 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The ODBC escape syntax for Outer Join.

              All productions from table_factor and joined_table can be escaped,
              not only the '{LEFT | RIGHT} [OUTER] JOIN' syntax.
            */
            (yyval.table_reference) = (yyvsp[-1].table_reference);
          }
#line 36227 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1607:
#line 11092 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 36233 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1608:
#line 11093 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 36239 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1609:
#line 11175 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 36247 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1610:
#line 11180 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 36255 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1611:
#line 11184 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 36263 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1612:
#line 11188 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 36271 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1613:
#line 11193 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto this_cross_join= NEW_PTN PT_cross_join((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), NULL);

            if ((yyvsp[0].table_reference) == NULL)
              MYSQL_YYABORT; // OOM

            (yyval.join_table)= (yyvsp[0].table_reference)->add_cross_join(this_cross_join);
          }
#line 36284 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1614:
#line 11202 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), (yyvsp[0].table_reference));
          }
#line 36292 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1615:
#line 11208 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_INNER; }
#line 36298 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1616:
#line 11209 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_RIGHT; }
#line 36304 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1617:
#line 11210 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_LEFT; }
#line 36310 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1618:
#line 11214 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 36316 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1619:
#line 11215 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 36322 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1620:
#line 11216 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 36328 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1621:
#line 11217 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_STRAIGHT_INNER; }
#line 36334 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1622:
#line 11220 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_LEFT; }
#line 36340 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1623:
#line 11221 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_RIGHT; }
#line 36346 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1628:
#line 11239 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 36352 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1630:
#line 11245 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= (yyvsp[-1].string_list);
          }
#line 36360 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1633:
#line 11275 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].derived_table); }
#line 36366 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1634:
#line 11277 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_factor_joined_table((yyvsp[0].join_table)); }
#line 36372 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1635:
#line 11279 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_reference_list_parens((yyvsp[0].table_reference_list)); }
#line 36378 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1636:
#line 11280 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].table_reference); }
#line 36384 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1637:
#line 11284 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[-1].table_reference_list); }
#line 36390 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1638:
#line 11286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-3].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[-1].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 36400 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1639:
#line 11294 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 36406 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1640:
#line 11295 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 36412 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1641:
#line 11300 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference)= NEW_PTN PT_table_factor_table_ident((yyvsp[-3].table), (yyvsp[-2].string_list), (yyvsp[-1].lex_cstr), (yyvsp[0].key_usage_list));
          }
#line 36420 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1642:
#line 11306 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 36426 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1643:
#line 11307 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 36432 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1644:
#line 11312 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The alias is actually not optional at all, but being MySQL we
              are friendly and give an informative error message instead of
              just 'syntax error'.
            */
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(false, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 36449 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1645:
#line 11325 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(true, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 36461 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1646:
#line 11337 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Alias isn't optional, follow derived's behavior
            if ((yyvsp[0].lex_cstr) == NULL_CSTR)
            {
              my_message(ER_TF_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_TF_MUST_HAVE_ALIAS), MYF(0));
              MYSQL_YYABORT;
            }

            (yyval.table_reference)= NEW_PTN PT_table_factor_function((yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].jtc_list), to_lex_string((yyvsp[0].lex_cstr)));
          }
#line 36477 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1647:
#line 11352 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-1].jtc_list);
          }
#line 36485 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1648:
#line 11359 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= NEW_PTN Mem_root_array<PT_json_table_column *>(YYMEM_ROOT);
            if ((yyval.jtc_list) == NULL || (yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 36495 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1649:
#line 11365 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-2].jtc_list);
            if ((yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 36505 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1650:
#line 11374 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_for_ordinality((yyvsp[-2].lexer.lex_str));
          }
#line 36513 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1651:
#line 11379 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto column = make_unique_destroy_only<Json_table_column>(
                YYMEM_ROOT, (yyvsp[-3].jt_column_type), (yyvsp[-1].text_literal), (yyvsp[0].jt_on_error_or_empty).error.type, (yyvsp[0].jt_on_error_or_empty).error.default_string,
                (yyvsp[0].jt_on_error_or_empty).empty.type, (yyvsp[0].jt_on_error_or_empty).empty.default_string);
            if (column == nullptr) MYSQL_YYABORT;  // OOM
            (yyval.jt_column) = NEW_PTN PT_json_table_column_with_path(std::move(column), (yyvsp[-6].lexer.lex_str),
                                                        (yyvsp[-5].type), (yyvsp[-4].lexer.charset));
          }
#line 36526 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1652:
#line 11388 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_with_nested_path((yyvsp[-1].text_literal), (yyvsp[0].jtc_list));
          }
#line 36534 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1653:
#line 11394 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_PATH;
          }
#line 36542 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1654:
#line 11398 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_EXISTS;
          }
#line 36550 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1655:
#line 11405 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).empty = {enum_jtc_on::JTO_IMPLICIT, nullptr};
            (yyval.jt_on_error_or_empty).error = {enum_jtc_on::JTO_IMPLICIT, nullptr};
          }
#line 36559 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1656:
#line 11410 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).empty = (yyvsp[0].jt_on_response);
            (yyval.jt_on_error_or_empty).error = {enum_jtc_on::JTO_IMPLICIT, nullptr};
          }
#line 36568 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1657:
#line 11415 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).error = (yyvsp[0].jt_on_response);
            (yyval.jt_on_error_or_empty).empty = {enum_jtc_on::JTO_IMPLICIT, nullptr};
          }
#line 36577 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1658:
#line 11420 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).empty = (yyvsp[-1].jt_on_response);
            (yyval.jt_on_error_or_empty).error = (yyvsp[0].jt_on_response);
          }
#line 36586 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1659:
#line 11425 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).error = (yyvsp[-1].jt_on_response);
            (yyval.jt_on_error_or_empty).empty = (yyvsp[0].jt_on_response);
          }
#line 36595 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1660:
#line 11432 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.jt_on_response)= (yyvsp[-2].jt_on_response); }
#line 36601 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1661:
#line 11435 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.jt_on_response)= (yyvsp[-2].jt_on_response); }
#line 36607 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1662:
#line 11439 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_response) = {enum_jtc_on::JTO_ERROR, nullptr};
          }
#line 36615 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1663:
#line 11443 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_response) = {enum_jtc_on::JTO_NULL, nullptr};
          }
#line 36623 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1664:
#line 11447 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_response) = {enum_jtc_on::JTO_DEFAULT, (yyvsp[0].text_literal)};
          }
#line 36631 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1665:
#line 11454 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
#line 36639 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1666:
#line 11457 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 36645 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1667:
#line 11458 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 36651 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1668:
#line 11459 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 36657 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1669:
#line 11463 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 36663 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1670:
#line 11464 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 36669 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1671:
#line 11470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), (yyvsp[-5].index_hint), (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 36678 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1672:
#line 11476 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE, (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 36687 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1674:
#line 11485 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].key_usage_list)->concat((yyvsp[-1].key_usage_list));
            (yyval.key_usage_list)= (yyvsp[0].key_usage_list);
          }
#line 36696 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1675:
#line 11492 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 36702 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1678:
#line 11502 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            Index_hint *hint= NEW_PTN Index_hint(NULL, 0);
            if ((yyval.key_usage_list) == NULL || hint == NULL || (yyval.key_usage_list)->push_front(hint))
              MYSQL_YYABORT;
          }
#line 36713 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1680:
#line 11513 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 36723 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1681:
#line 11519 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint(STRING_WITH_LEN("PRIMARY"));
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 36733 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1682:
#line 11528 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            if ((yyval.key_usage_list) == NULL || (yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 36743 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1683:
#line 11534 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 36752 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1685:
#line 11546 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if ((yyval.string_list) == NULL || s == NULL || (yyval.string_list)->push_back(s))
              MYSQL_YYABORT;
          }
#line 36765 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1686:
#line 11555 "sql_yacc.yy" /* yacc.c:1646  */
    {
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if (s == NULL || (yyvsp[-2].string_list)->push_back(s))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 36778 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1687:
#line 11566 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36784 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1688:
#line 11567 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 36790 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1689:
#line 11568 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 36796 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1690:
#line 11569 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 36802 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1691:
#line 11570 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 36808 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1692:
#line 11571 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 36814 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1693:
#line 11572 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 36820 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1694:
#line 11573 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 36826 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1695:
#line 11574 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 36832 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1696:
#line 11575 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 36838 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1697:
#line 11576 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 36844 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1698:
#line 11577 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 36850 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1699:
#line 11581 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 36856 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1700:
#line 11582 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 36862 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1701:
#line 11583 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 36868 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1702:
#line 11584 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 36874 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1703:
#line 11585 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 36880 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1704:
#line 11586 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 36886 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1705:
#line 11587 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 36892 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1706:
#line 11588 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 36898 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1707:
#line 11589 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 36904 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1708:
#line 11593 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
#line 36910 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1709:
#line 11594 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
#line 36916 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1710:
#line 11595 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 36922 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1711:
#line 11596 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 36928 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1714:
#line 11605 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = NULL_CSTR; }
#line 36934 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1715:
#line 11606 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 36940 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1718:
#line 11615 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = nullptr; }
#line 36946 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1720:
#line 11620 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_where((yylsp[0]), (yyvsp[0].item)); }
#line 36952 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1721:
#line 11624 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 36958 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1722:
#line 11626 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new PTI_having((yyloc), (yyvsp[0].item));
          }
#line 36966 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1723:
#line 11633 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), false);
          }
#line 36974 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1724:
#line 11637 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), true);
          }
#line 36982 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1725:
#line 11644 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;
          }
#line 36991 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1726:
#line 11649 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_list)= NEW_PTN PT_with_list(YYTHD->mem_root);
            if ((yyval.with_list) == NULL || (yyval.with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;    /* purecov: inspected */
          }
#line 37001 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1727:
#line 11658 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING subq_text;
            subq_text.length= (yylsp[0]).raw.length();
            subq_text.str= YYTHD->strmake((yylsp[0]).raw.start, subq_text.length);
            if (subq_text.str == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
            uint subq_text_offset= (yylsp[0]).raw.start - YYLIP->get_buf();
            (yyval.common_table_expr)= NEW_PTN PT_common_table_expr((yyvsp[-3].lexer.lex_str), subq_text, subq_text_offset,
                                             (yyvsp[0].subquery), &(yyvsp[-2].simple_ident_list), YYTHD->mem_root);
            if ((yyval.common_table_expr) == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
          }
#line 37018 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1728:
#line 11674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Because () isn't accepted by the rule of
              simple_ident_list, we can use an empty array to
              designates that the parenthesised list was omitted.
            */
            (yyval.simple_ident_list).init(YYTHD->mem_root);
          }
#line 37031 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1729:
#line 11683 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-1].simple_ident_list);
          }
#line 37039 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1730:
#line 11690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list).init(YYTHD->mem_root);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; /* purecov: inspected */
          }
#line 37049 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1731:
#line 11696 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-2].simple_ident_list);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;  /* purecov: inspected */
          }
#line 37059 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1732:
#line 11705 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NULL;
          }
#line 37067 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1733:
#line 11709 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= (yyvsp[0].windows);
          }
#line 37075 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1734:
#line 11716 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NEW_PTN PT_window_list();
            if ((yyval.windows) == NULL || (yyval.windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
          }
#line 37085 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1735:
#line 11722 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
            (yyval.windows)= (yyvsp[-2].windows);
          }
#line 37095 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1736:
#line 11731 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
            if ((yyval.window) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.window)->set_name((yyvsp[-2].item_string));
          }
#line 37106 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1737:
#line 11744 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.group)= NULL; }
#line 37112 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1738:
#line 11746 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.group)= NEW_PTN PT_group((yyvsp[-1].order_list), (yyvsp[0].olap_type));
          }
#line 37120 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1739:
#line 11753 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 37129 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1740:
#line 11758 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 37140 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1741:
#line 11768 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= UNSPECIFIED_OLAP_TYPE; }
#line 37146 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1742:
#line 11769 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= ROLLUP_TYPE; }
#line 37152 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1743:
#line 11785 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[-2].order_list);
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 37161 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1744:
#line 11790 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 37172 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1745:
#line 11800 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 37180 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1746:
#line 11806 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order)= NULL; }
#line 37186 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1748:
#line 11812 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order)= NEW_PTN PT_order((yyvsp[0].order_list));
          }
#line 37194 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1749:
#line 11819 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 37203 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1750:
#line 11824 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 37214 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1751:
#line 11833 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_NOT_RELEVANT; }
#line 37220 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1753:
#line 11838 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_ASC; }
#line 37226 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1754:
#line 11839 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_DESC; }
#line 37232 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1755:
#line 11843 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.limit_clause)= NULL; }
#line 37238 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1757:
#line 11849 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_clause)= NEW_PTN PT_limit_clause((yyvsp[0].limit_options));
          }
#line 37246 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1758:
#line 11856 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= NULL;
            (yyval.limit_options).is_offset_first= false;
          }
#line 37256 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1759:
#line 11862 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= (yyvsp[-2].item);
            (yyval.limit_options).is_offset_first= true;
          }
#line 37266 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1760:
#line 11868 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[-2].item);
            (yyval.limit_options).opt_offset= (yyvsp[0].item);
            (yyval.limit_options).is_offset_first= false;
          }
#line 37276 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1761:
#line 11877 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)), (yylsp[0]).raw);
          }
#line 37284 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1762:
#line 11881 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_param_marker((yyloc), (yyvsp[0].param_marker));
          }
#line 37292 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1763:
#line 11885 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 37300 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1764:
#line 11889 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 37308 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1765:
#line 11893 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 37316 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1766:
#line 11899 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 37322 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1767:
#line 11900 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 37328 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1768:
#line 11904 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37334 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1769:
#line 11905 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 37340 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1770:
#line 11906 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37346 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1771:
#line 11907 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37352 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1772:
#line 11908 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37358 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1773:
#line 11909 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37364 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1774:
#line 11913 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37370 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1775:
#line 11914 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 37376 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1776:
#line 11915 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37382 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1777:
#line 11916 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37388 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1778:
#line 11917 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 37394 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1779:
#line 11921 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37400 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1780:
#line 11922 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37406 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1781:
#line 11923 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37412 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1782:
#line 11924 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37418 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1783:
#line 11925 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37424 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1784:
#line 11929 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37430 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1785:
#line 11930 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (ulonglong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 37436 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1786:
#line 11931 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37442 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1787:
#line 11932 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37448 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1788:
#line 11933 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 37454 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1789:
#line 11938 "sql_yacc.yy" /* yacc.c:1646  */
    { YYTHD->syntax_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 37460 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1792:
#line 11948 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= (yyvsp[-2].select_var_list);
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 37470 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1793:
#line 11954 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= NEW_PTN PT_select_var_list((yyloc));
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 37480 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1794:
#line 11963 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_var((yyvsp[0].lexer.lex_str));
          }
#line 37488 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1795:
#line 11967 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_sp_var((yyvsp[0].lexer.lex_str));
          }
#line 37496 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1796:
#line 11974 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= (yyvsp[0].into_destination);
          }
#line 37504 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1797:
#line 11983 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_outfile((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.charset), (yyvsp[-1].field_separators), (yyvsp[0].line_separators));
          }
#line 37512 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1798:
#line 11987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_dumpfile((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 37520 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1799:
#line 11990 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.into_destination)= (yyvsp[0].select_var_list); }
#line 37526 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1800:
#line 11999 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_select_stmt(SQLCOM_DO,
                  NEW_PTN PT_query_expression(
                    NEW_PTN PT_query_specification({}, (yyvsp[0].item_list2))));
          }
#line 37536 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1801:
#line 12012 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($6) is ignored!
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[-4].is_not_empty);
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 37553 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1802:
#line 12028 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_index_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.lex_str).str, (yyvsp[-1].table),
                                           (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                           (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 37563 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1803:
#line 12037 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 37574 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1804:
#line 12047 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[-2].lexer.lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
               MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-3].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 37601 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1805:
#line 12070 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Unlike DROP PROCEDURE, "DROP FUNCTION ident" should work
              even if there is no current database. In this case it
              applies only to UDF.
              Hence we can't merge rules for "DROP FUNCTION ident.ident"
              and "DROP FUNCTION ident" into one "DROP FUNCTION sp_name"
              rule. sp_name assumes that database name should be always
              provided - either explicitly or implicitly.
            */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= NULL_STR;
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db().str && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-1].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring(db), (yyvsp[0].lexer.lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 37637 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1806:
#line 12105 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_resource_group(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].resource_group_flag_type));
          }
#line 37645 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1807:
#line 12112 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
          }
#line 37661 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1808:
#line 12127 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex=Lex;
             lex->sql_command= SQLCOM_DROP_USER;
             lex->drop_if_exists= (yyvsp[-1].num);
             lex->users_list= *(yyvsp[0].user_list);
          }
#line 37672 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1809:
#line 12137 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($5) is ignored!
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 37688 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1810:
#line 12152 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
#line 37698 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1811:
#line 12161 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_drop_trigger();
          }
#line 37710 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1812:
#line 12172 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_drop_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 37732 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1813:
#line 12192 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_drop_undo_tablespace{
              DROP_UNDO_TABLESPACE, (yyvsp[-1].lexer.lex_str), {nullptr, 0},  pc};
            if (!cmd)
              MYSQL_YYABORT; // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 37755 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1814:
#line 12214 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_logfile_group{DROP_LOGFILE_GROUP,
                                                    (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 37778 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1815:
#line 12237 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_drop_server((yyvsp[0].lexer.lex_str), (yyvsp[-1].num));
          }
#line 37787 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1816:
#line 12242 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_DROP_COMPRESSION_DICTIONARY;
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 37797 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1817:
#line 12251 "sql_yacc.yy" /* yacc.c:1646  */
    {
	    (yyval.top_level_node)= NEW_PTN PT_drop_srs((yyvsp[0].ulonglong_number), (yyvsp[-1].num));
	  }
#line 37805 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1818:
#line 12258 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_role((yyvsp[-1].num), (yyvsp[0].user_list));
          }
#line 37813 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1819:
#line 12265 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= NEW_PTN Mem_root_array<Table_ident *>(YYMEM_ROOT);
            if ((yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 37823 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1820:
#line 12271 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= (yyvsp[-2].table_list);
            if ((yyval.table_list) == NULL || (yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 37833 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1821:
#line 12280 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list).init(YYMEM_ROOT);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 37843 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1822:
#line 12286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list)= (yyvsp[-2].table_ident_list);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 37853 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1823:
#line 12294 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 37859 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1824:
#line 12295 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 37865 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1825:
#line 12299 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 37871 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1826:
#line 12300 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 37877 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1827:
#line 12304 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 37883 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1829:
#line 12310 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 37893 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1830:
#line 12316 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 37903 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1833:
#line 12341 "sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                             DBUG_SET("+d,simulate_out_of_memory"););
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-4].table), (yyvsp[-3].string_list),
                                  (yyvsp[-2].column_row_value_list_pair).column_list, (yyvsp[-2].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                            DBUG_SET("-d,bug29614521_simulate_oom"););
          }
#line 37919 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1834:
#line 12362 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[-2].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-9].lexer.optimizer_hints), (yyvsp[-8].lock_type), (yyvsp[-7].is_not_empty), (yyvsp[-5].table), (yyvsp[-4].string_list),
                                  (yyvsp[-2].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 37934 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1835:
#line 12380 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-7].lexer.optimizer_hints), (yyvsp[-6].lock_type), (yyvsp[-5].is_not_empty), (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[-1].insert_query_expression).column_list, NULL,
                                  (yyvsp[-1].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 37946 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1836:
#line 12396 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].column_row_value_list_pair).column_list, (yyvsp[0].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 37958 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1837:
#line 12410 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[0].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].lock_type), false, (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[0].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 37973 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1838:
#line 12426 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].insert_query_expression).column_list, NULL,
                                  (yyvsp[0].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 37985 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1839:
#line 12436 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT; }
#line 37991 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1840:
#line 12437 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 37997 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1841:
#line 12439 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        }
#line 38010 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1842:
#line 12447 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE; }
#line 38016 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1843:
#line 12451 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 38022 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1844:
#line 12453 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        }
#line 38035 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1847:
#line 12470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 38044 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1848:
#line 12475 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 38053 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1849:
#line 12480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= (yyvsp[-2].item_list2);
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 38062 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1850:
#line 12488 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 38071 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1851:
#line 12493 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 38080 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1852:
#line 12498 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= (yyvsp[-2].item_list2);
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 38089 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1853:
#line 12506 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 38099 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1854:
#line 12512 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 38109 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1855:
#line 12521 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 38117 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1856:
#line 12527 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_expression); }
#line 38123 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1857:
#line 12529 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary) = NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list));
          }
#line 38131 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1858:
#line 12532 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 38137 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1861:
#line 12542 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 38146 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1862:
#line 12547 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list;
            if ((yyval.values_list) == NULL || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 38156 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1863:
#line 12557 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 38165 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1864:
#line 12562 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list;
            if ((yyval.values_list) == nullptr || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 38175 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1869:
#line 12580 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 38181 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1870:
#line 12584 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 38187 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1871:
#line 12589 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL)
              MYSQL_YYABORT;
          }
#line 38197 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1873:
#line 12599 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 38207 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1874:
#line 12605 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 38217 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1876:
#line 12615 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc));
          }
#line 38225 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1877:
#line 12622 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = NULL_CSTR;
            (yyval.insert_update_values_reference).column_list = NULL;
          }
#line 38234 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1878:
#line 12627 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            /* The column list object is short-lived, requiring duplication. */
            void *column_list_raw_mem= YYTHD->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
            if (!column_list_raw_mem)
              MYSQL_YYABORT; // OOM
            (yyval.insert_update_values_reference).column_list =
              static_cast<Create_col_name_list *>(column_list_raw_mem);
          }
#line 38248 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1879:
#line 12640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).value_list= NULL;
            (yyval.column_value_list_pair).column_list= NULL;
          }
#line 38257 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1880:
#line 12645 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[0].column_value_list_pair);
          }
#line 38265 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1881:
#line 12663 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_update((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-5].table_reference_list), (yyvsp[-3].column_value_list_pair).column_list, (yyvsp[-3].column_value_list_pair).value_list,
                                  (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 38274 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1882:
#line 12670 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= NULL; }
#line 38280 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1883:
#line 12671 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= (yyvsp[0].with_clause); }
#line 38286 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1884:
#line 12676 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[-2].column_value_list_pair);
            if ((yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 38297 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1885:
#line 12683 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_value_list_pair).value_list= NEW_PTN PT_item_list;
            if ((yyval.column_value_list_pair).column_list == NULL || (yyval.column_value_list_pair).value_list == NULL ||
                (yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 38310 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1886:
#line 12695 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_pair).column= (yyvsp[-2].item);
            (yyval.column_value_pair).value= (yyvsp[0].item);
          }
#line 38319 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1887:
#line 12702 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 38325 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1888:
#line 12703 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 38331 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1889:
#line 12719 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].num), (yyvsp[-5].table), (yyvsp[-4].lex_cstr), (yyvsp[-3].string_list), (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 38339 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1890:
#line 12729 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-6].with_clause), (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 38347 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1891:
#line 12740 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-7].with_clause), (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 38355 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1894:
#line 12751 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 38361 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1895:
#line 12752 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].opt_delete_option) | (yyvsp[0].num); }
#line 38367 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1896:
#line 12756 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_QUICK; }
#line 38373 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1897:
#line 12757 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_LOW_PRIORITY; }
#line 38379 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1898:
#line 12758 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_IGNORE; }
#line 38385 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1899:
#line 12763 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_truncate_table_stmt((yyvsp[0].table));
          }
#line 38393 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1906:
#line 12783 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CPU;
    }
#line 38401 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1907:
#line 12787 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
#line 38409 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1908:
#line 12791 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
#line 38417 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1909:
#line 12795 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
#line 38425 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1910:
#line 12799 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
#line 38433 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1911:
#line 12803 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_IPC;
    }
#line 38441 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1912:
#line 12807 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
#line 38449 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1913:
#line 12811 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
#line 38457 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1914:
#line 12815 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_ALL;
    }
#line 38465 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1915:
#line 12822 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->show_profile_query_id= 0;
    }
#line 38473 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1916:
#line 12826 "sql_yacc.yy" /* yacc.c:1646  */
    {
      int error;
      Lex->show_profile_query_id=
        static_cast<my_thread_id>(my_strtoll10((yyvsp[0].lexer.lex_str).str, NULL, &error));
      if (error != 0)
        MYSQL_YYABORT;
    }
#line 38485 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1917:
#line 12839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
#line 38496 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1919:
#line 12850 "sql_yacc.yy" /* yacc.c:1646  */
    {
             Lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_databases_query(
                       (yyloc), YYTHD, Lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
#line 38509 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1920:
#line 12859 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto *p= NEW_PTN PT_show_tables((yyloc), (yyvsp[-3].show_cmd_type), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);

             MAKE_CMD(p);
           }
#line 38519 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1921:
#line 12865 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->verbose= (yyvsp[-3].is_not_empty);
             lex->select_lex->db= (yyvsp[-1].simple_string);
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_triggers_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
#line 38535 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1922:
#line 12877 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex->db= (yyvsp[-1].simple_string);
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_events_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
#line 38550 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1923:
#line 12888 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex->db= (yyvsp[-1].simple_string);
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_tables_query((yyloc), YYTHD, lex->wild,
                                         (yyvsp[0].wild_or_where).where, true) == nullptr)
               MYSQL_YYABORT;
           }
#line 38565 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1924:
#line 12899 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->set_wild((yyvsp[0].wild_or_where).wild)) {
              MYSQL_YYABORT; // OOM
            }
            if ((yyvsp[0].wild_or_where).where != nullptr) {
              ITEMIZE((yyvsp[0].wild_or_where).where, &(yyvsp[0].wild_or_where).where);
              Select->set_where_cond((yyvsp[0].wild_or_where).where);
            }
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex->db= (yyvsp[-1].simple_string);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
#line 38584 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1925:
#line 12914 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PLUGINS))
              MYSQL_YYABORT;
          }
#line 38595 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1926:
#line 12921 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const bool is_temp_table=
              Lex->create_info->options & HA_LEX_CREATE_TMP_TABLE;
            if (resolve_engine(YYTHD, to_lex_cstring((yyvsp[-1].lexer.lex_str)), is_temp_table, true,
                               &Lex->create_info->db_type))
              MYSQL_YYABORT;
          }
#line 38607 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1927:
#line 12929 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info->db_type= NULL; }
#line 38613 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1928:
#line 12936 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            Item *where= (yyvsp[0].wild_or_where).where;
            LEX_STRING wild= (yyvsp[0].wild_or_where).wild;
            DBUG_ASSERT((wild.str == nullptr) || (where == nullptr));

            auto *p= where ? NEW_PTN PT_show_fields((yyloc), (yyvsp[-5].show_cmd_type), (yyvsp[-2].table), where)
                           : NEW_PTN PT_show_fields((yyloc), (yyvsp[-5].show_cmd_type), (yyvsp[-2].table), wild);

            lex->sql_command= SQLCOM_SHOW_FIELDS;
            MAKE_CMD(p);
          }
#line 38635 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1929:
#line 12954 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
#line 38643 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1930:
#line 12958 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
#line 38651 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1931:
#line 12962 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
#line 38660 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1932:
#line 12967 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));
          }
#line 38669 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1933:
#line 12972 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
#line 38678 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1934:
#line 12977 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[-1].limit_clause));
          }
#line 38687 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1935:
#line 12987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            auto *p= NEW_PTN PT_show_keys((yyloc), (yyvsp[-5].is_not_empty), (yyvsp[-2].table), (yyvsp[0].item));

            lex->sql_command= SQLCOM_SHOW_KEYS;
            MAKE_CMD(p);
          }
#line 38704 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1936:
#line 13000 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_ENGINES))
              MYSQL_YYABORT;
          }
#line 38715 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1937:
#line 13007 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            if (create_select_for_variable(&pc, "warning_count"))
              YYABORT;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_select(NULL);
          }
#line 38727 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1938:
#line 13015 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            if (create_select_for_variable(&pc, "error_count"))
              YYABORT;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_select(NULL);
          }
#line 38739 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1939:
#line 13023 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_WARNS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
          }
#line 38751 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1940:
#line 13031 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_ERRORS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
          }
#line 38763 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1941:
#line 13039 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER_THD(YYTHD, ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            Lex->sql_command = SQLCOM_SHOW_PROFILES;
          }
#line 38775 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1942:
#line 13047 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));

            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (prepare_schema_table(YYTHD, lex, NULL, SCH_PROFILES) != 0)
              YYABORT;
          }
#line 38789 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1943:
#line 13057 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_STATUS;
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM

            if ((yyvsp[-2].var_type) == OPT_SESSION)
            {
              if (build_show_session_status(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
            else
            {
              if (build_show_global_status(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
          }
#line 38815 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1944:
#line 13079 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;
            Lex->verbose= (yyvsp[-1].is_not_empty);
          }
#line 38824 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1945:
#line 13084 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_VARIABLES;
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM

            if ((yyvsp[-2].var_type) == OPT_SESSION)
            {
              if (build_show_session_variables(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
            else
            {
              if (build_show_global_variables(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
          }
#line 38850 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1946:
#line 13106 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_character_set_query(
                                  (yyloc), YYTHD, Lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 38863 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1947:
#line 13115 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_collation_query(
                                  (yyloc), YYTHD, Lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 38876 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1948:
#line 13124 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
            /* Show all available grants in the server */
          }
#line 38886 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1949:
#line 13130 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants(0, 0, false);
            MAKE_CMD(tmp);
          }
#line 38895 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1950:
#line 13135 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyvsp[0].lex_user), 0, false);
            MAKE_CMD(tmp);
          }
#line 38904 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1951:
#line 13140 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyvsp[-2].lex_user), (yyvsp[0].user_list), false);
            MAKE_CMD(tmp);
          }
#line 38913 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1952:
#line 13145 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants(0, 0, true);
            MAKE_CMD(tmp);
          }
#line 38922 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1953:
#line 13150 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyvsp[0].lex_user), 0, true);
            MAKE_CMD(tmp);
          }
#line 38931 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1954:
#line 13155 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyvsp[-2].lex_user), (yyvsp[0].user_list), true);
            MAKE_CMD(tmp);
          }
#line 38940 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1955:
#line 13160 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
            Lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            Lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 38950 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1956:
#line 13166 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[0].table), NULL,0))
              MYSQL_YYABORT;
            lex->only_view= 0;
            lex->create_info->storage_media= HA_SM_DEFAULT;
          }
#line 38963 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1957:
#line 13175 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->only_view= 1;
          }
#line 38975 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1958:
#line 13183 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
#line 38983 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1959:
#line 13187 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
#line 38991 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1960:
#line 13191 "sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= Lex;
           Lex->sql_command= SQLCOM_SHOW_CLIENT_STATS;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_CLIENT_STATS))
             MYSQL_YYABORT;
          }
#line 39002 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1961:
#line 13198 "sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= Lex;
           lex->sql_command= SQLCOM_SHOW_USER_STATS;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_USER_STATS))
             MYSQL_YYABORT;
          }
#line 39013 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1962:
#line 13205 "sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= Lex;
           Lex->sql_command= SQLCOM_SHOW_THREAD_STATS;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_THREAD_STATS))
             MYSQL_YYABORT;
          }
#line 39024 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1963:
#line 13212 "sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= Lex;
           lex->sql_command= SQLCOM_SHOW_TABLE_STATS;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLE_STATS))
             MYSQL_YYABORT;
          }
#line 39035 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1964:
#line 13219 "sql_yacc.yy" /* yacc.c:1646  */
    {
           LEX *lex= Lex;
           lex->sql_command= SQLCOM_SHOW_INDEX_STATS;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_INDEX_STATS))
             MYSQL_YYABORT;
          }
#line 39046 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1965:
#line 13226 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[0].spname);
          }
#line 39057 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1966:
#line 13233 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[0].spname);
          }
#line 39068 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1967:
#line 13240 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[0].spname);
          }
#line 39078 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1968:
#line 13246 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_procedures_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 39092 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1969:
#line 13256 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_procedures_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 39106 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1970:
#line 13266 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 39115 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1971:
#line 13271 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 39124 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1972:
#line 13276 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
#line 39133 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1973:
#line 13281 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            lex->grant_user=(yyvsp[0].lex_user);
          }
#line 39143 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1974:
#line 13290 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
#line 39149 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1975:
#line 13292 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
#line 39155 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1976:
#line 13294 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
#line 39161 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1981:
#line 13308 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= 0; }
#line 39167 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1982:
#line 13309 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= (yyvsp[0].lexer.lex_str).str; }
#line 39173 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1983:
#line 13313 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 39179 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1984:
#line 13314 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 39185 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1985:
#line 13318 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 39191 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1986:
#line 13319 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 39197 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1987:
#line 13323 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::STANDARD; }
#line 39203 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1988:
#line 13324 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::FULL_SHOW; }
#line 39209 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1989:
#line 13325 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_SHOW; }
#line 39215 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1990:
#line 13326 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_FULL_SHOW; }
#line 39221 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1993:
#line 13335 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = 0; }
#line 39227 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1994:
#line 13336 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = (yyvsp[0].lexer.lex_str).str; }
#line 39233 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1995:
#line 13340 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = 4; /* skip magic number */ }
#line 39239 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1996:
#line 13341 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 39245 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1997:
#line 13345 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = {}; }
#line 39251 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1998:
#line 13346 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { (yyvsp[0].lexer.lex_str), {} }; }
#line 39257 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1999:
#line 13347 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { {}, (yyvsp[0].item) }; }
#line 39263 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2000:
#line 13353 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_show_fields((yyloc), Show_cmd_type::STANDARD, (yyvsp[-1].table), (yyvsp[0].lexer.lex_str));
          }
#line 39271 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2001:
#line 13360 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain((yyvsp[-1].explain_format_type), (yyvsp[0].top_level_node));
          }
#line 39279 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2007:
#line 13372 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain_for_connection(static_cast<my_thread_id>((yyvsp[0].ulong_num)));
          }
#line 39287 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2010:
#line 13384 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
          }
#line 39295 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2011:
#line 13388 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "JSON"))
              (yyval.explain_format_type)= Explain_format_type::JSON;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TRADITIONAL"))
              (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TREE"))
              (yyval.explain_format_type)= Explain_format_type::TREE;
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 39313 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2012:
#line 13402 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.explain_format_type)= Explain_format_type::TREE_WITH_EXECUTE;
          }
#line 39321 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2013:
#line 13408 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= LEX_STRING{ nullptr, 0 }; }
#line 39327 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2014:
#line 13410 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].string) != nullptr)
              (yyval.lexer.lex_str)= (yyvsp[0].string)->lex_string();
          }
#line 39336 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2016:
#line 13422 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 39347 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2017:
#line 13429 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39353 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2018:
#line 13434 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
            if (Select->add_tables(YYTHD, (yyvsp[0].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 39370 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2019:
#line 13446 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39376 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2021:
#line 13451 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39382 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2022:
#line 13453 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 39398 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2023:
#line 13465 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              YYTHD->syntax_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            }
          }
#line 39410 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2024:
#line 13473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 39426 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2026:
#line 13489 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39432 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2027:
#line 13494 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ERROR_LOG; }
#line 39438 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2028:
#line 13496 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ENGINE_LOG; }
#line 39444 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2029:
#line 13498 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GENERAL_LOG; }
#line 39450 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2030:
#line 13500 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLOW_LOG; }
#line 39456 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2031:
#line 13502 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_BINARY_LOG; }
#line 39462 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2032:
#line 13504 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_RELAY_LOG; }
#line 39468 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2033:
#line 13506 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_HOSTS; }
#line 39474 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2034:
#line 13508 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GRANT; }
#line 39480 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2035:
#line 13510 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_LOG; }
#line 39486 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2036:
#line 13512 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_STATUS; }
#line 39492 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2037:
#line 13514 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_CLIENT_STATS; }
#line 39498 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2038:
#line 13516 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_STATS; }
#line 39504 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2039:
#line 13518 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_THREAD_STATS; }
#line 39510 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2040:
#line 13520 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_TABLE_STATS; }
#line 39516 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2041:
#line 13522 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_INDEX_STATS; }
#line 39522 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2042:
#line 13524 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_RESOURCES; }
#line 39528 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2043:
#line 13526 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_OPTIMIZER_COSTS; }
#line 39534 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2044:
#line 13528 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_FLUSH_PAGE_BITMAPS; }
#line 39540 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2045:
#line 13532 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= NULL; }
#line 39546 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2047:
#line 13538 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 39555 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2048:
#line 13543 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39561 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2049:
#line 13545 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET;
            lex->type|= REFRESH_PERSIST;
            lex->option_type= OPT_PERSIST;
          }
#line 39572 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2052:
#line 13560 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= false;
            lex->name= NULL_STR;
          }
#line 39582 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2053:
#line 13566 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 39592 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2054:
#line 13574 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLAVE; }
#line 39598 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2056:
#line 13577 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_MASTER;
            /*
              Reset Master should acquire global read lock
              in order to avoid any parallel transaction commits
              while the reset operation is going on.

              *Only if* the thread is not already acquired the global
              read lock, server will acquire global read lock
              during the operation and release it at the
              end of the reset operation.
            */
            if (!(YYTHD)->global_read_lock.is_acquired())
              Lex->type|= REFRESH_TABLES | REFRESH_READ_LOCK;
          }
#line 39618 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2058:
#line 13594 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type |= REFRESH_RESET_PAGE_BITMAPS; }
#line 39624 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2059:
#line 13598 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= false; }
#line 39630 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2060:
#line 13599 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= true; }
#line 39636 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2061:
#line 13603 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39642 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2062:
#line 13605 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) == 0 || (yyvsp[0].ulonglong_number) > MAX_ALLOWED_FN_EXT_RESET_MASTER)
            {
              my_error(ER_RESET_MASTER_TO_VALUE_OUT_OF_RANGE, MYF(0),
                       (yyvsp[0].ulonglong_number), MAX_ALLOWED_FN_EXT_RESET_MASTER);
              MYSQL_YYABORT;
            }
            else
              Lex->next_binlog_file_nr = (yyvsp[0].ulonglong_number);
          }
#line 39657 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2063:
#line 13619 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
#line 39667 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2064:
#line 13625 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39673 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2066:
#line 13631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->purge_value_list.empty();
            lex->purge_value_list.push_front(new Item_uint((yyvsp[0].ulonglong_number)));
            lex->type= PURGE_BITMAPS_TO_LSN;
          }
#line 39684 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2067:
#line 13641 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->to_log = (yyvsp[0].lexer.lex_str).str;
          }
#line 39692 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2068:
#line 13645 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex= Lex;
            lex->purge_value_list.empty();
            lex->purge_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
#line 39705 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2069:
#line 13659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex=Lex;
            lex->kill_value_list.empty();
            lex->kill_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_KILL;
          }
#line 39718 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2070:
#line 13670 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 39724 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2071:
#line 13671 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 39730 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2072:
#line 13672 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= ONLY_KILL_QUERY; }
#line 39736 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2073:
#line 13679 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex->db= (yyvsp[0].lexer.lex_str).str;
          }
#line 39746 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2074:
#line 13707 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_table((yyvsp[-16].filetype),  // data_or_xml
                                      (yyvsp[-15].lock_type),  // load_data_lock
                                      (yyvsp[-14].is_not_empty),  // opt_local
                                      (yyvsp[-12].lexer.lex_str),  // TEXT_STRING_filesystem
                                      (yyvsp[-11].on_duplicate),  // opt_duplicate
                                      (yyvsp[-8].table), // table_ident
                                      (yyvsp[-7].string_list), // opt_use_partition
                                      (yyvsp[-6].lexer.charset), // opt_load_data_charset
                                      (yyvsp[-5].string), // opt_xml_rows_identified_by
                                      (yyvsp[-4].field_separators), // opt_field_term
                                      (yyvsp[-3].line_separators), // opt_line_term
                                      (yyvsp[-2].ulong_num), // opt_ignore_lines
                                      (yyvsp[-1].item_list2), // opt_field_or_var_spec
                                      (yyvsp[0].load_set_list).set_var_list,// opt_load_data_set_spec
                                      (yyvsp[0].load_set_list).set_expr_list,
                                      (yyvsp[0].load_set_list).set_expr_str_list);
          }
#line 39769 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2075:
#line 13728 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_CSV; }
#line 39775 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2076:
#line 13729 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_XML; }
#line 39781 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2077:
#line 13733 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 39787 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2078:
#line 13734 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 39793 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2079:
#line 13738 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 39799 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2080:
#line 13739 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT; }
#line 39805 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2081:
#line 13740 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 39811 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2082:
#line 13744 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::ERROR; }
#line 39817 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2084:
#line 13749 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::REPLACE_DUP; }
#line 39823 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2085:
#line 13750 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::IGNORE_DUP; }
#line 39829 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2086:
#line 13754 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators).cleanup(); }
#line 39835 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2087:
#line 13755 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators)= (yyvsp[0].field_separators); }
#line 39841 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2088:
#line 13760 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators)= (yyvsp[-1].field_separators);
            (yyval.field_separators).merge_field_separators((yyvsp[0].field_separators));
          }
#line 39850 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2090:
#line 13769 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).field_term= (yyvsp[0].string);
          }
#line 39859 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2091:
#line 13774 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
            (yyval.field_separators).opt_enclosed= 1;
          }
#line 39869 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2092:
#line 13780 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
          }
#line 39878 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2093:
#line 13785 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).escaped= (yyvsp[0].string);
          }
#line 39887 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2094:
#line 13792 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators).cleanup(); }
#line 39893 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2095:
#line 13793 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators)= (yyvsp[0].line_separators); }
#line 39899 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2096:
#line 13798 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators)= (yyvsp[-1].line_separators);
            (yyval.line_separators).merge_line_separators((yyvsp[0].line_separators));
          }
#line 39908 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2098:
#line 13807 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_term= (yyvsp[0].string);
          }
#line 39917 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2099:
#line 13812 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_start= (yyvsp[0].string);
          }
#line 39926 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2100:
#line 13819 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= nullptr; }
#line 39932 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2101:
#line 13820 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= (yyvsp[0].string); }
#line 39938 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2102:
#line 13824 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 39944 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2103:
#line 13825 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= atol((yyvsp[-1].lexer.lex_str).str); }
#line 39950 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2106:
#line 13834 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 39956 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2107:
#line 13835 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 39962 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2108:
#line 13836 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 39968 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2109:
#line 13841 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 39978 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2110:
#line 13847 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 39988 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2112:
#line 13857 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_user_var_as_out_param((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 39996 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2113:
#line 13863 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= {nullptr, nullptr, nullptr}; }
#line 40002 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2114:
#line 13864 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= (yyvsp[0].load_set_list); }
#line 40008 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2115:
#line 13869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list)= (yyvsp[-2].load_set_list);
            if ((yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var) ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr) ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 40020 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2116:
#line 13877 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list).set_var_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_var_list == nullptr ||
                (yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_expr_list == nullptr ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_str_list= NEW_PTN List<String>;
            if ((yyval.load_set_list).set_expr_str_list == nullptr ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 40041 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2117:
#line 13897 "sql_yacc.yy" /* yacc.c:1646  */
    {
            size_t length= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;

            if ((yyvsp[0].item) == nullptr)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item)->item_name.copy((yylsp[-1]).cpp.start, length, YYTHD->charset());

            (yyval.load_set_element).set_var= (yyvsp[-2].item);
            (yyval.load_set_element).set_expr= (yyvsp[0].item);
            (yyval.load_set_element).set_expr_str= NEW_PTN String((yylsp[-1]).cpp.start,
                                            length,
                                            YYTHD->charset());
            if ((yyval.load_set_element).set_expr_str == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 40061 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2118:
#line 13918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_text_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
          }
#line 40070 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2119:
#line 13923 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_nchar_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
            warn_about_deprecated_national(YYTHD);
          }
#line 40080 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2120:
#line 13929 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_underscore_charset((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 40089 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2121:
#line 13934 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_concat((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].text_literal), (yyvsp[0].lexer.lex_str));
          }
#line 40098 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2122:
#line 13942 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                               YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 40109 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2123:
#line 13949 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 40120 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2124:
#line 13956 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_bin_string::make_bin_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 40131 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2125:
#line 13966 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *i= NEW_PTN Item_param((yyloc), YYMEM_ROOT,
                                        (uint) ((yylsp[0]).raw.start - YYLIP->get_buf()));
            if (i == NULL)
              MYSQL_YYABORT;
            auto *lex= Lex;
            /*
              If we are not re-parsing a CTE definition, this is a
              real parameter, so add it to param_list.
            */
            if (!lex->reparse_common_table_expr_at &&
                lex->param_list.push_back(i))
              MYSQL_YYABORT;
            (yyval.param_marker)= i;
          }
#line 40151 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2127:
#line 13985 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 40157 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2128:
#line 13987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item_num) == NULL)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg();
          }
#line 40168 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2129:
#line 13997 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].text_literal); }
#line 40174 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2130:
#line 13998 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 40180 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2132:
#line 14001 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= NEW_PTN Item_null((yyloc));
          }
#line 40196 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2133:
#line 14013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_false((yyloc));
          }
#line 40204 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2134:
#line 14017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_true((yyloc));
          }
#line 40212 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2135:
#line 14021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_hex_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40220 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2136:
#line 14025 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_bin_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40228 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2137:
#line 14029 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_hex_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 40236 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2138:
#line 14033 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_bin_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 40244 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2139:
#line 14040 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40252 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2140:
#line 14044 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40260 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2141:
#line 14048 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 40268 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2142:
#line 14052 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_decimal((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYCSCL);
          }
#line 40276 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2143:
#line 14056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_float((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 40284 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2144:
#line 14064 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATE, YYCSCL);
          }
#line 40292 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2145:
#line 14068 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_TIME, YYCSCL);
          }
#line 40300 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2146:
#line 14072 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATETIME, YYCSCL);
          }
#line 40308 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2149:
#line 14091 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_table_wild((yyloc), NULL, (yyvsp[-2].lexer.lex_str).str);
          }
#line 40316 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2150:
#line 14095 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN PTI_table_wild((yyloc), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).str);
          }
#line 40326 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2151:
#line 14104 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 40334 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2152:
#line 14111 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[0].item), ORDER_NOT_RELEVANT);
          }
#line 40342 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2153:
#line 14118 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 40350 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2155:
#line 14126 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_nospvar_ident((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40358 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2157:
#line 14134 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_2d((yyloc), (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 40366 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2158:
#line 14138 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 40376 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2159:
#line 14147 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 40386 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2160:
#line 14153 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))
              (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            else {
              (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str)));
            }
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 40400 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2161:
#line 14166 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 40410 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2162:
#line 14172 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(YYTHD->get_protocol(),
                                    to_lex_cstring((yyvsp[-3].lexer.lex_str)),
                                    to_lex_cstring((yyvsp[-1].lexer.lex_str)), 0);
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 40422 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2163:
#line 14182 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 40428 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2164:
#line 14184 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              size_t wlen= cs->cset->well_formed_len(cs, (yyvsp[0].lexer.lex_str).str,
                                                     (yyvsp[0].lexer.lex_str).str+(yyvsp[0].lexer.lex_str).length,
                                                     (yyvsp[0].lexer.lex_str).length, &dummy_error);
              if (wlen < (yyvsp[0].lexer.lex_str).length)
              {
                ErrConvString err((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 40459 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2165:
#line 14214 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!strcont((yyvsp[0].lexer.lex_str).str, "\n"))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 40473 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2166:
#line 14227 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (strcont((yyvsp[0].lexer.lex_str).str, "."))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 40487 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2167:
#line 14240 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 40504 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2168:
#line 14256 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), thd->variables.collation_connection,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 40521 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2169:
#line 14272 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 40539 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2172:
#line 14294 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= to_lex_string(Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length));
          }
#line 40547 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2173:
#line 14301 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset(), true))
                MYSQL_YYABORT;
            }
          }
#line 40564 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2174:
#line 14316 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 40570 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2175:
#line 14318 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lexer.lex_str).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 40582 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2177:
#line 14330 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 40593 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2178:
#line 14339 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)=to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 40599 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2179:
#line 14341 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lex_cstr).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lex_cstr).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_cstr).length= (yyvsp[0].lexer.keyword).length;
          }
#line 40611 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2181:
#line 14353 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 40622 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2182:
#line 14362 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 40628 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2183:
#line 14363 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 40634 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2184:
#line 14364 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 40640 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2188:
#line 14375 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 40649 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2189:
#line 14380 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 40658 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2190:
#line 14388 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[0].lex_user);
          }
#line 40666 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2191:
#line 14392 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)=(LEX_USER*) YYTHD->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;
            /*
              empty LEX_USER means current_user and
              will be handled in the  get_current_user() function
              later
            */
            memset((yyval.lex_user), 0, sizeof(LEX_USER));
          }
#line 40681 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2192:
#line 14406 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 40690 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2193:
#line 14411 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 40699 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2194:
#line 14419 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
            if (check_and_convert_db_name(&(yyval.lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
          }
#line 40709 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2644:
#line 14971 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.set)= NEW_PTN PT_set((yylsp[-1]), (yyvsp[0].start_option_value_list));
          }
#line 40717 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2645:
#line 14980 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_no_type((yyvsp[-1].option_value_no_option_type), (yylsp[-1]), (yyvsp[0].option_value_list));
          }
#line 40725 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2646:
#line 14984 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_transaction((yyvsp[0].transaction_characteristics), (yylsp[0]));
          }
#line 40733 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2647:
#line 14988 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_type((yyvsp[-1].var_type), (yyvsp[0].start_option_value_list_following_option_type));
          }
#line 40741 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2648:
#line 14992 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.lex_str).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                false,
                                                                (yylsp[-1]));
          }
#line 40752 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2649:
#line 14999 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.keyword).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                true,
                                                                (yylsp[-1]));
          }
#line 40764 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2650:
#line 15007 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.lex_str).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    false,
                                                                    (yylsp[-1]));
          }
#line 40776 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2651:
#line 15015 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.keyword).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    true,
                                                                    (yylsp[-1]));
          }
#line 40789 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2652:
#line 15027 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role((yyvsp[0].user_list));
          }
#line 40797 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2653:
#line 15031 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_NONE);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 40806 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2654:
#line 15036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_DEFAULT);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 40815 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2655:
#line 15041 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), (yyvsp[-2].user_list),
                                                    role_enum::ROLE_NAME);
          }
#line 40824 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2656:
#line 15046 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_NONE);
          }
#line 40833 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2657:
#line 15051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_ALL);
          }
#line 40842 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2658:
#line 15056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_ALL, (yyvsp[0].user_list));
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 40851 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2659:
#line 15063 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= NULL; }
#line 40857 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2660:
#line 15064 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= (yyvsp[0].user_list); }
#line 40863 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2661:
#line 15069 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[0].lexer.lex_str)), nullptr);
          }
#line 40871 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2662:
#line 15073 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].thread_id_list_type));
          }
#line 40879 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2663:
#line 15080 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= NEW_PTN Mem_root_array<ulonglong>(YYMEM_ROOT);
            if ((yyval.thread_id_list_type) == nullptr || (yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 40889 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2664:
#line 15086 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= (yyvsp[-2].thread_id_list_type);
            if ((yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 40899 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2665:
#line 15094 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.thread_id_list_type)= (yyvsp[0].thread_id_list_type); }
#line 40905 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2666:
#line 15100 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)=
              NEW_PTN PT_start_option_value_list_following_option_type_eq((yyvsp[-1].option_value_following_option_type),
                                                                          (yylsp[-1]),
                                                                          (yyvsp[0].option_value_list));
          }
#line 40916 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2667:
#line 15107 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)= NEW_PTN
              PT_start_option_value_list_following_option_type_transaction((yyvsp[0].transaction_characteristics),
                                                                           (yylsp[0]));
          }
#line 40926 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2668:
#line 15116 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= NULL; }
#line 40932 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2669:
#line 15117 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= (yyvsp[0].option_value_list); }
#line 40938 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2670:
#line 15123 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list_head((yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 40946 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2671:
#line 15127 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list((yyvsp[-2].option_value_list), (yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 40954 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2672:
#line 15135 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.node)= NEW_PTN PT_option_value_type((yyvsp[-1].var_type), (yyvsp[0].option_value_following_option_type));
          }
#line 40962 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2673:
#line 15138 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.node)= (yyvsp[0].option_value_no_option_type); }
#line 40968 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2674:
#line 15142 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 40974 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2675:
#line 15143 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 40980 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2676:
#line 15144 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST_ONLY; }
#line 40986 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2677:
#line 15145 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40992 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2678:
#line 15146 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40998 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2679:
#line 15150 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41004 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2680:
#line 15151 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 41010 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2681:
#line 15152 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41016 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2682:
#line 15153 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41022 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2683:
#line 15157 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 41028 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2684:
#line 15158 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 41034 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2685:
#line 15159 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41040 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2686:
#line 15160 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41046 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2687:
#line 15164 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 41052 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2688:
#line 15165 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 41058 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2689:
#line 15166 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.var_type)=OPT_PERSIST_ONLY; }
#line 41064 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2690:
#line 15167 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 41070 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2691:
#line 15168 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41076 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2692:
#line 15169 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 41082 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2693:
#line 15175 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_following_option_type)= NEW_PTN PT_option_value_following_option_type((yyloc), (yyvsp[-2].internal_variable_name), (yyvsp[0].item));
          }
#line 41090 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2694:
#line 15185 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_internal((yyvsp[-2].internal_variable_name), (yyvsp[0].item), (yylsp[0]));
          }
#line 41098 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2695:
#line 15189 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_user_var((yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 41106 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2696:
#line 15194 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_sys_var((yyvsp[-3].var_type), (yyvsp[-2].internal_variable_name), (yyvsp[0].item));
          }
#line 41114 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2697:
#line 15198 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_charset((yyvsp[0].lexer.charset));
          }
#line 41122 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2698:
#line 15202 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Bad syntax, always fails with an error
            */
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names((yylsp[-1]));
          }
#line 41133 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2699:
#line 15209 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_set_names((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 41141 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2700:
#line 15213 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_names(nullptr, nullptr);
          }
#line 41149 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2701:
#line 15220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_1d(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 41157 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2702:
#line 15224 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_2d((yyloc), to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 41165 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2703:
#line 15228 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_default((yyvsp[0].lexer.lex_str));
          }
#line 41173 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2704:
#line 15235 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].transaction_access_mode), (yyvsp[0].isolation_level));
          }
#line 41181 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2705:
#line 15239 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].isolation_level), (yyvsp[0].transaction_access_mode));
          }
#line 41189 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2706:
#line 15246 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_access_mode)= NEW_PTN PT_transaction_access_mode((yyvsp[0].num));
          }
#line 41197 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2707:
#line 15252 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= NULL; }
#line 41203 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2708:
#line 15253 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= (yyvsp[0].transaction_access_mode); }
#line 41209 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2709:
#line 15258 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.isolation_level)= NEW_PTN PT_isolation_level((yyvsp[0].tx_isolation));
          }
#line 41217 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2710:
#line 15264 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= NULL; }
#line 41223 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2711:
#line 15265 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= (yyvsp[0].isolation_level); }
#line 41229 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2712:
#line 15269 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 41235 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2713:
#line 15270 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 41241 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2714:
#line 15274 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 41247 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2715:
#line 15275 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 41253 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2716:
#line 15276 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 41259 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2717:
#line 15277 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 41265 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2719:
#line 15282 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 41271 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2720:
#line 15284 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON", 2, system_charset_info);
          }
#line 41279 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2721:
#line 15288 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ALL", 3, system_charset_info);
          }
#line 41287 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2722:
#line 15292 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "binary", 6, system_charset_info);
          }
#line 41295 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2723:
#line 15296 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ROW", 3, system_charset_info);
          }
#line 41303 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2724:
#line 15300 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "SYSTEM", 6, system_charset_info);
          }
#line 41311 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2725:
#line 15304 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "FORCE", 5, system_charset_info);
          }
#line 41319 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2726:
#line 15313 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
          }
#line 41331 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2727:
#line 15324 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_TABLES_FOR_BACKUP;
          }
#line 41339 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2728:
#line 15328 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 41347 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2729:
#line 15332 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41353 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2730:
#line 15334 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_lock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 41364 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2735:
#line 15354 "sql_yacc.yy" /* yacc.c:1646  */
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            enum_mdl_type mdl_lock_type;

            if (lock_type >= TL_WRITE_ALLOW_WRITE)
            {
              /* LOCK TABLE ... WRITE/LOW_PRIORITY WRITE */
              mdl_lock_type= MDL_SHARED_NO_READ_WRITE;
            }
            else if (lock_type == TL_READ)
            {
              /* LOCK TABLE ... READ LOCAL */
              mdl_lock_type= MDL_SHARED_READ;
            }
            else
            {
              /* LOCK TABLE ... READ */
              mdl_lock_type= MDL_SHARED_READ_ONLY;
            }

            if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), (yyvsp[-1].lex_cstr).str, 0, lock_type,
                                           mdl_lock_type))
              MYSQL_YYABORT;
          }
#line 41393 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2736:
#line 15381 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ_NO_INSERT; }
#line 41399 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2737:
#line 15382 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_DEFAULT; }
#line 41405 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2738:
#line 15384 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= TL_WRITE_LOW_PRIORITY;
            push_deprecated_warn(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
#line 41414 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2739:
#line 15388 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ; }
#line 41420 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2740:
#line 15393 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
          }
#line 41432 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2741:
#line 15404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_UNLOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_unlock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 41443 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2742:
#line 15411 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 41451 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2743:
#line 15419 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHUTDOWN;
            (yyval.top_level_node)= NEW_PTN PT_shutdown();
          }
#line 41460 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2744:
#line 15427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_restart_server();
          }
#line 41468 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2745:
#line 15434 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_ALTER_INSTANCE;
            (yyval.top_level_node)= NEW_PTN PT_alter_instance((yyvsp[0].alter_instance_action));
          }
#line 41477 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2746:
#line 15441 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-2].lexer.lex_str), "INNODB"))
            {
              (yyval.alter_instance_action)= ROTATE_INNODB_MASTER_KEY;
            }
            else if (is_identifier((yyvsp[-2].lexer.lex_str), "BINLOG"))
            {
              (yyval.alter_instance_action)= ROTATE_BINLOG_MASTER_KEY;
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
          }
#line 41497 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2747:
#line 15457 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "TLS"))
            {
              (yyval.alter_instance_action) = ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR;
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
          }
#line 41513 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2748:
#line 15469 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-4].lexer.lex_str), "TLS"))
            {
              (yyval.alter_instance_action) = ALTER_INSTANCE_RELOAD_TLS;
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-4]));
              MYSQL_YYABORT;
            }
          }
#line 41529 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2749:
#line 15488 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_open((yyvsp[-2].table), (yyvsp[0].lex_cstr));
          }
#line 41537 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2750:
#line 15492 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_close(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
          }
#line 41545 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2751:
#line 15501 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_table_scan(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 41553 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2752:
#line 15511 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_scan(to_lex_cstring((yyvsp[-5].lexer.lex_str)),
                                              to_lex_cstring((yyvsp[-3].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 41562 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2753:
#line 15523 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_range_scan(to_lex_cstring((yyvsp[-8].lexer.lex_str)),
                                                    to_lex_cstring((yyvsp[-6].lexer.lex_str)),
                                                    (yyvsp[-5].ha_rkey_mode), (yyvsp[-3].item_list2), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 41572 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2754:
#line 15531 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 41578 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2755:
#line 15532 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 41584 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2756:
#line 15536 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 41590 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2757:
#line 15537 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 41596 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2758:
#line 15538 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RPREV;  }
#line 41602 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2759:
#line 15539 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RLAST;  }
#line 41608 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2760:
#line 15543 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 41614 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2761:
#line 15544 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 41620 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2762:
#line 15545 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 41626 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2763:
#line 15546 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 41632 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2764:
#line 15547 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 41638 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2765:
#line 15554 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_revoke_roles((yyvsp[-2].role_or_privilege_list), (yyvsp[0].user_list));
            MAKE_CMD(tmp);
          }
#line 41647 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2766:
#line 15559 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (apply_privileges(YYTHD, *(yyvsp[-5].role_or_privilege_list)))
              MYSQL_YYABORT;
            lex->sql_command= (lex->grant == GLOBAL_ACLS) ? SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 41666 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2767:
#line 15574 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 41675 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2768:
#line 15579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= (lex->grant == (GLOBAL_ACLS & ~GRANT_ACL)) ?
                                                            SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 41693 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2769:
#line 15593 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
            Lex->users_list= *(yyvsp[0].user_list);
          }
#line 41702 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2770:
#line 15598 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->users_list= *(yyvsp[0].user_list);
            lex->users_list.push_front ((yyvsp[-2].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 41714 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2771:
#line 15609 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_grant_roles((yyvsp[-3].role_or_privilege_list), (yyvsp[-1].user_list), (yyvsp[0].is_not_empty));
            MAKE_CMD(tmp);
          }
#line 41723 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2772:
#line 15615 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if (apply_privileges(YYTHD, *(yyvsp[-7].role_or_privilege_list)))
              MYSQL_YYABORT;

            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 41742 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2773:
#line 15630 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 41751 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2774:
#line 15635 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 41767 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2775:
#line 15647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[0].is_not_empty))
              lex->grant |= GRANT_ACL;
            lex->users_list= *(yyvsp[-1].user_list);
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 41781 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2776:
#line 15659 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 41787 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2777:
#line 15660 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 41793 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2778:
#line 15661 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::FUNCTION; }
#line 41799 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2779:
#line 15662 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::PROCEDURE; }
#line 41805 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2782:
#line 15672 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= NEW_PTN Mem_root_array<PT_role_or_privilege *>(YYMEM_ROOT);
            if ((yyval.role_or_privilege_list) == NULL || (yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 41815 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2783:
#line 15678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= (yyvsp[-2].role_or_privilege_list);
            if ((yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 41825 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2784:
#line 15687 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lex_cstring_list) == NULL)
              (yyval.role_or_privilege)= NEW_PTN PT_role_or_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
            else
              (yyval.role_or_privilege)= NEW_PTN PT_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
          }
#line 41836 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2785:
#line 15694 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_role_at_host((yylsp[-2]), (yyvsp[-2].lexer.lex_str), (yyvsp[0].lexer.lex_str)); }
#line 41842 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2786:
#line 15696 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SELECT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 41848 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2787:
#line 15698 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), INSERT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 41854 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2788:
#line 15700 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), UPDATE_ACL, (yyvsp[0].lex_cstring_list)); }
#line 41860 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2789:
#line 15702 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REFERENCES_ACL, (yyvsp[0].lex_cstring_list)); }
#line 41866 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2790:
#line 15704 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DELETE_ACL); }
#line 41872 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2791:
#line 15706 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), 0); }
#line 41878 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2792:
#line 15708 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), INDEX_ACL); }
#line 41884 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2793:
#line 15710 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), ALTER_ACL); }
#line 41890 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2794:
#line 15712 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), CREATE_ACL); }
#line 41896 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2795:
#line 15714 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DROP_ACL); }
#line 41902 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2796:
#line 15716 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EXECUTE_ACL); }
#line 41908 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2797:
#line 15718 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), RELOAD_ACL); }
#line 41914 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2798:
#line 15720 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SHUTDOWN_ACL); }
#line 41920 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2799:
#line 15722 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), PROCESS_ACL); }
#line 41926 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2800:
#line 15724 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), FILE_ACL); }
#line 41932 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2801:
#line 15726 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), GRANT_ACL);
            Lex->grant_privilege= true;
          }
#line 41941 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2802:
#line 15731 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_DB_ACL); }
#line 41947 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2803:
#line 15733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* DEPRECATED */
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SUPER_ACL);
            if (Lex->grant != GLOBAL_ACLS)
            {
              /*
                 An explicit request was made for the SUPER priv id
              */
              push_warning(Lex->thd, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX,
                           "The SUPER privilege identifier is deprecated");
            }
          }
#line 41965 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2804:
#line 15747 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-2]), CREATE_TMP_ACL); }
#line 41971 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2805:
#line 15749 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), LOCK_TABLES_ACL); }
#line 41977 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2806:
#line 15751 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_SLAVE_ACL); }
#line 41983 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2807:
#line 15753 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_CLIENT_ACL); }
#line 41989 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2808:
#line 15755 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_VIEW_ACL); }
#line 41995 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2809:
#line 15757 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_VIEW_ACL); }
#line 42001 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2810:
#line 15759 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_PROC_ACL); }
#line 42007 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2811:
#line 15761 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), ALTER_PROC_ACL); }
#line 42013 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2812:
#line 15763 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_USER_ACL); }
#line 42019 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2813:
#line 15765 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EVENT_ACL); }
#line 42025 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2814:
#line 15767 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), TRIGGER_ACL); }
#line 42031 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2815:
#line 15769 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_TABLESPACE_ACL); }
#line 42037 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2816:
#line 15771 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_ROLE_ACL); }
#line 42043 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2817:
#line 15773 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), DROP_ROLE_ACL); }
#line 42049 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2818:
#line 15777 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 42055 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2819:
#line 15778 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 42061 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2824:
#line 15793 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[0].lexer.lex_str).str;
          }
#line 42075 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2825:
#line 15803 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[0].lexer.lex_str).str;
          }
#line 42089 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2826:
#line 15813 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[0].lexer.lex_str).str;
          }
#line 42103 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2827:
#line 15826 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_select()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 42121 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2828:
#line 15840 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select()->db = (yyvsp[-2].lexer.lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 42137 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2829:
#line 15852 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select()->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 42153 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2830:
#line 15864 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 42169 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2831:
#line 15876 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Table_ident *tmp;
            if (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))
              tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            else {
              tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str)));
            }
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 42190 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2832:
#line 15896 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42200 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2833:
#line 15902 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42210 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2834:
#line 15911 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42220 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2835:
#line 15917 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42230 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2836:
#line 15925 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 42236 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2837:
#line 15926 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 42242 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2838:
#line 15930 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 42248 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2839:
#line 15931 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 42254 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2840:
#line 15935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->has_password_generator= false;
            (yyvsp[-3].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
          }
#line 42269 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2841:
#line 15946 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->has_password_generator= true;
            (yyvsp[-4].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-4].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-4].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-4].lex_user)->discard_old_password= false;
            (yyvsp[-4].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
          }
#line 42284 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2842:
#line 15957 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->plugin.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-3].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->has_password_generator= false;
          }
#line 42299 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2843:
#line 15968 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->plugin.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-5].lex_user)->uses_authentication_string_clause= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= false;
            (yyvsp[-5].lex_user)->has_password_generator= false;
          }
#line 42316 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2844:
#line 15981 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->plugin.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
            (yyvsp[-5].lex_user)->has_password_generator= false;
          }
#line 42334 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2845:
#line 15995 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->has_password_generator= true;
          }
#line 42350 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2846:
#line 16007 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[0].lex_user);
            (yyvsp[0].lex_user)->auth= NULL_CSTR;
            (yyvsp[0].lex_user)->discard_old_password= false;
            (yyvsp[0].lex_user)->retain_current_password= false;
            (yyvsp[0].lex_user)->has_password_generator= false;
          }
#line 42362 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2847:
#line 16018 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->has_password_generator= false;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_replace_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 42380 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2848:
#line 16033 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-8].lex_user);
            (yyvsp[-8].lex_user)->has_password_generator= false;
            (yyvsp[-8].lex_user)->plugin.str= (yyvsp[-5].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->plugin.length= (yyvsp[-5].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->auth.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->auth.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->uses_replace_clause= true;
            (yyvsp[-8].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-8].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-8].lex_user)->discard_old_password= false;
            (yyvsp[-8].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 42401 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2849:
#line 16050 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->has_password_generator= false;
            (yyvsp[-4].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-4].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-4].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-4].lex_user)->discard_old_password= false;
            (yyvsp[-4].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 42416 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2850:
#line 16061 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->has_password_generator= true;
            (yyvsp[-5].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 42431 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2851:
#line 16072 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-7].lex_user);
            (yyvsp[-7].lex_user)->has_password_generator= true;
            (yyvsp[-7].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-7].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-7].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-7].lex_user)->uses_replace_clause= true;
            (yyvsp[-7].lex_user)->discard_old_password= false;
            (yyvsp[-7].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            (yyvsp[-7].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-7].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            Lex->contains_plaintext_password= true;
          }
#line 42449 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2852:
#line 16086 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->plugin.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-3].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->has_password_generator= false;
          }
#line 42464 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2853:
#line 16098 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_authentication_string_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            (yyvsp[-6].lex_user)->has_password_generator= false;
          }
#line 42481 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2854:
#line 16112 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->has_password_generator= false;
          }
#line 42499 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2855:
#line 16127 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-7].lex_user);
            (yyvsp[-7].lex_user)->plugin.str= (yyvsp[-4].lexer.lex_str).str;
            (yyvsp[-7].lex_user)->plugin.length= (yyvsp[-4].lexer.lex_str).length;
            (yyvsp[-7].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-7].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-7].lex_user)->discard_old_password= false;
            (yyvsp[-7].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
            (yyvsp[-7].lex_user)->has_password_generator= true;
          }
#line 42515 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2856:
#line 16139 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-1].lex_user);
            (yyvsp[-1].lex_user)->discard_old_password= (yyvsp[0].is_not_empty);
            (yyvsp[-1].lex_user)->retain_current_password= false;
            (yyvsp[-1].lex_user)->auth= NULL_CSTR;
            (yyvsp[-1].lex_user)->has_password_generator= false;
          }
#line 42527 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2857:
#line 16150 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42536 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2858:
#line 16155 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42545 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2859:
#line 16163 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
         }
#line 42554 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2860:
#line 16168 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42563 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2861:
#line 16175 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= NULL; }
#line 42569 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2862:
#line 16176 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= (yyvsp[-1].lex_cstring_list); }
#line 42575 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2863:
#line 16181 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= NEW_PTN Mem_root_array<LEX_CSTRING>(YYMEM_ROOT);
            if ((yyval.lex_cstring_list) == NULL || (yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 42585 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2864:
#line 16187 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= (yyvsp[-2].lex_cstring_list);
            if ((yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 42595 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2866:
#line 16197 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
#line 42603 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2867:
#line 16201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
#line 42611 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2868:
#line 16205 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
#line 42619 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2869:
#line 16209 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
#line 42627 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2870:
#line 16215 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42633 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2871:
#line 16217 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 42639 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2872:
#line 16221 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 42645 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2873:
#line 16222 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 42651 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2874:
#line 16226 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 42657 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2875:
#line 16228 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NAME;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 42665 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2876:
#line 16232 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.role_type = role_enum::ROLE_ALL;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 42674 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2877:
#line 16237 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 42680 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2878:
#line 16239 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_DEFAULT; }
#line 42686 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2879:
#line 16243 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.grant_as_used = false; }
#line 42692 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2880:
#line 16245 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.grant_as_used = true;
            Lex->grant_as.user = (yyvsp[-1].lex_user);
          }
#line 42701 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2881:
#line 16252 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 42711 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2882:
#line 16257 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42717 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2883:
#line 16261 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42723 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2884:
#line 16262 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42729 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2885:
#line 16267 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 42735 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2886:
#line 16268 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 42741 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2887:
#line 16269 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 42747 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2888:
#line 16274 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 42753 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2889:
#line 16275 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 42759 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2890:
#line 16276 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 42765 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2891:
#line 16280 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42771 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2892:
#line 16281 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42777 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2893:
#line 16286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 42790 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2894:
#line 16298 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 42803 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2895:
#line 16308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 42813 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2896:
#line 16317 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 42823 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2897:
#line 16326 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 42833 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2898:
#line 16339 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 42839 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2899:
#line 16340 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 42845 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2900:
#line 16341 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0; }
#line 42851 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2903:
#line 16354 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.subquery)= NEW_PTN PT_subquery((yyloc), (yyvsp[0].query_primary));
          }
#line 42859 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2904:
#line 16360 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_STRAIGHT_JOIN; }
#line 42865 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2905:
#line 16361 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_HIGH_PRIORITY; }
#line 42871 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2906:
#line 16362 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_DISTINCT; }
#line 42877 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2907:
#line 16363 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_SMALL_RESULT; }
#line 42883 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2908:
#line 16364 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_BIG_RESULT; }
#line 42889 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2909:
#line 16365 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= OPTION_BUFFER_RESULT; }
#line 42895 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2910:
#line 16366 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_SQL_CALC_FOUND_ROWS));
            (yyval.ulonglong_number)= OPTION_FOUND_ROWS;
          }
#line 42906 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2911:
#line 16372 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_ALL; }
#line 42912 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2912:
#line 16383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Initialize context for 'CREATE view_or_trigger_or_sp_or_event'
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
#line 42923 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2913:
#line 16393 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42929 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2914:
#line 16395 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42935 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2915:
#line 16397 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42941 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2929:
#line 16430 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
#line 42956 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2930:
#line 16444 "sql_yacc.yy" /* yacc.c:1646  */
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[0].lex_user));
          }
#line 42964 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2931:
#line 16457 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42970 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2932:
#line 16459 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42976 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2933:
#line 16461 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42982 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2934:
#line 16466 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_mode= enum_view_create_mode::VIEW_CREATE_OR_REPLACE; }
#line 42988 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2935:
#line 16471 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
#line 42994 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2936:
#line 16473 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
#line 43000 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2937:
#line 16475 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TEMPTABLE; }
#line 43006 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2938:
#line 16480 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
#line 43012 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2939:
#line 16482 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
#line 43018 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2940:
#line 16484 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
#line 43024 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2941:
#line 16489 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            thd->parsing_system_view= lex->query_tables->is_system_view;
            if ((yyvsp[0].simple_ident_list).size())
            {
              for (auto column_alias : (yyvsp[0].simple_ident_list))
              {
                // Report error if the column name/length is incorrect.
                if (check_column_name(column_alias.str))
                {
                  my_error(ER_WRONG_COLUMN_NAME, MYF(0), column_alias.str);
                  MYSQL_YYABORT;
                }
              }
              /*
                The $4 object is short-lived (its 'm_array' is not);
                so we have to duplicate it, and then we can store a
                pointer.
              */
              void *rawmem= thd->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
              if (!rawmem)
                MYSQL_YYABORT; /* purecov: inspected */
              lex->query_tables->
                set_derived_column_names(static_cast<Create_col_name_list* >(rawmem));
            }
          }
#line 43064 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2943:
#line 16529 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= false;
            lex->parsing_options.allows_select_into= false;

            /*
              In CREATE VIEW v ... the table_list initially contains
              here a table entry for the destination "table" `v'.
              Backup it and clean the table list for the processing of
              the query expression and push `v' back to the beginning of the
              table_list finally.

              @todo: Don't save the CREATE destination table in
                     SELECT_LEX::table_list and remove this backup & restore.

              The following work only with the local list, the global list
              is created correctly in this case
            */
            SQL_I_List<TABLE_LIST> save_list;
            SELECT_LEX * const save_select= Select;
            save_select->table_list.save_and_clear(&save_list);

            CONTEXTUALIZE((yyvsp[-1].query_primary));

            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            save_select->table_list.push_front(&save_list);

            Lex->create_view_check= (yyvsp[0].num);

            /*
              It's simpler to use @$ to grab the whole rule text, OTOH  it's
              also simple to lose something that way when changing this rule,
              so let use explicit @1 and @2 to memdup this view definition:
            */
            const size_t len= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;
            lex->create_view_select.str=
              static_cast<char *>(thd->memdup((yylsp[-1]).cpp.start, len));
            lex->create_view_select.length= len;
            trim_whitespace(thd->charset(), &lex->create_view_select);

            lex->parsing_options.allows_variable= true;
            lex->parsing_options.allows_select_into= true;
          }
#line 43116 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2944:
#line 16579 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_NONE; }
#line 43122 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2945:
#line 16580 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 43128 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2946:
#line 16581 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 43134 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2947:
#line 16582 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 43140 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2948:
#line 16593 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 43146 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2949:
#line 16595 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 43152 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2950:
#line 16600 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_characteristics).anchor_trigger_name= NULL_CSTR;
            }
#line 43161 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2951:
#line 16606 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_characteristics).anchor_trigger_name= { (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length };
            }
#line 43170 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2952:
#line 16623 "sql_yacc.yy" /* yacc.c:1646  */
    {                 /* $11 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::TRIGGER, (yyvsp[-8].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) (yyvsp[-7].num);
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) (yyvsp[-6].num);
            sp->m_trg_chistics.ordering_clause= (yyvsp[0].trg_characteristics).ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= (yyvsp[0].trg_characteristics).anchor_trigger_name;

            lex->stmt_definition_begin= (yylsp[-9]).cpp.start;
            lex->ident.str= const_cast<char *>((yylsp[-4]).cpp.start);
            lex->ident.length= (yylsp[-2]).cpp.start - (yylsp[-4]).cpp.start;

            lex->sphead= sp;
            lex->spname= (yyvsp[-8].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 43206 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2953:
#line 16655 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[-6].table),
                                                    nullptr,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;

            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_create_trigger();
          }
#line 43237 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2954:
#line 16692 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yylsp[-5]).cpp.start;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 43258 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2955:
#line 16710 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yylsp[-5]).cpp.start;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 43279 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2956:
#line 16732 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $4 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->spname= (yyvsp[-1].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            sp->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 43306 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2957:
#line 16756 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $7 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
          }
#line 43314 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2958:
#line 16762 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $11 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if ((field_type == MYSQL_TYPE_STRING || field_type == MYSQL_TYPE_VARCHAR)
                && ((yyvsp[-1].type)->get_type_flags() & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (sp->m_return_field_def.init(YYTHD, "", field_type,
                                            (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                            (yyvsp[-1].type)->get_type_flags(), NULL, NULL, &NULL_CSTR, 0,
                                            (yyvsp[-1].type)->get_interval_list(),
                                            cs ? cs : YYTHD->variables.collation_database,
                                            (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(), nullptr,
                                            nullptr, nullptr, {},
                                            dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(YYTHD,
                                        &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 43359 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2959:
#line 16803 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 43371 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2960:
#line 16811 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER_THD(thd, ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
#line 43430 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2961:
#line 16870 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yylsp[0]).cpp.start;

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::PROCEDURE, (yyvsp[0].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
          }
#line 43454 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2962:
#line 16890 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$5*/
            Lex->sphead->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 43462 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2963:
#line 16895 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 43474 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2964:
#line 16903 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$10*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 43486 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2965:
#line 16911 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$12*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
#line 43499 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2966:
#line 16925 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_START;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_start((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 43508 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2967:
#line 16930 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_END;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_end((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 43517 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2968:
#line 16935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_prepare((yyvsp[0].xid));
          }
#line 43526 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2969:
#line 16940 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_commit((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 43535 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2970:
#line 16945 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_rollback((yyvsp[0].xid));
          }
#line 43544 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2971:
#line 16950 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_recover((yyvsp[0].is_not_empty));
          }
#line 43553 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2972:
#line 16957 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 43559 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2973:
#line 16958 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 43565 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2974:
#line 16962 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
            (yyval.xid)= xid;
          }
#line 43578 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2975:
#line 16971 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
            (yyval.xid)= xid;
          }
#line 43592 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2976:
#line 16981 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // check for overwflow of xid format id
            bool format_id_overflow_detected= ((yyvsp[0].ulong_num) > LONG_MAX);

            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[-2].string)->length() <= MAXBQUALSIZE
                                 && !format_id_overflow_detected);

            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
            (yyval.xid)= xid;
          }
#line 43611 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2977:
#line 16998 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43617 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2978:
#line 16999 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43623 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2979:
#line 17003 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 43629 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2980:
#line 17004 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_JOIN;        }
#line 43635 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2981:
#line 17005 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_RESUME;      }
#line 43641 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2982:
#line 17009 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 43647 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2983:
#line 17010 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_ONE_PHASE;   }
#line 43653 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2984:
#line 17015 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 43659 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2985:
#line 17017 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_SUSPEND;     }
#line 43665 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2986:
#line 17019 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_FOR_MIGRATE; }
#line 43671 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2987:
#line 17024 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_plugin(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str));
          }
#line 43681 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2988:
#line 17030 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_component((yyvsp[0].lex_str_list));
          }
#line 43691 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2989:
#line 17039 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_plugin(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 43701 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2990:
#line 17045 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_component((yyvsp[0].lex_str_list));
          }
#line 43711 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2991:
#line 17054 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list).init(YYTHD->mem_root);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 43721 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2992:
#line 17060 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list)= (yyvsp[-2].lex_str_list);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 43731 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2993:
#line 17069 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_import_table((yyvsp[0].lex_str_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_IMPORT;
          }
#line 43744 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2994:
#line 17087 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 43755 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2995:
#line 17097 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            /* Reject space characters around ':' */
            if ((yylsp[-4]).raw.start - (yylsp[-6]).raw.end != 1) {
              YYTHD->syntax_error_at((yylsp[-5]));
              MYSQL_YYABORT;
            }
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone((yyvsp[-6].lex_user), (yyvsp[-4].ulong_num), to_lex_cstring((yyvsp[0].lexer.lex_str)));

            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 43777 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2996:
#line 17118 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= null_lex_str;
          }
#line 43785 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2997:
#line 17122 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[-1].lexer.lex_str);
          }
#line 43793 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2998:
#line 17129 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
          }
#line 43801 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2999:
#line 17133 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_SPECIFIED;
          }
#line 43809 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3000:
#line 17137 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NONE;
          }
#line 43817 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3001:
#line 17143 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::USER_RESOURCE_GROUP; }
#line 43823 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3002:
#line 17144 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::SYSTEM_RESOURCE_GROUP; }
#line 43829 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3003:
#line 17149 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Make an empty list. */
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr)
              MYSQL_YYABORT;
          }
#line 43840 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3004:
#line 17155 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_vcpu_list_type)= (yyvsp[0].resource_group_vcpu_list_type); }
#line 43846 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3005:
#line 17160 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 43857 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3006:
#line 17167 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= (yyvsp[-2].resource_group_vcpu_list_type);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 43868 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3007:
#line 17177 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto cpu_id= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= (yyval.vcpu_range_type).end=
              static_cast<resourcegroups::platform::cpu_id_t>(cpu_id);
            DBUG_ASSERT((yyval.vcpu_range_type).start == cpu_id); // truncation check
          }
#line 43879 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3008:
#line 17184 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto start= my_strtoull((yyvsp[-2].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= static_cast<resourcegroups::platform::cpu_id_t>(start);
            DBUG_ASSERT((yyval.vcpu_range_type).start == start); // truncation check

            auto end= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).end= static_cast<resourcegroups::platform::cpu_id_t>(end);
            DBUG_ASSERT((yyval.vcpu_range_type).end == end); // truncation check
          }
#line 43893 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3009:
#line 17196 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 43899 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3010:
#line 17197 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= -static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 43905 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3011:
#line 17201 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_priority_type).is_default= true; }
#line 43911 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3012:
#line 17203 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_priority_type).is_default= false;
            (yyval.resource_group_priority_type).value= (yyvsp[0].num);
          }
#line 43920 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3013:
#line 17210 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_state_type).is_default= true; }
#line 43926 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3014:
#line 17212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= true;
          }
#line 43935 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3015:
#line 17217 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= false;
          }
#line 43944 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3016:
#line 17224 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= false; }
#line 43950 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3017:
#line 17225 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= true; }
#line 43956 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;


#line 43960 "/mnt/workspace/percona-server-8.0-source-tarballs/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (&yylloc, YYTHD, parse_tree, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }

  yyerror_range[1] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, &yylloc, YYTHD, parse_tree);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[1] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;

      yyerror_range[1] = *yylsp;
      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  yyerror_range[2] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the lookahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, YYTHD, parse_tree, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, &yylloc, YYTHD, parse_tree);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[*yyssp], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}
